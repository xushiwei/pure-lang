/* ut_union_timer.pure -- time pure-stlmap set sum and set union operations, 
   comparing them to the Pure standard lib set (+) operator */

using set, stlmap, system, math, stldict;

time_set empty n = () when 
  tm = clock;
  spin 1000;
  tm = (clock - tm) / 1000.0;
  printf "time for     set with n = %d 1000 times: %8.1f\n" (n,tm);
end with
  spin 0 = ();
  spin n = spin (n-1) when 
    xx = ss0 + ss1;
    yy = xx * ss1;
  end;
end when 
  elms0 = (0:2.. n);
  elms1 = (1:3..n);
  ss0 = if empty then emptyset else set elms0;
  ss1 = set $ elms1;
end;

time_orddict empty n = () when 
  tm = clock;
  spin 1000;
  tm = (clock - tm) / 1000.0;
  printf "time for orddict with n = %d 1000 times: %8.1f\n" (n,tm);
end with
  spin 0 = ();
  spin n = spin (n-1) when 
    xx = ss0 + ss1; 
    yy = xx * ss1;
  end;
end when 
  elms0 = (0:2.. n);
  elms1 = (1:3..n);
  ss0 = if empty then orddict [] else orddict elms0;
  ss1 = orddict elms1;
end;

time_stlset empty n = () when 
  tm = clock;
  spin 1000;
  tm = (clock - tm) / 1000.0;
  printf "time for  stlset with n = %d 1000 times: %8.1f\n" (n,tm);
end with
  spin 0 = ();
  spin n = spin (n-1) when 
    xx = stl::set_union ss0 ss1;
    yy = stl::set_intersection xx ss1;
  end;
end when 
  elms0 = (0:2.. n);
  elms1 = (1:3..n);
  ss0 = if empty then stl::emptystlmap else stl::stlmap elms0;
  ss1 = stl::stlmap elms1;
end;

time_overhead empty n = () when 
  tm = clock;
  spin 1000;
  tm = (clock - tm) / 1000.0;
  printf "time for    spin with n = %d 1000 times: %8.1f\n" (n,tm);
end with
  spin 0 = ();
  spin n = spin (n-1);
end;

test empty n = () when
  time_overhead empty n;
  t_set = time_set empty n;
  t_stl = time_orddict empty n;
  t_union = time_stlset empty n;
end;

/* Sample runs - Compare dict, pure-stldict and pure-stlmap

   (test 1 n) times set union and intersection where the left hand set,
   s1, is empty and the right hand set, s2 contains (1:3..n). (test 0 n) does
   the same except that s1 contains (0:2..n).

   Three subtests are performed. Each subtest uses a different operator to
   compute the union or sum.

     time_set times the union and intersection of Pure standard library sets,
     using + and *.

     time_orddict times the union and itersection of orddicts provided by
     stldict, using + and *.

     time_stlset times the union and intersections of pure-stlmap stlsets,
     using the stl::set_union and stl::set_intersection. For multimaps and
     multisets, not tested here, if produces a multiset union rather than
     multiset sum.

   Apparently, the pure-stlmap set functions are O(n) while those provided by
   dict and pure-stldict are O(n log n).

   Note that these operations are quite fast in all cases. Times are in
   milliseconds. 1000 set unions and 1000 set intersections are performed for
   each test. E.g., for two sets each with 500 elements, stlset takes 3.1
   milliseconds do a set union followed by a set intersection.

  
// one set is empty

> test 1 10;
time for    spin with n = 10 1000 times:      0.0
time for     set with n = 10 1000 times:     80.0
time for orddict with n = 10 1000 times:     90.0
time for  stlset with n = 10 1000 times:     30.0
()
> test 1 100;
time for    spin with n = 100 1000 times:      0.0
time for     set with n = 100 1000 times:   1450.0
time for orddict with n = 100 1000 times:    700.0
time for  stlset with n = 100 1000 times:    170.0
()
> test 1 1000;
time for    spin with n = 1000 1000 times:      0.0
time for     set with n = 1000 1000 times:  20210.0
time for orddict with n = 1000 1000 times:   9840.0
time for  stlset with n = 1000 1000 times:   1570.0
()
> test 1 10000;
time for    spin with n = 10000 1000 times:      0.0
time for     set with n = 10000 1000 times: 261110.0
time for orddict with n = 10000 1000 times: 136750.0
time for  stlset with n = 10000 1000 times:  15990.0
()

// Both sets are non-empty

> test 0 10;
time for    spin with n = 10 1000 times:      0.0
time for     set with n = 10 1000 times:    200.0
time for orddict with n = 10 1000 times:    140.0
time for  stlset with n = 10 1000 times:     40.0
()
> test 0 100;
time for    spin with n = 100 1000 times:      0.0
time for     set with n = 100 1000 times:   2630.0
time for orddict with n = 100 1000 times:   1110.0
time for  stlset with n = 100 1000 times:    310.0
()
> test 0 1000;
time for    spin with n = 1000 1000 times:      0.0
time for     set with n = 1000 1000 times:  35930.0
time for orddict with n = 1000 1000 times:  13380.0
time for  stlset with n = 1000 1000 times:   3060.0
()
> test 0 10000;
time for    spin with n = 10000 1000 times:      0.0
time for     set with n = 10000 1000 times: 484830.0
time for orddict with n = 10000 1000 times: 167950.0
time for  stlset with n = 10000 1000 times:  31840.0
()
> 


