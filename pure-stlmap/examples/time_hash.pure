/* time_hash.pure -- compare set element lookup times for hashdict, stlhash and
   stlhmap. 

   A lookup is a sequence like "if member set x then set!x else ()". The
   corresponding c functions are called, e.g., hashdict_member rather than
   member.

*/

using system, stlvec, stlvec::algorithms;

const repeats = 10000;
const lookups = 100;

using stlhmap;
using hashdict;

/*** hashdict *********************************************************/

time_hashdict words keys = () when
  tm = clock;
  do (insert ss) words;
  tm = (clock - tm) / 1000.0;
  printf "\nfill   hashdict: %8.1f msecs, %d words\n"  (tm,#ss);
  tm = clock;
  spin repeats;
  tm = (clock - tm) / 1000.0;
  printf "lookup hashdict: %8.1f msecs\n" tm;
end with
  spin 0 = ();
  spin n = lookup keys $ spin (n-1);
  lookup [] = ();
  // Note - using hashict_member is almost 8 times faster
  lookup (k:ks) = hashdict_member ss k $$ hashdict_get ss k $$ lookup ks;
  //lookup (k:ks) = member ss k $$ ss!k $$ lookup ks;
end when 
  ss = hashdict [];
end;

/*** stlhmap *********************************************************/

time_stlhmap words keys = () when
  tm = clock;
  insert ss words;
  tm = (clock - tm) / 1000.0;
  printf "\nfill    stlhmap: %8.1f msecs, %d words\n"  (tm,#ss);
  tm = clock;
  spin repeats;
  tm = (clock - tm) / 1000.0;
  printf "lookup  stlhmap: %8.1f msecs\n" tm;
  puts (get val);
end with
  spin 0 = ();
  spin n = lookup keys $ spin (n-1);
  lookup [] = ();
  lookup (k:ks) = stl::sh_member ss k $$ stl::sh_find_val ss k $$ lookup ks;
end when 
  ss = emptystlhset;
end;

/*** Harness ********************************************************/

// returns a stlvec of shuffled words and a list of keys
get_words num_words filename = words, keys when
  fp = case fopen filename  "r" of 
    fopen _ _ = pointer 0;
    fp = fp;
  end;
  all_words = if null fp then
                puts "Can't open word file" $$ emptystlvec
              else
                stlvec $ drop 200 (split "\n" (fget fp));
  fclose fp;
  num_words = min (#all_words) num_words;
  num_keys = min num_words lookups; 
  stl::random_shuffle all_words;
  words = stlvec (all_words,stl::svbeg,num_words);
  allkeys = stlvec words;
  stl::random_shuffle allkeys;
  keys = members (allkeys,0,num_keys);
end;

main num_words = () when
  words, keys = get_words num_words "anagram_groups_dict.txt";
  num_words = min num_words (#words);
  printf "Test %d lookups, %d repeats\n" (lookups,repeats);
  time_stlhmap words keys;
  time_hashdict words keys;
end;
    