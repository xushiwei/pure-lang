/* ut_set_timer.pure -- time set union and set intersection operations */

using set, stlmap, system, stldict;

const repeats = 100;

time_set empty n = () when 
  tm = clock;
  spin repeats;
  tm = (clock - tm) / 1000.0;
  printf "time for     set with n = %d and %d repeats: %8.1f\n" (n,repeats,tm);
end with
  spin 0 = ();
  spin n = spin (n-1) when 
    xx = ss0 + ss1;
    yy = xx * ss1;
  end;
end when 
  elms0 = (0:2.. n);
  elms1 = (1:3..n);
  ss0 = if empty then emptyset else set elms0;
  ss1 = set $ elms1;
end;

time_orddict empty n = () when 
  tm = clock;
  spin repeats;
  tm = (clock - tm) / 1000.0;
  printf "time for orddict with n = %d and %d repeats: %8.1f\n" (n,repeats,tm);
end with
  spin 0 = ();
  spin n = spin (n-1) when 
    xx = ss0 + ss1; 
    yy = xx * ss1;
  end;
end when 
  elms0 = (0:2.. n);
  elms1 = (1:3..n);
  ss0 = if empty then orddict [] else orddict elms0;
  ss1 = orddict elms1;
end;

time_stlset empty n = () when 
  tm = clock;
  spin repeats;
  tm = (clock - tm) / 1000.0;
  printf "time for  stlset with n = %d and %d repeats: %8.1f\n" (n,repeats,tm);
end with
  spin 0 = ();
  spin n = spin (n-1) when 
    xx = stl::union ss0 ss1;
    yy = stl::intersection xx ss1;
  end;
end when 
  elms0 = (0:2.. n);
  elms1 = (1:3..n);
  ss0 = if empty then emptystlmap else stlmap elms0;
  ss1 = stlmap elms1;
end;

time_overhead empty n = () when
  tm = clock;
  spin repeats;
  tm = (clock - tm) / 1000.0;
  printf "time for    spin with n = %d and %d repeats: %8.1f\n" (n,repeats,tm);
end with
  spin 0 = ();
  spin n = spin (n-1);
end;

test empty n = () when
  time_overhead empty n;
  t_set = time_set empty n;
  t_stl = time_orddict empty n;
  t_union = time_stlset empty n;
end;

/* Sample runs - Compare dict, pure-stldict and pure-stlmap

   (test 1 n) times set union and intersection where the left hand set,
   s1, is empty and the right hand set, s2 contains (1:3..n). (test 0 n) does
   the same except that s1 contains (0:2..n).

   Three subtests are performed. Each subtest uses a different operator to
   compute the union or sum.

     time_set times the union and intersection of Pure standard library sets,
     using + and *.

     time_orddict times the union and itersection of orddicts provided by
     stldict, using + and *.

     time_stlset times the union and intersections of pure-stlmap stlsets,
     using the stl::union and stl::intersection. For multimaps and
     multisets, not tested here, if produces a multiset union rather than
     multiset sum.

   > // Results for left set empty.
   > test 1 100;
   time for    spin with n = 100 and 100 repeats:      0.0
   time for     set with n = 100 and 100 repeats:    140.0
   time for orddict with n = 100 and 100 repeats:     80.0
   time for  stlset with n = 100 and 100 repeats:     20.0
   ()
   > test 1 10000;
   time for    spin with n = 10000 and 100 repeats:      0.0
   time for     set with n = 10000 and 100 repeats:  26070.0
   time for orddict with n = 10000 and 100 repeats:  14630.0
   time for  stlset with n = 10000 and 100 repeats:   1460.0
   ()

   > // Results for both sets have elements
   > test 0 100;
   time for    spin with n = 100 and 100 repeats:      0.0
   time for     set with n = 100 and 100 repeats:    270.0
   time for orddict with n = 100 and 100 repeats:    110.0
   time for  stlset with n = 100 and 100 repeats:     30.0
   ()
   > test 0 10000;
   time for    spin with n = 10000 and 100 repeats:      0.0
   time for     set with n = 10000 and 100 repeats:  48230.0
   time for orddict with n = 10000 and 100 repeats:  18270.0
   time for  stlset with n = 10000 and 100 repeats:   3010.0
   ()
   > 

*/


