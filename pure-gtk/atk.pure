/* /usr/include/atk-1.0/atk/atk.h: */
using "lib:atk";

namespace atk;
const atk::XY_SCREEN = 0;
const atk::XY_WINDOW = 1;
const atk::HYPERLINK_IS_INLINE = 1;
const atk::KEY_EVENT_PRESS = 0;
const atk::KEY_EVENT_RELEASE = 1;
const atk::KEY_EVENT_LAST_DEFINED = 2;
const atk::LAYER_INVALID = 0;
const atk::LAYER_BACKGROUND = 1;
const atk::LAYER_CANVAS = 2;
const atk::LAYER_WIDGET = 3;
const atk::LAYER_MDI = 4;
const atk::LAYER_POPUP = 5;
const atk::LAYER_OVERLAY = 6;
const atk::LAYER_WINDOW = 7;
const atk::RELATION_NULL = 0;
const atk::RELATION_CONTROLLED_BY = 1;
const atk::RELATION_CONTROLLER_FOR = 2;
const atk::RELATION_LABEL_FOR = 3;
const atk::RELATION_LABELLED_BY = 4;
const atk::RELATION_MEMBER_OF = 5;
const atk::RELATION_NODE_CHILD_OF = 6;
const atk::RELATION_FLOWS_TO = 7;
const atk::RELATION_FLOWS_FROM = 8;
const atk::RELATION_SUBWINDOW_OF = 9;
const atk::RELATION_EMBEDS = 10;
const atk::RELATION_EMBEDDED_BY = 11;
const atk::RELATION_POPUP_FOR = 12;
const atk::RELATION_PARENT_WINDOW_OF = 13;
const atk::RELATION_DESCRIBED_BY = 14;
const atk::RELATION_DESCRIPTION_FOR = 15;
const atk::RELATION_LAST_DEFINED = 16;
const atk::ROLE_INVALID = 0;
const atk::ROLE_ACCEL_LABEL = 1;
const atk::ROLE_ALERT = 2;
const atk::ROLE_ANIMATION = 3;
const atk::ROLE_ARROW = 4;
const atk::ROLE_CALENDAR = 5;
const atk::ROLE_CANVAS = 6;
const atk::ROLE_CHECK_BOX = 7;
const atk::ROLE_CHECK_MENU_ITEM = 8;
const atk::ROLE_COLOR_CHOOSER = 9;
const atk::ROLE_COLUMN_HEADER = 10;
const atk::ROLE_COMBO_BOX = 11;
const atk::ROLE_DATE_EDITOR = 12;
const atk::ROLE_DESKTOP_ICON = 13;
const atk::ROLE_DESKTOP_FRAME = 14;
const atk::ROLE_DIAL = 15;
const atk::ROLE_DIALOG = 16;
const atk::ROLE_DIRECTORY_PANE = 17;
const atk::ROLE_DRAWING_AREA = 18;
const atk::ROLE_FILE_CHOOSER = 19;
const atk::ROLE_FILLER = 20;
const atk::ROLE_FONT_CHOOSER = 21;
const atk::ROLE_FRAME = 22;
const atk::ROLE_GLASS_PANE = 23;
const atk::ROLE_HTML_CONTAINER = 24;
const atk::ROLE_ICON = 25;
const atk::ROLE_IMAGE = 26;
const atk::ROLE_INTERNAL_FRAME = 27;
const atk::ROLE_LABEL = 28;
const atk::ROLE_LAYERED_PANE = 29;
const atk::ROLE_LIST = 30;
const atk::ROLE_LIST_ITEM = 31;
const atk::ROLE_MENU = 32;
const atk::ROLE_MENU_BAR = 33;
const atk::ROLE_MENU_ITEM = 34;
const atk::ROLE_OPTION_PANE = 35;
const atk::ROLE_PAGE_TAB = 36;
const atk::ROLE_PAGE_TAB_LIST = 37;
const atk::ROLE_PANEL = 38;
const atk::ROLE_PASSWORD_TEXT = 39;
const atk::ROLE_POPUP_MENU = 40;
const atk::ROLE_PROGRESS_BAR = 41;
const atk::ROLE_PUSH_BUTTON = 42;
const atk::ROLE_RADIO_BUTTON = 43;
const atk::ROLE_RADIO_MENU_ITEM = 44;
const atk::ROLE_ROOT_PANE = 45;
const atk::ROLE_ROW_HEADER = 46;
const atk::ROLE_SCROLL_BAR = 47;
const atk::ROLE_SCROLL_PANE = 48;
const atk::ROLE_SEPARATOR = 49;
const atk::ROLE_SLIDER = 50;
const atk::ROLE_SPLIT_PANE = 51;
const atk::ROLE_SPIN_BUTTON = 52;
const atk::ROLE_STATUSBAR = 53;
const atk::ROLE_TABLE = 54;
const atk::ROLE_TABLE_CELL = 55;
const atk::ROLE_TABLE_COLUMN_HEADER = 56;
const atk::ROLE_TABLE_ROW_HEADER = 57;
const atk::ROLE_TEAR_OFF_MENU_ITEM = 58;
const atk::ROLE_TERMINAL = 59;
const atk::ROLE_TEXT = 60;
const atk::ROLE_TOGGLE_BUTTON = 61;
const atk::ROLE_TOOL_BAR = 62;
const atk::ROLE_TOOL_TIP = 63;
const atk::ROLE_TREE = 64;
const atk::ROLE_TREE_TABLE = 65;
const atk::ROLE_UNKNOWN = 66;
const atk::ROLE_VIEWPORT = 67;
const atk::ROLE_WINDOW = 68;
const atk::ROLE_HEADER = 69;
const atk::ROLE_FOOTER = 70;
const atk::ROLE_PARAGRAPH = 71;
const atk::ROLE_RULER = 72;
const atk::ROLE_APPLICATION = 73;
const atk::ROLE_AUTOCOMPLETE = 74;
const atk::ROLE_EDITBAR = 75;
const atk::ROLE_EMBEDDED = 76;
const atk::ROLE_ENTRY = 77;
const atk::ROLE_CHART = 78;
const atk::ROLE_CAPTION = 79;
const atk::ROLE_DOCUMENT_FRAME = 80;
const atk::ROLE_HEADING = 81;
const atk::ROLE_PAGE = 82;
const atk::ROLE_SECTION = 83;
const atk::ROLE_REDUNDANT_OBJECT = 84;
const atk::ROLE_FORM = 85;
const atk::ROLE_LINK = 86;
const atk::ROLE_INPUT_METHOD_WINDOW = 87;
const atk::ROLE_LAST_DEFINED = 88;
const atk::STATE_INVALID = 0;
const atk::STATE_ACTIVE = 1;
const atk::STATE_ARMED = 2;
const atk::STATE_BUSY = 3;
const atk::STATE_CHECKED = 4;
const atk::STATE_DEFUNCT = 5;
const atk::STATE_EDITABLE = 6;
const atk::STATE_ENABLED = 7;
const atk::STATE_EXPANDABLE = 8;
const atk::STATE_EXPANDED = 9;
const atk::STATE_FOCUSABLE = 10;
const atk::STATE_FOCUSED = 11;
const atk::STATE_HORIZONTAL = 12;
const atk::STATE_ICONIFIED = 13;
const atk::STATE_MODAL = 14;
const atk::STATE_MULTI_LINE = 15;
const atk::STATE_MULTISELECTABLE = 16;
const atk::STATE_OPAQUE = 17;
const atk::STATE_PRESSED = 18;
const atk::STATE_RESIZABLE = 19;
const atk::STATE_SELECTABLE = 20;
const atk::STATE_SELECTED = 21;
const atk::STATE_SENSITIVE = 22;
const atk::STATE_SHOWING = 23;
const atk::STATE_SINGLE_LINE = 24;
const atk::STATE_STALE = 25;
const atk::STATE_TRANSIENT = 26;
const atk::STATE_VERTICAL = 27;
const atk::STATE_VISIBLE = 28;
const atk::STATE_MANAGES_DESCENDANTS = 29;
const atk::STATE_INDETERMINATE = 30;
const atk::STATE_TRUNCATED = 31;
const atk::STATE_REQUIRED = 32;
const atk::STATE_INVALID_ENTRY = 33;
const atk::STATE_SUPPORTS_AUTOCOMPLETION = 34;
const atk::STATE_SELECTABLE_TEXT = 35;
const atk::STATE_DEFAULT = 36;
const atk::STATE_ANIMATED = 37;
const atk::STATE_VISITED = 38;
const atk::STATE_LAST_DEFINED = 39;
const atk::TEXT_ATTR_INVALID = 0;
const atk::TEXT_ATTR_LEFT_MARGIN = 1;
const atk::TEXT_ATTR_RIGHT_MARGIN = 2;
const atk::TEXT_ATTR_INDENT = 3;
const atk::TEXT_ATTR_INVISIBLE = 4;
const atk::TEXT_ATTR_EDITABLE = 5;
const atk::TEXT_ATTR_PIXELS_ABOVE_LINES = 6;
const atk::TEXT_ATTR_PIXELS_BELOW_LINES = 7;
const atk::TEXT_ATTR_PIXELS_INSIDE_WRAP = 8;
const atk::TEXT_ATTR_BG_FULL_HEIGHT = 9;
const atk::TEXT_ATTR_RISE = 10;
const atk::TEXT_ATTR_UNDERLINE = 11;
const atk::TEXT_ATTR_STRIKETHROUGH = 12;
const atk::TEXT_ATTR_SIZE = 13;
const atk::TEXT_ATTR_SCALE = 14;
const atk::TEXT_ATTR_WEIGHT = 15;
const atk::TEXT_ATTR_LANGUAGE = 16;
const atk::TEXT_ATTR_FAMILY_NAME = 17;
const atk::TEXT_ATTR_BG_COLOR = 18;
const atk::TEXT_ATTR_FG_COLOR = 19;
const atk::TEXT_ATTR_BG_STIPPLE = 20;
const atk::TEXT_ATTR_FG_STIPPLE = 21;
const atk::TEXT_ATTR_WRAP_MODE = 22;
const atk::TEXT_ATTR_DIRECTION = 23;
const atk::TEXT_ATTR_JUSTIFICATION = 24;
const atk::TEXT_ATTR_STRETCH = 25;
const atk::TEXT_ATTR_VARIANT = 26;
const atk::TEXT_ATTR_STYLE = 27;
const atk::TEXT_ATTR_LAST_DEFINED = 28;
const atk::TEXT_BOUNDARY_CHAR = 0;
const atk::TEXT_BOUNDARY_WORD_START = 1;
const atk::TEXT_BOUNDARY_WORD_END = 2;
const atk::TEXT_BOUNDARY_SENTENCE_START = 3;
const atk::TEXT_BOUNDARY_SENTENCE_END = 4;
const atk::TEXT_BOUNDARY_LINE_START = 5;
const atk::TEXT_BOUNDARY_LINE_END = 6;
const atk::TEXT_CLIP_NONE = 0;
const atk::TEXT_CLIP_MIN = 1;
const atk::TEXT_CLIP_MAX = 2;
const atk::TEXT_CLIP_BOTH = 3;
extern int atk_state_type_register(char*) = state_type_register;
extern char* atk_state_type_get_name(int) = state_type_get_name;
extern int atk_state_type_for_name(char*) = state_type_for_name;
extern int atk_role_register(char*) = role_register;
extern long atk_object_get_type() = object_get_type;
extern long atk_implementor_get_type() = implementor_get_type;
extern AtkObject* atk_implementor_ref_accessible(AtkImplementor*) = implementor_ref_accessible;
extern char* atk_object_get_name(AtkObject*) = object_get_name;
extern char* atk_object_get_description(AtkObject*) = object_get_description;
extern AtkObject* atk_object_get_parent(AtkObject*) = object_get_parent;
extern int atk_object_get_n_accessible_children(AtkObject*) = object_get_n_accessible_children;
extern AtkObject* atk_object_ref_accessible_child(AtkObject*, int) = object_ref_accessible_child;
extern AtkRelationSet* atk_object_ref_relation_set(AtkObject*) = object_ref_relation_set;
extern int atk_object_get_role(AtkObject*) = object_get_role;
extern int atk_object_get_layer(AtkObject*) = object_get_layer;
extern int atk_object_get_mdi_zorder(AtkObject*) = object_get_mdi_zorder;
extern AtkAttributeSet* atk_object_get_attributes(AtkObject*) = object_get_attributes;
extern AtkStateSet* atk_object_ref_state_set(AtkObject*) = object_ref_state_set;
extern int atk_object_get_index_in_parent(AtkObject*) = object_get_index_in_parent;
extern void atk_object_set_name(AtkObject*, char*) = object_set_name;
extern void atk_object_set_description(AtkObject*, char*) = object_set_description;
extern void atk_object_set_parent(AtkObject*, AtkObject*) = object_set_parent;
extern void atk_object_set_role(AtkObject*, int) = object_set_role;
extern int atk_object_connect_property_change_handler(AtkObject*, void**) = object_connect_property_change_handler;
extern void atk_object_remove_property_change_handler(AtkObject*, int) = object_remove_property_change_handler;
extern void atk_object_notify_state_change(AtkObject*, long, int) = object_notify_state_change;
extern void atk_object_initialize(AtkObject*, void*) = object_initialize;
extern char* atk_role_get_name(int) = role_get_name;
extern int atk_role_for_name(char*) = role_for_name;
extern int atk_object_add_relationship(AtkObject*, int, AtkObject*) = object_add_relationship;
extern int atk_object_remove_relationship(AtkObject*, int, AtkObject*) = object_remove_relationship;
extern char* atk_role_get_localized_name(int) = role_get_localized_name;
extern long atk_action_get_type() = action_get_type;
extern int atk_action_do_action(AtkAction*, int) = action_do_action;
extern int atk_action_get_n_actions(AtkAction*) = action_get_n_actions;
extern char* atk_action_get_description(AtkAction*, int) = action_get_description;
extern char* atk_action_get_name(AtkAction*, int) = action_get_name;
extern char* atk_action_get_keybinding(AtkAction*, int) = action_get_keybinding;
extern int atk_action_set_description(AtkAction*, int, char*) = action_set_description;
extern char* atk_action_get_localized_name(AtkAction*, int) = action_get_localized_name;
extern long atk_util_get_type() = util_get_type;
extern int atk_add_focus_tracker(void*) = add_focus_tracker;
extern void atk_remove_focus_tracker(int) = remove_focus_tracker;
extern void atk_focus_tracker_init(void*) = focus_tracker_init;
extern void atk_focus_tracker_notify(AtkObject*) = focus_tracker_notify;
extern int atk_add_global_event_listener(void*, char*) = add_global_event_listener;
extern void atk_remove_global_event_listener(int) = remove_global_event_listener;
extern int atk_add_key_event_listener(void*, void*) = add_key_event_listener;
extern void atk_remove_key_event_listener(int) = remove_key_event_listener;
extern AtkObject* atk_get_root() = get_root;
extern AtkObject* atk_get_focus_object() = get_focus_object;
extern char* atk_get_toolkit_name() = get_toolkit_name;
extern char* atk_get_toolkit_version() = get_toolkit_version;
extern char* atk_get_version() = get_version;
extern long atk_rectangle_get_type() = rectangle_get_type;
extern long atk_component_get_type() = component_get_type;
extern int atk_component_add_focus_handler(AtkComponent*, void*) = component_add_focus_handler;
extern int atk_component_contains(AtkComponent*, int, int, int) = component_contains;
extern AtkObject* atk_component_ref_accessible_at_point(AtkComponent*, int, int, int) = component_ref_accessible_at_point;
extern void atk_component_get_extents(AtkComponent*, int*, int*, int*, int*, int) = component_get_extents;
extern void atk_component_get_position(AtkComponent*, int*, int*, int) = component_get_position;
extern void atk_component_get_size(AtkComponent*, int*, int*) = component_get_size;
extern int atk_component_get_layer(AtkComponent*) = component_get_layer;
extern int atk_component_get_mdi_zorder(AtkComponent*) = component_get_mdi_zorder;
extern int atk_component_grab_focus(AtkComponent*) = component_grab_focus;
extern void atk_component_remove_focus_handler(AtkComponent*, int) = component_remove_focus_handler;
extern int atk_component_set_extents(AtkComponent*, int, int, int, int, int) = component_set_extents;
extern int atk_component_set_position(AtkComponent*, int, int, int) = component_set_position;
extern int atk_component_set_size(AtkComponent*, int, int) = component_set_size;
extern double atk_component_get_alpha(AtkComponent*) = component_get_alpha;
extern long atk_document_get_type() = document_get_type;
extern char* atk_document_get_document_type(AtkDocument*) = document_get_document_type;
extern void* atk_document_get_document(AtkDocument*) = document_get_document;
extern char* atk_document_get_locale(AtkDocument*) = document_get_locale;
extern AtkAttributeSet* atk_document_get_attributes(AtkDocument*) = document_get_attributes;
extern char* atk_document_get_attribute_value(AtkDocument*, char*) = document_get_attribute_value;
extern int atk_document_set_attribute_value(AtkDocument*, char*, char*) = document_set_attribute_value;
extern int atk_text_attribute_register(char*) = text_attribute_register;
extern long atk_text_get_type() = text_get_type;
extern char* atk_text_get_text(AtkText*, int, int) = text_get_text;
extern int atk_text_get_character_at_offset(AtkText*, int) = text_get_character_at_offset;
extern char* atk_text_get_text_after_offset(AtkText*, int, int, int*, int*) = text_get_text_after_offset;
extern char* atk_text_get_text_at_offset(AtkText*, int, int, int*, int*) = text_get_text_at_offset;
extern char* atk_text_get_text_before_offset(AtkText*, int, int, int*, int*) = text_get_text_before_offset;
extern int atk_text_get_caret_offset(AtkText*) = text_get_caret_offset;
extern void atk_text_get_character_extents(AtkText*, int, int*, int*, int*, int*, int) = text_get_character_extents;
extern AtkAttributeSet* atk_text_get_run_attributes(AtkText*, int, int*, int*) = text_get_run_attributes;
extern AtkAttributeSet* atk_text_get_default_attributes(AtkText*) = text_get_default_attributes;
extern int atk_text_get_character_count(AtkText*) = text_get_character_count;
extern int atk_text_get_offset_at_point(AtkText*, int, int, int) = text_get_offset_at_point;
extern int atk_text_get_n_selections(AtkText*) = text_get_n_selections;
extern char* atk_text_get_selection(AtkText*, int, int*, int*) = text_get_selection;
extern int atk_text_add_selection(AtkText*, int, int) = text_add_selection;
extern int atk_text_remove_selection(AtkText*, int) = text_remove_selection;
extern int atk_text_set_selection(AtkText*, int, int, int) = text_set_selection;
extern int atk_text_set_caret_offset(AtkText*, int) = text_set_caret_offset;
extern void atk_text_get_range_extents(AtkText*, int, int, int, AtkTextRectangle*) = text_get_range_extents;
extern AtkTextRange** atk_text_get_bounded_ranges(AtkText*, AtkTextRectangle*, int, int, int) = text_get_bounded_ranges;
extern void atk_text_free_ranges(AtkTextRange**) = text_free_ranges;
extern void atk_attribute_set_free(AtkAttributeSet*) = attribute_set_free;
extern char* atk_text_attribute_get_name(int) = text_attribute_get_name;
extern int atk_text_attribute_for_name(char*) = text_attribute_for_name;
extern char* atk_text_attribute_get_value(int, int) = text_attribute_get_value;
extern long atk_editable_text_get_type() = editable_text_get_type;
extern int atk_editable_text_set_run_attributes(AtkEditableText*, AtkAttributeSet*, int, int) = editable_text_set_run_attributes;
extern void atk_editable_text_set_text_contents(AtkEditableText*, char*) = editable_text_set_text_contents;
extern void atk_editable_text_insert_text(AtkEditableText*, char*, int, int*) = editable_text_insert_text;
extern void atk_editable_text_copy_text(AtkEditableText*, int, int) = editable_text_copy_text;
extern void atk_editable_text_cut_text(AtkEditableText*, int, int) = editable_text_cut_text;
extern void atk_editable_text_delete_text(AtkEditableText*, int, int) = editable_text_delete_text;
extern void atk_editable_text_paste_text(AtkEditableText*, int) = editable_text_paste_text;
extern long atk_gobject_accessible_get_type() = gobject_accessible_get_type;
extern AtkObject* atk_gobject_accessible_for_object(GObject*) = gobject_accessible_for_object;
extern GObject* atk_gobject_accessible_get_object(AtkGObjectAccessible*) = gobject_accessible_get_object;
extern long atk_hyperlink_get_type() = hyperlink_get_type;
extern char* atk_hyperlink_get_uri(AtkHyperlink*, int) = hyperlink_get_uri;
extern AtkObject* atk_hyperlink_get_object(AtkHyperlink*, int) = hyperlink_get_object;
extern int atk_hyperlink_get_end_index(AtkHyperlink*) = hyperlink_get_end_index;
extern int atk_hyperlink_get_start_index(AtkHyperlink*) = hyperlink_get_start_index;
extern int atk_hyperlink_is_valid(AtkHyperlink*) = hyperlink_is_valid;
extern int atk_hyperlink_is_inline(AtkHyperlink*) = hyperlink_is_inline;
extern int atk_hyperlink_get_n_anchors(AtkHyperlink*) = hyperlink_get_n_anchors;
extern int atk_hyperlink_is_selected_link(AtkHyperlink*) = hyperlink_is_selected_link;
extern long atk_hyperlink_impl_get_type() = hyperlink_impl_get_type;
extern AtkHyperlink* atk_hyperlink_impl_get_hyperlink(AtkHyperlinkImpl*) = hyperlink_impl_get_hyperlink;
extern long atk_hypertext_get_type() = hypertext_get_type;
extern AtkHyperlink* atk_hypertext_get_link(AtkHypertext*, int) = hypertext_get_link;
extern int atk_hypertext_get_n_links(AtkHypertext*) = hypertext_get_n_links;
extern int atk_hypertext_get_link_index(AtkHypertext*, int) = hypertext_get_link_index;
extern long atk_image_get_type() = image_get_type;
extern char* atk_image_get_image_description(AtkImage*) = image_get_image_description;
extern void atk_image_get_image_size(AtkImage*, int*, int*) = image_get_image_size;
extern int atk_image_set_image_description(AtkImage*, char*) = image_set_image_description;
extern void atk_image_get_image_position(AtkImage*, int*, int*, int) = image_get_image_position;
extern char* atk_image_get_image_locale(AtkImage*) = image_get_image_locale;
extern long atk_no_op_object_get_type() = no_op_object_get_type;
extern AtkObject* atk_no_op_object_new(GObject*) = no_op_object_new;
extern long atk_object_factory_get_type() = object_factory_get_type;
extern AtkObject* atk_object_factory_create_accessible(AtkObjectFactory*, GObject*) = object_factory_create_accessible;
extern void atk_object_factory_invalidate(AtkObjectFactory*) = object_factory_invalidate;
extern long atk_object_factory_get_accessible_type(AtkObjectFactory*) = object_factory_get_accessible_type;
extern long atk_no_op_object_factory_get_type() = no_op_object_factory_get_type;
extern AtkObjectFactory* atk_no_op_object_factory_new() = no_op_object_factory_new;
extern long atk_registry_get_type() = registry_get_type;
extern void atk_registry_set_factory_type(AtkRegistry*, long, long) = registry_set_factory_type;
extern long atk_registry_get_factory_type(AtkRegistry*, long) = registry_get_factory_type;
extern AtkObjectFactory* atk_registry_get_factory(AtkRegistry*, long) = registry_get_factory;
extern AtkRegistry* atk_get_default_registry() = get_default_registry;
extern long atk_relation_get_type() = relation_get_type;
extern int atk_relation_type_register(char*) = relation_type_register;
extern char* atk_relation_type_get_name(int) = relation_type_get_name;
extern int atk_relation_type_for_name(char*) = relation_type_for_name;
extern AtkRelation* atk_relation_new(AtkObject**, int, int) = relation_new;
extern int atk_relation_get_relation_type(AtkRelation*) = relation_get_relation_type;
extern GPtrArray* atk_relation_get_target(AtkRelation*) = relation_get_target;
extern void atk_relation_add_target(AtkRelation*, AtkObject*) = relation_add_target;
extern long atk_relation_set_get_type() = relation_set_get_type;
extern AtkRelationSet* atk_relation_set_new() = relation_set_new;
extern int atk_relation_set_contains(AtkRelationSet*, int) = relation_set_contains;
extern void atk_relation_set_remove(AtkRelationSet*, AtkRelation*) = relation_set_remove;
extern void atk_relation_set_add(AtkRelationSet*, AtkRelation*) = relation_set_add;
extern int atk_relation_set_get_n_relations(AtkRelationSet*) = relation_set_get_n_relations;
extern AtkRelation* atk_relation_set_get_relation(AtkRelationSet*, int) = relation_set_get_relation;
extern AtkRelation* atk_relation_set_get_relation_by_type(AtkRelationSet*, int) = relation_set_get_relation_by_type;
extern void atk_relation_set_add_relation_by_type(AtkRelationSet*, int, AtkObject*) = relation_set_add_relation_by_type;
extern long atk_selection_get_type() = selection_get_type;
extern int atk_selection_add_selection(AtkSelection*, int) = selection_add_selection;
extern int atk_selection_clear_selection(AtkSelection*) = selection_clear_selection;
extern AtkObject* atk_selection_ref_selection(AtkSelection*, int) = selection_ref_selection;
extern int atk_selection_get_selection_count(AtkSelection*) = selection_get_selection_count;
extern int atk_selection_is_child_selected(AtkSelection*, int) = selection_is_child_selected;
extern int atk_selection_remove_selection(AtkSelection*, int) = selection_remove_selection;
extern int atk_selection_select_all_selection(AtkSelection*) = selection_select_all_selection;
extern long atk_state_set_get_type() = state_set_get_type;
extern AtkStateSet* atk_state_set_new() = state_set_new;
extern int atk_state_set_is_empty(AtkStateSet*) = state_set_is_empty;
extern int atk_state_set_add_state(AtkStateSet*, int) = state_set_add_state;
extern void atk_state_set_add_states(AtkStateSet*, int*, int) = state_set_add_states;
extern void atk_state_set_clear_states(AtkStateSet*) = state_set_clear_states;
extern int atk_state_set_contains_state(AtkStateSet*, int) = state_set_contains_state;
extern int atk_state_set_contains_states(AtkStateSet*, int*, int) = state_set_contains_states;
extern int atk_state_set_remove_state(AtkStateSet*, int) = state_set_remove_state;
extern AtkStateSet* atk_state_set_and_sets(AtkStateSet*, AtkStateSet*) = state_set_and_sets;
extern AtkStateSet* atk_state_set_or_sets(AtkStateSet*, AtkStateSet*) = state_set_or_sets;
extern AtkStateSet* atk_state_set_xor_sets(AtkStateSet*, AtkStateSet*) = state_set_xor_sets;
extern long atk_streamable_content_get_type() = streamable_content_get_type;
extern int atk_streamable_content_get_n_mime_types(AtkStreamableContent*) = streamable_content_get_n_mime_types;
extern char* atk_streamable_content_get_mime_type(AtkStreamableContent*, int) = streamable_content_get_mime_type;
extern GIOChannel* atk_streamable_content_get_stream(AtkStreamableContent*, char*) = streamable_content_get_stream;
extern char* atk_streamable_content_get_uri(AtkStreamableContent*, char*) = streamable_content_get_uri;
extern long atk_table_get_type() = table_get_type;
extern AtkObject* atk_table_ref_at(AtkTable*, int, int) = table_ref_at;
extern int atk_table_get_index_at(AtkTable*, int, int) = table_get_index_at;
extern int atk_table_get_column_at_index(AtkTable*, int) = table_get_column_at_index;
extern int atk_table_get_row_at_index(AtkTable*, int) = table_get_row_at_index;
extern int atk_table_get_n_columns(AtkTable*) = table_get_n_columns;
extern int atk_table_get_n_rows(AtkTable*) = table_get_n_rows;
extern int atk_table_get_column_extent_at(AtkTable*, int, int) = table_get_column_extent_at;
extern int atk_table_get_row_extent_at(AtkTable*, int, int) = table_get_row_extent_at;
extern AtkObject* atk_table_get_caption(AtkTable*) = table_get_caption;
extern char* atk_table_get_column_description(AtkTable*, int) = table_get_column_description;
extern AtkObject* atk_table_get_column_header(AtkTable*, int) = table_get_column_header;
extern char* atk_table_get_row_description(AtkTable*, int) = table_get_row_description;
extern AtkObject* atk_table_get_row_header(AtkTable*, int) = table_get_row_header;
extern AtkObject* atk_table_get_summary(AtkTable*) = table_get_summary;
extern void atk_table_set_caption(AtkTable*, AtkObject*) = table_set_caption;
extern void atk_table_set_column_description(AtkTable*, int, char*) = table_set_column_description;
extern void atk_table_set_column_header(AtkTable*, int, AtkObject*) = table_set_column_header;
extern void atk_table_set_row_description(AtkTable*, int, char*) = table_set_row_description;
extern void atk_table_set_row_header(AtkTable*, int, AtkObject*) = table_set_row_header;
extern void atk_table_set_summary(AtkTable*, AtkObject*) = table_set_summary;
extern int atk_table_get_selected_columns(AtkTable*, int**) = table_get_selected_columns;
extern int atk_table_get_selected_rows(AtkTable*, int**) = table_get_selected_rows;
extern int atk_table_is_column_selected(AtkTable*, int) = table_is_column_selected;
extern int atk_table_is_row_selected(AtkTable*, int) = table_is_row_selected;
extern int atk_table_is_selected(AtkTable*, int, int) = table_is_selected;
extern int atk_table_add_row_selection(AtkTable*, int) = table_add_row_selection;
extern int atk_table_remove_row_selection(AtkTable*, int) = table_remove_row_selection;
extern int atk_table_add_column_selection(AtkTable*, int) = table_add_column_selection;
extern int atk_table_remove_column_selection(AtkTable*, int) = table_remove_column_selection;
extern long atk_misc_get_type() = misc_get_type;
extern void atk_misc_threads_enter(AtkMisc*) = misc_threads_enter;
extern void atk_misc_threads_leave(AtkMisc*) = misc_threads_leave;
extern AtkMisc* atk_misc_get_instance() = misc_get_instance;
extern long atk_value_get_type() = value_get_type;
extern void atk_value_get_current_value(AtkValue*, GValue*) = value_get_current_value;
extern void atk_value_get_maximum_value(AtkValue*, GValue*) = value_get_maximum_value;
extern void atk_value_get_minimum_value(AtkValue*, GValue*) = value_get_minimum_value;
extern int atk_value_set_current_value(AtkValue*, GValue*) = value_set_current_value;
extern void atk_value_get_minimum_increment(AtkValue*, GValue*) = value_get_minimum_increment;
