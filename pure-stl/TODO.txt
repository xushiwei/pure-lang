

Changes to be made before release
---------------------------------

Provide an "umbrella" module which simply loads all the available Pure-stl
modules, like what's been done for pure-gsl.

Add a sort convenience function in stlvec so the sv_sort module does not have
to be loaded. (Would incure a very short amount of duplicate code if sv_sort
were loaded). I.e., there are users who have no use for the STL algorithms,
they just want a O(1) container. Like list and matrix, these should be
sortable.

Add 100% coverage for index out of bounds, range overflow etc. STL does not
generally check for out of bound indexes, copy overflow, etc. In this regard
it is like raw C. Currently, Pure-stl does check for these issues, except in a
low number of cases. E.g., set intersection with result into an existing
stlvec (i.e., not a back insert), where you don't know the size of the
result. I think it would be better to back insert onto an empty temp vector,
check if the result fits, and only then copy into the middle of a vector.


Changes to Makefile
-------------------

Reduce the number of dlls to two: stlvec and stlalgorithm. If we add stlmap
and stlhmap, stlvec dll would be replaced by stlcontainer. (This would be
backward compatible because the dlls are loaded by pure modules that are part
of the interface, i.e., are not to be loaded directly by users).

Add 'make install' and 'make uninstall' targets when the package is about to
be released.

Change 'make tests' to 'make test'. Change compile with -w flag. Add a
clean-test target to remove x_sv_all.

Move all unit tests to a subdirectory.

Eventually remove ut_x_sv_refc.pure.


Code Changes
------------

Change copyright/licence notice when package is ready to be released. Will be
the same as for pure-sql3.

Consider some renaming (generally to longer names) to make the code easier to
read.

Add more comments.


README Changes
--------------

Reflect the above changes.

Finish the rough draft -- there are missing and incomplete sections. E.g.,
installation, error handling.

Edit and proof the current rough draft.


Enhancements
------------

Consider adding interfaces to STL's map and GNU STL's hash map. No algorithms
would be provided -- just the container interfaces. For me this has low
priority, given dict, but it would round out the STl interface.

Improve error reporting.

















