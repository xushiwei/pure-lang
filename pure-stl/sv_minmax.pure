/* sv_minmax.pure -- Pure interface for C++ STL minmax algorithms
    
   Copyright (c) 2011 by Peter Summerland <p.summerland@gmail.com>

   DRAFT FOR DISCUSSION PURPOSES ONLY.

*/

using system;
using stlvec;
using "lib:stlalgorithm";

namespace stl;

private extern bool sva_next_permutation(expr* tpl, expr* cmp);
private extern bool sva_prev_permutation(expr* tpl, expr* cmp);
private extern bool sva_lexicographical_compare(expr* tpl1,
                                                expr* tpl2, expr* cmp);
private extern int  sva_min_element(expr* tpl, expr* cmp);
private extern int  sva_max_element(expr* tpl, expr* cmp);

min_element it::svit cmp = sva_min_element it cmp;

max_element it::svit cmp = sva_max_element it cmp;

lexicographical_compare it1::svit it2::svit cmp =
  sva_lexicographical_compare it1 it2 cmp;

next_permutation it::mutable_svit cmp = sva_next_permutation it cmp;

prev_permutation it::mutable_svit cmp = sva_prev_permutation it cmp;
