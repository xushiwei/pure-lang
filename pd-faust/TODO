
Optimizations:

- Deactivated units should be skipped in computation once their output falls
  below a certain threshold.

Features:

- Implement passive controls in fsynth~ objects. The problem here is how to
  aggregate the values of the different voices: sum, average, min, max?

- Add support for polyphonic aftertouch and channel pressure messages. It
  should be possible to map these to Faust controls as well.

- Add support for erasing and editing already recorded automation data. This
  might use something like "touch mode" in Cubase and Logic, or an explicit
  "punch in/out" control. (Suggested by Julius Smith.)

- Distinguish between different external MIDI and OSC controllers in write
  mode, so that parameters can be kept in sync across different devices.

Design Issues:

- Refactor the sources so that fsynth~ and fdsp~ share as much code as
  possible.

- Voice controls (freq, gain, gate) are currently addressed using their
  basename only (without path), and only one of these (the first one) will be
  used if different instances of a voice control exist in different subgroups.
  This is done for efficiency, but it might be useful to handle multiple
  instances of the voice controls in different subgroups. Also, we may want
  to make the basenames of the voice controls configurable.

- There's no special handling of coarse/fine MIDI controllers in the current
  implementation. Maybe there should be a way to map them to a single Faust
  control?

- To accommodate buggy and/or incomplete MMC implementations in sequencer
  programs, the oscseq object always assumes an SMPTE framerate of 30 when
  interpreting MMC locate commands. At present there's no way to configure the
  framerate either, so you should check that your sequencer indeed uses the
  30fps value in order to get accurate playback positions.
