
# -*- makefile-gmake -*-

# Location of the main source directory. To be overridden in submakefiles.
srcdir = .

# Platform-specific setup. The Makefile should get this right in most cases.
# If not, then you might want to edit some of the settings below or simply
# pass the corresponding variables on the make command line.

# Package version.
version = @version@

# Try to guess the host system type.
host = $(shell $(srcdir)/config.guess)

#PIC = -fPIC # uncomment for x86-64 compilation
DLL = .so
shared = -shared

# Take care of some common systems.
ifneq "$(findstring -mingw,$(host))" ""
# Windows (untested)
EXE = .exe
DLL = .dll
endif
ifneq "$(findstring -darwin,$(host))" ""
# OSX (untested)
DLL = .dylib
shared = -dynamiclib
endif
ifneq "$(findstring x86_64-,$(host))" ""
# 64 bit, needs -fPIC flag
PIC = -fPIC
endif

# Try to guess the Pd installation prefix:
prefix = $(patsubst %/bin/pd$(EXE),%,$(shell which pd 2>/dev/null))
ifeq ($(strip $(prefix)),)
# Fall back to /usr/local.
prefix = /usr/local
endif

# Installation goes into $(libdir)/pd, you can also set this directly
# instead of $(prefix).
libdir = $(prefix)/lib

# Pd library path.
pdlibdir = $(libdir)/pd

# Install dir for the externals and accompanying stuff.
pdextradir = $(pdlibdir)/extra/faust

# Figure out the Pd external suffix.
PDDLL = DLL
ifneq "$(findstring -linux,$(host))" ""
# Linux
PDDLL = .pd_linux
endif
ifneq "$(findstring -darwin,$(host))" ""
# OSX (untested)
PDDLL = .pd_darwin
endif
