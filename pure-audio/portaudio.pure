/* /usr/include/portaudio.h: */
using "lib:audio";

namespace Pa;
const Pa::FormatIsSupported = 0;
const Pa::FramesPerBufferUnspecified = 0;
const Pa::NoError = 0;
const Pa::NotInitialized = -10000;
const Pa::UnanticipatedHostError = -9999;
const Pa::InvalidChannelCount = -9998;
const Pa::InvalidSampleRate = -9997;
const Pa::InvalidDevice = -9996;
const Pa::InvalidFlag = -9995;
const Pa::SampleFormatNotSupported = -9994;
const Pa::BadIODeviceCombination = -9993;
const Pa::InsufficientMemory = -9992;
const Pa::BufferTooBig = -9991;
const Pa::BufferTooSmall = -9990;
const Pa::NullCallback = -9989;
const Pa::BadStreamPtr = -9988;
const Pa::TimedOut = -9987;
const Pa::InternalError = -9986;
const Pa::DeviceUnavailable = -9985;
const Pa::IncompatibleHostApiSpecificStreamInfo = -9984;
const Pa::StreamIsStopped = -9983;
const Pa::StreamIsNotStopped = -9982;
const Pa::InputOverflowed = -9981;
const Pa::OutputUnderflowed = -9980;
const Pa::HostApiNotFound = -9979;
const Pa::InvalidHostApi = -9978;
const Pa::CanNotReadFromACallbackStream = -9977;
const Pa::CanNotWriteToACallbackStream = -9976;
const Pa::CanNotReadFromAnOutputOnlyStream = -9975;
const Pa::CanNotWriteToAnInputOnlyStream = -9974;
const Pa::IncompatibleStreamHostApi = -9973;
const Pa::BadBufferPtr = -9972;
const Pa::InDevelopment = 0;
const Pa::DirectSound = 1;
const Pa::MME = 2;
const Pa::ASIO = 3;
const Pa::SoundManager = 4;
const Pa::CoreAudio = 5;
const Pa::OSS = 7;
const Pa::ALSA = 8;
const Pa::AL = 9;
const Pa::BeOS = 10;
const Pa::WDMKS = 11;
const Pa::JACK = 12;
const Pa::WASAPI = 13;
const Pa::AudioScienceHPI = 14;
const Pa::Continue = 0;
const Pa::Complete = 1;
const Pa::Abort = 2;
extern int Pa_GetVersion() = GetVersion;
extern char* Pa_GetVersionText() = GetVersionText;
extern char* Pa_GetErrorText(int) = GetErrorText;
extern int Pa_Initialize() = Initialize;
extern int Pa_Terminate() = Terminate;
extern int Pa_GetHostApiCount() = GetHostApiCount;
extern int Pa_GetDefaultHostApi() = GetDefaultHostApi;
extern PaHostApiInfo* Pa_GetHostApiInfo(int) = GetHostApiInfo;
extern int Pa_HostApiTypeIdToHostApiIndex(int) = HostApiTypeIdToHostApiIndex;
extern int Pa_HostApiDeviceIndexToDeviceIndex(int, int) = HostApiDeviceIndexToDeviceIndex;
extern PaHostErrorInfo* Pa_GetLastHostErrorInfo() = GetLastHostErrorInfo;
extern int Pa_GetDeviceCount() = GetDeviceCount;
extern int Pa_GetDefaultInputDevice() = GetDefaultInputDevice;
extern int Pa_GetDefaultOutputDevice() = GetDefaultOutputDevice;
extern PaDeviceInfo* Pa_GetDeviceInfo(int) = GetDeviceInfo;
extern int Pa_IsFormatSupported(PaStreamParameters*, PaStreamParameters*, double) = IsFormatSupported;
extern int Pa_OpenStream(void**, PaStreamParameters*, PaStreamParameters*, double, long, long, void*, void*) = OpenStream;
extern int Pa_OpenDefaultStream(void**, int, int, long, double, long, void*, void*) = OpenDefaultStream;
extern int Pa_CloseStream(void*) = CloseStream;
extern int Pa_SetStreamFinishedCallback(void*, void*) = SetStreamFinishedCallback;
extern int Pa_StartStream(void*) = StartStream;
extern int Pa_StopStream(void*) = StopStream;
extern int Pa_AbortStream(void*) = AbortStream;
extern int Pa_IsStreamStopped(void*) = IsStreamStopped;
extern int Pa_IsStreamActive(void*) = IsStreamActive;
extern PaStreamInfo* Pa_GetStreamInfo(void*) = GetStreamInfo;
extern double Pa_GetStreamTime(void*) = GetStreamTime;
extern double Pa_GetStreamCpuLoad(void*) = GetStreamCpuLoad;
extern int Pa_ReadStream(void*, void*, long) = ReadStream;
extern int Pa_WriteStream(void*, void*, long) = WriteStream;
extern long Pa_GetStreamReadAvailable(void*) = GetStreamReadAvailable;
extern long Pa_GetStreamWriteAvailable(void*) = GetStreamWriteAvailable;
extern int Pa_GetSampleSize(long) = GetSampleSize;
extern void Pa_Sleep(long) = Sleep;
