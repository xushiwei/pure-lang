// Random distributions

// NOTE: This test will fail if Pure was built without GSL support.

using system;
using gsl;

using namespace gsl;

/* Testing p.d.f. functions. */

puts (str [
  ran_ugaussian_pdf  1.2,
  ran_gaussian_pdf  (-1.3)  1.5,
  ran_gaussian_tail_pdf  2  1  1.5,
  ran_ugaussian_tail_pdf  2  1,
  ran_bivariate_gaussian_pdf  1.2  0.9  1  1  0.95,
  ran_exponential_pdf  1  0.5,
  ran_laplace_pdf  1.5  2,
  ran_exppow_pdf  0  1  1.5,
  ran_cauchy_pdf  (-1)  1,
  ran_rayleigh_pdf  2.5  1,
  ran_rayleigh_tail_pdf  1.5  1  1,
  ran_landau_pdf  1.1,
  ran_gamma_pdf  1  1  1.5,
  ran_flat_pdf  1  0.5  2.5,
  ran_lognormal_pdf  0.01  0  1,
  ran_chisq_pdf  1  2,
  ran_fdist_pdf  0.5  3  2,
  ran_tdist_pdf  0  10,
  ran_beta_pdf  0.5  4  1,
  ran_logistic_pdf  (-1)  2,
  ran_pareto_pdf  2.01  3  2,
  ran_weibull_pdf  0.01  1  1,
  ran_gumbel1_pdf  0.01  1  1,	
  ran_gumbel2_pdf  0.01  1  1,
  ran_dirichlet_pdf  {0.1, 0.2, 0.8}  {2.0, 2.0, 2.0},
  ran_dirichlet_lnpdf  {0.1, 0.2, 0.8}  {2.0, 2.0, 2.0},
  ran_poisson_pdf  4  0.4,
  ran_bernoulli_pdf  1  0.7,
  ran_binomial_pdf  3  0.5  9,
  ran_multinomial_pdf  {0.1, 0.2, 0.7}  {2, 2, 2},
  ran_multinomial_lnpdf  {0.1, 0.2, 0.7}  {2, 2, 2},
  ran_negative_binomial_pdf  10  0.5  3,
  ran_pascal_pdf  10  0.5  3,
  ran_geometric_pdf  5  0.4,
  ran_hypergeometric_pdf  1  5  20  3,
  ran_logarithmic_pdf  10  0.7]);

/* Testing general giscrete distributions. */

test2 
  = v
    when
      px = ran_discrete_preproc  {0.1, 0.3, 0.4};
      v = ran_discrete_pdf  0  px +	
          ran_discrete_pdf  1  px +
          ran_discrete_pdf  2  px;
      _ = ran_discrete_free px
    end;
puts (str test2);

/* Testing c.d.f. functions */

puts (str [
  cdf_ugaussian_P  (-1.3),
  cdf_ugaussian_Q  (-1.3),
  cdf_ugaussian_Pinv  0.84,
  cdf_ugaussian_Qinv  0.84,
  cdf_gaussian_P  (1.3)  1.5,
  cdf_gaussian_Q  (1.3)  1.5,
  cdf_gaussian_Pinv  0.4  5,
  cdf_gaussian_Qinv  0 .4 5,
  cdf_exponential_P  1  0.5,
	cdf_exponential_Q  1  0.5,
	cdf_exponential_Pinv  0.6  0.5,
	cdf_exponential_Qinv  0.6  0.5,
  cdf_laplace_P  1.5  2,
	cdf_laplace_Q  1.5  2,
	cdf_laplace_Pinv  0.6  2,
	cdf_laplace_Qinv  0.4  2,
	cdf_exppow_P  0  1  2.5,
	cdf_exppow_Q  0  1  0.5,
	cdf_cauchy_P  (-1)  1,
	cdf_cauchy_Q  (-1)  1,
	cdf_cauchy_Pinv  0.75  1,
	cdf_cauchy_Qinv  0.25  1,
	cdf_rayleigh_P  1.5  2,
	cdf_rayleigh_Q  0.5  1,
	cdf_rayleigh_Pinv  0.5  1,
	cdf_rayleigh_Qinv  0.5  1,
	cdf_gamma_P  1  1  3,
	cdf_gamma_Q  1  1  3,
	cdf_gamma_Pinv  0.5  1  1,
	cdf_gamma_Qinv  0.5  1  1,
	cdf_flat_P  2  1.2  4.8,
	cdf_flat_Q  2  1.2  4.8,
	cdf_flat_Pinv  0.2  0.5  2.5,
	cdf_flat_Qinv  0.2  0.5  2.5,
	cdf_lognormal_P  0.01  0  1,
	cdf_lognormal_Q  0.01  0  1,
	cdf_lognormal_Pinv  0.1  0  1,
	cdf_lognormal_Qinv  0.1  0  1,
	cdf_chisq_P  1  2,
	cdf_chisq_Q  1  2,
	cdf_chisq_Pinv  0.5  2,
	cdf_chisq_Qinv  0.5  2,
	cdf_fdist_P  1  3  2,
	cdf_fdist_Q  1  3  2,
	cdf_fdist_Pinv  0.5  3  2,
	cdf_fdist_Qinv  0.5  3  2,
  cdf_tdist_P  2.1  10,
	cdf_tdist_Q  (-2.1)  10,
	cdf_tdist_Pinv  0.68  10,
	cdf_tdist_Qinv  0.68  10,
	cdf_beta_P  0.75  2  2,
	cdf_beta_Q  0.75  2  2,
	cdf_beta_Pinv  0.75  2  2,
	cdf_beta_Qinv  0.25  2  2,
	cdf_logistic_P  (-1)  2,
	cdf_logistic_Q  (-1)  2,
	cdf_logistic_Pinv  0.75  1,
	cdf_logistic_Qinv  0.25  1,
	cdf_pareto_P  2.01  3  2,
	cdf_pareto_Q  2.01  3  2,
	cdf_pareto_Pinv  0.1  3  2,
	cdf_pareto_Qinv  0.1  3  2,
	cdf_weibull_P  1.01  1  2,
	cdf_weibull_Q  1.01  2  3,
	cdf_weibull_Pinv  0.1  1  2,
	cdf_weibull_Qinv  0.1  1  2,
	cdf_gumbel1_P  1.01  1  1,
	cdf_gumbel1_Q  1.01  1  1,
	cdf_gumbel1_Pinv  0.1  1  1,
	cdf_gumbel1_Qinv  0.1  1  1,
	cdf_gumbel2_P  1.01  1  1,
	cdf_gumbel2_Q  1.01  1  1,
	cdf_gumbel2_Pinv  0.1  1  1,
	cdf_gumbel2_Qinv  0.1  1  1,
	cdf_poisson_P  4  0.4,
	cdf_poisson_Q  4  0.6,
	cdf_binomial_P  3  0.5  10,
	cdf_binomial_Q  3  0.5  10,
	cdf_negative_binomial_P  10  0.5  3,
	cdf_negative_binomial_Q  10  0.5  3,
	cdf_pascal_P  10  0.5  3,
	cdf_pascal_Q  10  0.5  3,
	cdf_geometric_P  5  0.4,
	cdf_geometric_Q  5  0.6,
  cdf_hypergeometric_P 1  5  20  3,
  cdf_hypergeometric_Q  1  5  20  3]);

/* Testing statistics functions. */

let data = 	gsl::sort {4,4,3,5,2,2,7,5,1,1,0,2,3};
puts (str [
	stats_mean  {1,2,3,4,5},
	stats_variance  {1,2,3,4,5},
	stats_variance_m  {1,2,3,4,5}  4,
	stats_sd  {1,2,3,4,5},
	stats_sd_m  {1,2,3,4,5}  4,
	stats_tss  {1,2,3,4,5},
	stats_tss_m  {1,2,3,4,5}  4,
	stats_absdev  {2,2,3,4,4},
	stats_absdev_m  {2,2,3,4,4}  4,
	stats_skew  {1,1,1,1,2,2,2,2,2,2,2,2,3,30},
	stats_skew_m_sd  {1,2,2,3,3,3,3,3,3,3,4,4,5}  3  1,
	stats_kurtosis  {1,2,2,3,3,3,3,3,3,3,4,4,5},
	stats_kurtosis_m_sd  {1,2,2,3,3,3,3,3,3,3,4,4,5}  3  1,
	stats_lag1_autocorrelation  {1,2,3,4,5},
	stats_lag1_autocorrelation  {1,2,3,4,5}  2.5,
	stats_covariance  {1,2,3,4,5}  {3.0,4.5,6.0,7.5,9.0},
	stats_covariance_m  {1,2,3,4,5}  {3.0,4.5,6.0,7.5,9.0}  3  6,
	stats_wmean  {0.4,0.2,0.3,0.3,0.3}  {2,3,4,5,6},
	stats_correlation  {1,2,3,4,5}  {3.0,4.5,6.0,7.5,9.0},
	stats_median_from_sorted_data data,
	stats_quantile_from_sorted_data data  0.25, // lower quartile
	stats_min  {9,4,2,1,9},
	stats_max  {9.1,4.2,2.6,1.1,9.2},
	stats_minmax  {9.0,4.0,2.0,1.0,9.0},
	stats_min_index  {9.1,4.2,2.6,1.1,9.2},
	stats_max_index {9,4,2,1,9},
	stats_minmax_index {9,4,2,1,0,9}]);
