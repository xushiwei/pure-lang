'__case__ x [a,b __as__ (c __type__ int)-->b];
__case__ x [a,b __as__ (c __type__ int)-->b]
case a,1 of a/*0:01*/,b@c/*0:1*/ :: int = b/*0:1*/ {
  rule #0: a,b@c::int = b
  state 0: #0
	<app> state 1
  state 1: #0
	<app> state 2
  state 2: #0
	, state 3
  state 3: #0
	<var> state 4
  state 4: #0
	<var>::int state 5
  state 5: #0
} end;
1
eval ('__case__ (a,1) [a,b __as__ (c __type__ int)-->b]);
1
foo = case a,1 of a/*0:01*/,b@c/*0:1*/ :: int = b/*0:1*/ {
  rule #0: a,b@c::int = b
  state 0: #0
	<app> state 1
  state 1: #0
	<app> state 2
  state 2: #0
	, state 3
  state 3: #0
	<var> state 4
  state 4: #0
	<var>::int state 5
  state 5: #0
} end;
{
  rule #0: foo = case a,1 of a,b@c::int = b end
  state 0: #0
}
foo;
1
