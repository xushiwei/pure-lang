foo x/*0:1*/::int = x/*0:1*/+1;
{
  rule #0: foo x::int = x+1
  state 0: #0
	<var>::int state 1
  state 1: #0
}
foo 99;
100
foo 99.0;
<stdin>, line 8: unhandled exception 'failed_match' while evaluating 'foo 99.0'
evalcmd "clear foo";
""
foo 99;
foo 99
foo 99.0;
foo 99.0
foo x/*0:1*/::int = x/*0:1*/+1;
{
  rule #0: foo x::int = x+1
  state 0: #0
	<var>::int state 1
  state 1: #0
}
foo 99;
100
foo 99.0;
<stdin>, line 12: unhandled exception 'failed_match' while evaluating 'foo 99.0'
{
  rule #0: foo x::int = x+1
  state 0: #0
	<var>::int state 1
  state 1: #0
}
foo 99;
100
foo 99.0;
foo 99.0
puts x/*0:1*/::int = puts (str x/*0:1*/);
{
  rule #0: puts x::int = puts (str x)
  state 0: #0
	<var>::int state 1
  state 1: #0
}
99
puts 99;
3
puts 99.0;
<stdin>, line 21: unhandled exception 'failed_match' while evaluating 'puts 99.0'
evalcmd "clear puts";
""
puts 99;
<stdin>, line 23: unhandled exception 'failed_match' while evaluating 'puts 99'
puts 99.0;
<stdin>, line 23: unhandled exception 'failed_match' while evaluating 'puts 99.0'
puts 99;
puts 99
puts 99.0;
puts 99.0
puts x/*0:1*/::int = puts (str x/*0:1*/);
{
  rule #0: puts x::int = puts (str x)
  state 0: #0
	<var>::int state 1
  state 1: #0
}
99
puts 99;
3
puts 99.0;
puts 99.0
{
  rule #0: puts x::int = puts (str x)
  state 0: #0
	<var>::int state 1
  state 1: #0
}
evalcmd "clear puts";
""
puts 99;
<stdin>, line 30: unhandled exception 'failed_match' while evaluating 'puts 99'
puts 99.0;
<stdin>, line 30: unhandled exception 'failed_match' while evaluating 'puts 99.0'
foo
puts "foo";
4
