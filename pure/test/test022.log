def foo (bar x/*0:11*/) = foo x/*0:11*/+1;
def foo x/*0:1*/ = x/*0:1*/;
x;
x
x+1;
x+1
x+1+1;
x+1+1
x+1+1+1;
x+1+1+1
def goo (bar x/*0:11*/) = goo x/*1:11*/+y/*0:*/ when y/*0:*/ = x/*0:11*/+1 end with bar x/*0:1*/ = 0 end;
def goo x/*0:1*/ = x/*0:1*/;
(baz/*2*/ x/*2:*/+y/*0:*/ when y/*0:*/ = baz/*1*/ x/*1:*/+1 {
  rule #0: y = baz x+1
  state 0: #0
	<var> state 1
  state 1: #0
} end with bar x/*0:1*/ = 0 {
  rule #0: bar x = 0
  state 0: #0
	<var> state 1
  state 1: #0
} end)+y/*0:*/ when y/*0:*/ = bar (baz/*0*/ x/*0:*/)+1 {
  rule #0: y = bar (baz x)+1
  state 0: #0
	<var> state 1
  state 1: #0
} end with bar x/*0:1*/ = 0 {
  rule #0: bar x = 0
  state 0: #0
	<var> state 1
  state 1: #0
} end with baz x/*0:1*/ = x/*0:1*/+1 {
  rule #0: baz x = x+1
  state 0: #0
	<var> state 1
  state 1: #0
} end when x/*0:*/ = 99 {
  rule #0: x = 99
  state 0: #0
	<var> state 1
  state 1: #0
} end;
201+(bar 100+1)
(baz/*2*/ y/*2:*/+y/*0:*/ when y/*0:*/ = baz/*1*/ y/*1:*/+1 {
  rule #0: y = baz y+1
  state 0: #0
	<var> state 1
  state 1: #0
} end with bar x/*0:1*/ = 0 {
  rule #0: bar x = 0
  state 0: #0
	<var> state 1
  state 1: #0
} end)+y/*0:*/ when y/*0:*/ = bar (baz/*0*/ y/*0:*/)+1 {
  rule #0: y = bar (baz y)+1
  state 0: #0
	<var> state 1
  state 1: #0
} end with bar x/*0:1*/ = 0 {
  rule #0: bar x = 0
  state 0: #0
	<var> state 1
  state 1: #0
} end with baz x/*0:1*/ = x/*0:1*/+1 {
  rule #0: baz x = x+1
  state 0: #0
	<var> state 1
  state 1: #0
} end when y/*0:*/ = 99 {
  rule #0: y = 99
  state 0: #0
	<var> state 1
  state 1: #0
} end;
201+(bar 100+1)
bar/*0*/ (bar/*0*/ x/*0:*/) with bar x/*0:1*/ = x/*0:1*/+1 {
  rule #0: bar x = x+1
  state 0: #0
	<var> state 1
  state 1: #0
} end when x/*0:*/ = 99 {
  rule #0: x = 99
  state 0: #0
	<var> state 1
  state 1: #0
} end;
101
bar/*0*/ (bar/*0*/ y/*0:*/) with bar x/*0:1*/ = x/*0:1*/+1 {
  rule #0: bar x = x+1
  state 0: #0
	<var> state 1
  state 1: #0
} end when y/*0:*/ = 99 {
  rule #0: y = 99
  state 0: #0
	<var> state 1
  state 1: #0
} end;
101
