drop 990 (listmap (\i/*0:1*/ -> random {
  rule #0: _ i = random
  state 0: #0
	<var> state 1
  state 1: #0
}) (1..1000)) when srandom {291,564,837,1110} {
  rule #0: _ = srandom {291,564,837,1110}
  state 0: #0
	<var> state 1
  state 1: #0
} end;
[988064871,-779505696,-205890064,-2069819848,1249609188,-1651815433,-398763161,-1877971395,1397735321,-834941650]
{
  rule #0: q = 44%(-14)
  state 0: #0
	<var> state 1
  state 1: #0
}
let q = 44%(-14);
q;
(-22L)%7L
num q,den q;
-22L,7L
5%7+2%3;
29L%21L
1+2%3;
5L%3L
1+2%3+1.0;
2.66666666666667
3%8-1%3;
1L%24L
(11%10)^3;
1.331
pow (11%10) 3;
1331L%1000L
pow 3 5;
243L
pow 3 (-5);
1L%243L
44/14;
3.14285714285714
44%14;
22L%7L
2+3%8;
19L%8L
1%(22%7);
7L%22L
3%8<1%3;
0
3%8>1%3;
1
max (3%8) (1%3);
3L%8L
{
  rule #0: xs = iterwhile (\x -> x<=3) (\x -> x+1%2) (-3%1)
  state 0: #0
	<var> state 1
  state 1: #0
}
let xs = iterwhile (\x/*0:1*/ -> x/*0:1*/<=3 {
  rule #0: _ x = x<=3
  state 0: #0
	<var> state 1
  state 1: #0
}) (\x/*0:1*/ -> x/*0:1*/+1%2 {
  rule #0: _ x = x+1%2
  state 0: #0
	<var> state 1
  state 1: #0
}) (-3%1);
map double xs;
[-3.0,-2.5,-2.0,-1.5,-1.0,-0.5,0.0,0.5,1.0,1.5,2.0,2.5,3.0]
map floor xs;
[-3L,-3L,-2L,-2L,-1L,-1L,0L,0L,1L,1L,2L,2L,3L]
map ceil xs;
[-3L,-2L,-2L,-1L,-1L,0L,0L,1L,1L,2L,2L,3L,3L]
map trunc xs;
[-3L,-2L,-2L,-1L,-1L,0L,0L,0L,1L,1L,2L,2L,3L]
map round xs;
[-3L,-3L,-2L,-2L,-1L,-1L,0L,1L,1L,2L,2L,3L,3L]
trunc (-22%7);
-3L
frac (-22%7);
(-1L)%7L
rational (3/8);
3L%8L
{
  rule #0: z = 1+(0+:1)*(1%2)
  state 0: #0
	<var> state 1
  state 1: #0
}
let z = 1+(0+:1)*(1%2);
z;
1L%1L+:1L%2L
z*z;
3L%4L+:1L%1L
{
  rule #0: z = (1+2*(0+:1))%(3+4*(0+:1))
  state 0: #0
	<var> state 1
  state 1: #0
}
let z = (1+2*(0+:1))%(3+4*(0+:1));
z;
11L%25L+:2L%25L
z*(3+4*(0+:1));
1L%1L+:2L%1L
4%1*(0+:1)%2;
0L%1L+:2L%1L
4%1*(0+:1)%(1%2);
0L%1L+:8L%1L
{
  rule #0: z = 4%1*(0+:1)%(1+1%2*(0+:1))
  state 0: #0
	<var> state 1
  state 1: #0
}
let z = 4%1*(0+:1)%(1+1%2*(0+:1));
z;
8L%5L+:16L%5L
z*(1+1%2*(0+:1));
0L%1L+:4L%1L
4%1*(0+:1)/(1+1%2*(0+:1));
1.6+:3.2
