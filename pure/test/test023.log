odd x/*0:1*/ = x/*0:1*/ mod 2;
{
  rule #0: odd x = x mod 2
  state 0: #0
	<var> state 1
  state 1: #0
}
{
  rule #0: x = 1..inf
  state 0: #0
	<var> state 1
  state 1: #0
}
let x = 1..inf;
{
  rule #0: y = filter odd x
  state 0: #0
	<var> state 1
  state 1: #0
}
let y = filter odd x;
{
  rule #0: z = zip x y
  state 0: #0
	<var> state 1
  state 1: #0
}
let z = zip x y;
{
  rule #0: u,v = unzip z
  state 0: #0
	<app> state 1
  state 1: #0
	<app> state 2
  state 2: #0
	, state 3
  state 3: #0
	<var> state 4
  state 4: #0
	<var> state 5
  state 5: #0
}
let u,v = unzip z;
list (take 10 u);
[1,2,3,4,5,6,7,8,9,10]
list (take 10 v);
[1,3,5,7,9,11,13,15,17,19]
