// Expression serialization (Pure 0.28+).

val $ blob (x+1);
blobp $ blob (\x->x+1);			// not allowed
blobp $ blob foo with foo x = x+1 end;	// not allowed
blobp $ blob (malloc 10);		// not allowed
val $ blob NULL;			// NULL pointers are ok, though

// type checking, calculating the size of a blob

blobp NULL;
blobp (malloc 10);
blobp (blob (1..10));
#blob (1..10000) > 10000;

// various data types

val $ blob (17+1);
val $ blob (17L+1);
val $ blob (17.0+1);

val $ blob "Hello, world!";

val $ blob (x:y:z);
val $ blob (1/3,4711,NULL);
val $ blob [1/3,4711,NULL];
val $ blob {1/3,4711,NULL};

let x = {1,2,3;4,5,6};
val $ blob x;
val $ blob $ dmatrix x;
val $ blob $ cmatrix x;

// reconstruction of shared subexpressions

let x = 1..100;
//#blob (x,x);
val $ blob (x,x);
get_pointer p==get_pointer q when
  u,v = val $ blob (x,x);
  p,q = ref u, ref v;
end;
