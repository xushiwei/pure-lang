
// catmap et al

upcase s::string = s-32 if s!0 >= "a" && s!0 <= "z"; = s;
catmap upcase "ainsworth";

single x = [x];
catmap (single.succ) (1..10);

// list comprehensions

[upcase c | c = "ainsworth"];
[succ x | x=1..10];

// infinite lists

list $ take 20 [succ x | x=1..inf];

ones = 1:ones&;
ints = 1:zipwith (+) ints ones&;
list $ take 20 ints;

let rats = [m,n-m | n=2..inf; m=1..n-1; gcd m (n-m) == 1];
list $ take 20 rats;

list $ take 20 [i,j | i=1..inf; j=i..inf];
