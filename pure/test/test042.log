write_test fname/*0:1*/::string = () when fp/*0:*/::pointer = fopen fname/*0:1*/ "w"; X/*0:*/ = {1,2,3;4,5,6}; b/*0:*/ = blob [("Hello, world!",x+y,1/2,4711,-4711L,#<pointer 0>),["Hello, world!",x+y,1/2,4711,-4711L,#<pointer 0>],{"Hello, world!",x+y,1/2,4711,-4711L,#<pointer 0>},X/*0:*/,dmatrix X/*0:*/,cmatrix X/*0:*/]; printf "writing blob file: %s\n" fname/*3:1*/; printf "blob size: %d bytes\n" (#b/*1:*/); printf "wrote %d bytes\n" (int (fwrite b/*2:*/ 1 (#b/*2:*/) fp/*4:*/)) {
  rule #0: _ = printf "wrote %d bytes\n" (int (fwrite b 1 (#b) fp))
  state 0: #0
	<var> state 1
  state 1: #0
} {
  rule #0: _ = printf "blob size: %d bytes\n" (#b)
  state 0: #0
	<var> state 1
  state 1: #0
} {
  rule #0: _ = printf "writing blob file: %s\n" fname
  state 0: #0
	<var> state 1
  state 1: #0
} {
  rule #0: b = blob [("Hello, world!",x+y,1/2,4711,-4711L,#<pointer 0>),["Hello, world!",x+y,1/2,4711,-4711L,#<pointer 0>],{"Hello, world!",x+y,1/2,4711,-4711L,#<pointer 0>},X,dmatrix X,cmatrix X]
  state 0: #0
	<var> state 1
  state 1: #0
} {
  rule #0: X = {1,2,3;4,5,6}
  state 0: #0
	<var> state 1
  state 1: #0
} {
  rule #0: fp::pointer = fopen fname "w"
  state 0: #0
	<var>::pointer state 1
  state 1: #0
} end;
{
  rule #0: write_test fname::string = () when fp::pointer = fopen fname "w"; X = {1,2,3;4,5,6}; b = blob [("Hello, world!",x+y,1/2,4711,-4711L,#<pointer 0>),["Hello, world!",x+y,1/2,4711,-4711L,#<pointer 0>],{"Hello, world!",x+y,1/2,4711,-4711L,#<pointer 0>},X,dmatrix X,cmatrix X]; printf "writing blob file: %s\n" fname; printf "blob size: %d bytes\n" (#b); printf "wrote %d bytes\n" (int (fwrite b 1 (#b) fp)) end
  state 0: #0
	<var>::string state 1
  state 1: #0
}
{
  rule #0: srcdir = if stringp srcdir then srcdir+"/test/" else "" when srcdir = getenv "srcdir" end
  state 0: #0
	<var> state 1
  state 1: #0
}
let srcdir = if stringp srcdir/*0:*/ then srcdir/*0:*/+"/test/" else "" when srcdir/*0:*/ = getenv "srcdir" {
  rule #0: srcdir = getenv "srcdir"
  state 0: #0
	<var> state 1
  state 1: #0
} end;
read_test fname/*0:1*/::string = do (puts.str) (val b/*3:*/) when name/*0:*/ = srcdir+fname/*0:1*/; fp/*0:*/::pointer = fopen name/*0:*/ "r"; n/*0:*/::bigint = stat name/*1:*/!7; b/*0:*/::pointer = cooked (malloc n/*0:*/); printf "reading blob file: %s\n" fname/*4:1*/; printf "read %d bytes\n" (int (fread b/*1:*/ 1 n/*2:*/ fp/*3:*/)); if blobp b/*2:*/ then printf "blob size: %d bytes\n" (#b/*2:*/) else throw "invalid blob!" {
  rule #0: _ = if blobp b then printf "blob size: %d bytes\n" (#b) else throw "invalid blob!"
  state 0: #0
	<var> state 1
  state 1: #0
} {
  rule #0: _ = printf "read %d bytes\n" (int (fread b 1 n fp))
  state 0: #0
	<var> state 1
  state 1: #0
} {
  rule #0: _ = printf "reading blob file: %s\n" fname
  state 0: #0
	<var> state 1
  state 1: #0
} {
  rule #0: b::pointer = cooked (malloc n)
  state 0: #0
	<var>::pointer state 1
  state 1: #0
} {
  rule #0: n::bigint = stat name!7
  state 0: #0
	<var>::bigint state 1
  state 1: #0
} {
  rule #0: fp::pointer = fopen name "r"
  state 0: #0
	<var>::pointer state 1
  state 1: #0
} {
  rule #0: name = srcdir+fname
  state 0: #0
	<var> state 1
  state 1: #0
} end;
{
  rule #0: read_test fname::string = do (puts.str) (val b) when name = srcdir+fname; fp::pointer = fopen name "r"; n::bigint = stat name!7; b::pointer = cooked (malloc n); printf "reading blob file: %s\n" fname; printf "read %d bytes\n" (int (fread b 1 n fp)); if blobp b then printf "blob size: %d bytes\n" (#b) else throw "invalid blob!" end
  state 0: #0
	<var>::string state 1
  state 1: #0
}
reading blob file: amd64-linux64.blob
read 898 bytes
blob size: 898 bytes
"Hello, world!",x+y,0.5,4711,-4711L,#<pointer 0>
["Hello, world!",x+y,0.5,4711,-4711L,#<pointer 0>]
{"Hello, world!",x+y,0.5,4711,-4711L,#<pointer 0>}
{1,2,3;4,5,6}
{1.0,2.0,3.0;4.0,5.0,6.0}
{1.0+:0.0,2.0+:0.0,3.0+:0.0;4.0+:0.0,5.0+:0.0,6.0+:0.0}
read_test "amd64-linux64.blob";
()
reading blob file: amd64-linux32.blob
read 898 bytes
blob size: 898 bytes
"Hello, world!",x+y,0.5,4711,-4711L,#<pointer 0>
["Hello, world!",x+y,0.5,4711,-4711L,#<pointer 0>]
{"Hello, world!",x+y,0.5,4711,-4711L,#<pointer 0>}
{1,2,3;4,5,6}
{1.0,2.0,3.0;4.0,5.0,6.0}
{1.0+:0.0,2.0+:0.0,3.0+:0.0;4.0+:0.0,5.0+:0.0,6.0+:0.0}
read_test "amd64-linux32.blob";
()
reading blob file: amd64-win32.blob
read 898 bytes
blob size: 898 bytes
"Hello, world!",x+y,0.5,4711,-4711L,#<pointer 0>
["Hello, world!",x+y,0.5,4711,-4711L,#<pointer 0>]
{"Hello, world!",x+y,0.5,4711,-4711L,#<pointer 0>}
{1,2,3;4,5,6}
{1.0,2.0,3.0;4.0,5.0,6.0}
{1.0+:0.0,2.0+:0.0,3.0+:0.0;4.0+:0.0,5.0+:0.0,6.0+:0.0}
read_test "amd64-win32.blob";
()
