__show__ x/*0:1*/ = strcat (split "faust::" (str x/*0:1*/));
{
  rule #0: __show__ x = strcat (split "faust::" (str x))
  state 0: #0
	<var> state 1
  state 1: #0
}
dsp (a faust::, b faust::, c faust::: faust::sin faust::, faust::cos faust::, faust::tan);
dsp (a , b , c : sin , cos , tan)
dsp (a faust::, b faust::, c faust::: faust::sin faust::, faust::cos faust::, faust::tan);
dsp (a , b , c : sin , cos , tan)
dsp (a faust::, b faust::, c faust::: faust::sin faust::, faust::cos faust::, faust::tan);
dsp (a , b , c : sin , cos , tan)
dsp (a faust::, b faust::, c faust::: faust::sin faust::, faust::cos faust::, faust::tan);
dsp (a , b , c : sin , cos , tan)
dsp « (a,b,c):(sin,cos,tan) »;
dsp « (a,b,c):(sin,cos,tan) »
dsp (a faust::, b faust::, c faust::: faust::sin faust::, faust::cos faust::, faust::tan);
dsp (a , b , c : sin , cos , tan)
dsp (a,b,c faust::: sin,cos,tan);
dsp (a,b,c : sin,cos,tan)
foo (sin/*0:101*/ faust::: cos/*0:11*/) = sin/*0:101*/;
{
  rule #0: foo (sin faust::: cos) = sin
  state 0: #0
	<app> state 1
  state 1: #0
	<app> state 2
  state 2: #0
	faust::: state 3
  state 3: #0
	<var> state 4
  state 4: #0
	<var> state 5
  state 5: #0
}
foo (0 faust::: faust::sin);
0
