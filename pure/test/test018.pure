
// check integer marshalling of the C interface
// (this isn't exhaustive, but should cover the most important cases)

using system;

// signed parameters

sprintf "%d" 0x7fffffff;
sprintf "%d" 0x80000000;
sprintf "%d" 0xffffffff;
sprintf "%d" (-0x7fffffff);
sprintf "%d" (-0x80000000);
sprintf "%d" (-0xffffffff);

sprintf "%d" 0x7fffffffL;
sprintf "%d" 0x80000000L;
sprintf "%d" 0xffffffffL;
sprintf "%d" (-0x7fffffffL);
sprintf "%d" (-0x80000000L);
sprintf "%d" (-0xffffffffL);

// unsigned parameters

sprintf "%u" 0x7fffffff;
sprintf "%u" 0x80000000;
sprintf "%u" 0xffffffff;
sprintf "%u" (-0x7fffffff);
sprintf "%u" (-0x80000000);
sprintf "%u" (-0xffffffff);

sprintf "%u" 0x7fffffffL;
sprintf "%u" 0x80000000L;
sprintf "%u" 0xffffffffL;
sprintf "%u" (-0x7fffffffL);
sprintf "%u" (-0x80000000L);
sprintf "%u" (-0xffffffffL);

// unsigned parameters (hex)

sprintf "%x" 0x7fffffff;
sprintf "%x" 0x80000000;
sprintf "%x" 0xffffffff;
sprintf "%x" (-0x7fffffff);
sprintf "%x" (-0x80000000);
sprintf "%x" (-0xffffffff);

sprintf "%x" 0x7fffffffL;
sprintf "%x" 0x80000000L;
sprintf "%x" 0xffffffffL;
sprintf "%x" (-0x7fffffffL);
sprintf "%x" (-0x80000000L);
sprintf "%x" (-0xffffffffL);

// unsigned char

// Disabled, since the test is not portable.
// ord $ sprintf "%c" 0xff;
// ord $ sprintf "%c" 0xffL;

// unsigned return values

sscanf "ffffffff" "%x";
uint $ sscanf "ffffffff" "%x";
sscanf "4294967295" "%u";
uint $ sscanf "4294967295" "%u";
