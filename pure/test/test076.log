foo (catmap (__lambda__ [x/*0:1010101*/] (__ifelse__ (x/*0:101100101*/>1) [x/*0:10110101*/] [])) (1..3)) = ok;
bar (__lambda__ [x/*0:10101*/] (__lambda__ [y/*0:110101*/] (x/*0:1110101*/*y/*0:111011*/+1))) = ok;
baz = \(catmap (__lambda__ [x/*0:1010101*/] (__ifelse__ (x/*0:101100101*/>1) [x/*0:10110101*/] [])) (1..3)) -> ok {
  rule #0: _ (catmap (__lambda__ [x] (__ifelse__ (x>1) [x] [])) (1..3)) = ok
  state 0: #0
	<app> state 1
  state 1: #0
	<app> state 2
  state 2: #0
	catmap state 3
  state 3: #0
	<app> state 4
  state 4: #0
	<app> state 5
  state 5: #0
	__lambda__ state 6
  state 6: #0
	<app> state 7
  state 7: #0
	<app> state 8
  state 8: #0
	: state 9
  state 9: #0
	<var> state 10
  state 10: #0
	[] state 11
  state 11: #0
	<app> state 12
  state 12: #0
	<app> state 13
  state 13: #0
	<app> state 14
  state 14: #0
	__ifelse__ state 15
  state 15: #0
	<app> state 16
  state 16: #0
	<app> state 17
  state 17: #0
	> state 18
  state 18: #0
	<var> state 19
  state 19: #0
	1::int state 20
  state 20: #0
	<app> state 21
  state 21: #0
	<app> state 22
  state 22: #0
	: state 23
  state 23: #0
	<var> state 24
  state 24: #0
	[] state 25
  state 25: #0
	[] state 26
  state 26: #0
	<app> state 27
  state 27: #0
	<app> state 28
  state 28: #0
	.. state 29
  state 29: #0
	1::int state 30
  state 30: #0
	3::int state 31
  state 31: #0
};
