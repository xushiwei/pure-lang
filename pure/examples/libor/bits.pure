// Basic bit manipulation facilities on 32bit integers (::int) type
// Libor Spacek (C) 24th June, 2009

const bitmask = {int (2^i)|i=(0..31)};
const notbitmask = { (not bitmask!i)|i=(0..31)};

setbit i::int bit::int = i or (bitmask!bit);
clearbit i::int bit::int = i and (notbitmask!bit);
bitval i::int bit::int = (i >> bit) and 1;

list2int l =  ltb l 0
	with
		ltb [] j::int = j;
		ltb (h:t) 0 = if h then (ltb t 1) else (ltb t 0);
		ltb (h:t) j::int = if h then (ltb t ((j<<1)+1)) else (ltb t (j<<1))
	end;

int2list i::int = itl i [] 
	with
		itl 0 l = l;
		itl j::int l = if (j mod 2) then itl (j>>1) (1:l) else itl (j>>1) (0:l)
	end;

refsetbit r::pointer bit::int = put r ((get r) or (bitmask!bit));
refclearbit r::pointer bit::int = put r ((get r) and (notbitmask!bit));
refbitval r::pointer bit::int = ((get r) >> bit) and 1;

r::pointer << bitsno::int = put r ((get r) << bitsno);
r::pointer >> bitsno::int = put r ((get r) >> bitsno);
