Source: pure
Section: devel
Priority: extra
Maintainer: Albert Graef <Dr.Graef@t-online.de>
Build-Depends: debhelper (>= 7.0.50~), autotools-dev, bison, flex,
 llvm-3.1-dev | llvm-3.0-dev | llvm-2.9-dev | llvm-2.8-dev | llvm-dev,
 libgmp3-dev, libmpfr-dev, libreadline6-dev, emacs
Standards-Version: 3.9.1
Homepage: http://pure-lang.googlecode.com
#Vcs-Git: git://git.debian.org/collab-maint/pure.git
#Vcs-Browser: http://git.debian.org/?p=collab-maint/pure.git;a=summary

Package: pure
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Functional programming language based on term rewriting
 Pure is a modern-style functional programming language based on term
 rewriting. It offers equational definitions with pattern matching, full
 symbolic rewriting capabilities, dynamic typing, eager and lazy evaluation,
 lexical closures, built-in list and matrix support and an easy-to-use C
 interface. The interpreter uses LLVM as a backend to JIT-compile Pure
 programs to fast native code.
 .
 This package contains the interpreter frontend and the standard Pure library.

Package: libpure8
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Functional programming language based on term rewriting
 Pure is a modern-style functional programming language based on term
 rewriting. It offers equational definitions with pattern matching, full
 symbolic rewriting capabilities, dynamic typing, eager and lazy evaluation,
 lexical closures, built-in list and matrix support and an easy-to-use C
 interface. The interpreter uses LLVM as a backend to JIT-compile Pure
 programs to fast native code.
 .
 This package contains the Pure runtime library.

Package: pure-dev
Architecture: any
Depends: libpure8 (= ${binary:Version}), libgmp3-dev, libmpfr-dev,
 ${misc:Depends}
Description: Functional programming language based on term rewriting
 Pure is a modern-style functional programming language based on term
 rewriting. It offers equational definitions with pattern matching, full
 symbolic rewriting capabilities, dynamic typing, eager and lazy evaluation,
 lexical closures, built-in list and matrix support and an easy-to-use C
 interface. The interpreter uses LLVM as a backend to JIT-compile Pure
 programs to fast native code.
 .
 This package contains the development files (headers and libraries).

Package: pure-elisp
Architecture: any
Depends: emacs, pure (= ${binary:Version}), ${misc:Depends}
Description: Functional programming language based on term rewriting
 Pure is a modern-style functional programming language based on term
 rewriting. It offers equational definitions with pattern matching, full
 symbolic rewriting capabilities, dynamic typing, eager and lazy evaluation,
 lexical closures, built-in list and matrix support and an easy-to-use C
 interface. The interpreter uses LLVM as a backend to JIT-compile Pure
 programs to fast native code.
 .
 This package contains the Pure Emacs mode.
