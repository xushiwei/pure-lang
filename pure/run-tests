#!/bin/sh

# Run a few tests to verify that the Pure interpreter works correctly.
# Invoke this as 'make check' from the build directory.

# This assumes that the following environment variables are set up properly:
# LD_LIBRARY_PATH (or equivalent), so that the Pure runtime library is found.
# PURELIB, so that the interpreter finds the library scripts.
# PURE_INCLUDE, should be set to the directory containing the test scripts, so
# that imports in the test directory can be found.
# DIFF: diff program to use.
# ECHO_C, ECHO_N, ECHO_T: 'echo' portability hacks.
# srcdir: Must point to the directory containing the Pure sources.
# level: The verbosity level (-v) of the interpreter to be used.

# In addition, $* is the list of tests to be run.

echo Running tests.

rc=0

export LC_ALL=C

echo ${ECHO_N} "prelude.pure: ${ECHO_C}"
if ./pure --norc -n -v$level $srcdir/lib/prelude.pure 2>&1 | ${DIFF} -u $srcdir/test/prelude.log - > $srcdir/test/prelude.diff
then
  rm -f $srcdir/test/prelude.diff
  echo "${ECHO_T}passed"
else
  rc=1
  echo "${ECHO_T}FAILED"
fi

for x in $*; do
  echo ${ECHO_N} "$x: ${ECHO_C}"
  if ./pure --norc -v$level < $srcdir/test/$x 2>&1 | ${DIFF} -u $srcdir/test/"`basename $x .pure`.log" - > $srcdir/test/"`basename $x .pure`.diff"
  then
    rm -f $srcdir/test/"`basename $x .pure`.diff"
    echo "${ECHO_T}passed"
  else
    rc=1
    echo "${ECHO_T}FAILED"
  fi
done

exit $rc
