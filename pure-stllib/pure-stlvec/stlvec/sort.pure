/* sort.pure -- Pure interface for C++ STL sort algorithms
    
Copyright (c) 2011 by Peter Summerland <p.summerland@gmail.com>.

All rights reserved.

This software is is part of pure-stlvec, an addon to the Pure Programming
Language (http://code.google.com/p/pure-lang/).

This software is distributed under a BSD-style license in the hope that it
will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the COPYING file
included with the pure-stlvec distribution package for details.

*/

using stlvec;
using "lib:stlalgorithm";

namespace stl;

/*** C++ Support *********************************************************/

private extern void stl_sva_sort(expr* rng, expr* comp);
private extern void stl_sva_stable_sort(expr* rng, expr* comp);
private extern void stl_sva_partial_sort(expr* rng, expr* comp);
private extern void stl_sva_partial_sort_copy(expr* rng1, expr* rng2, expr* comp);
private extern void stl_sva_nth_element(expr* rng, expr* comp);

private extern int  stl_sva_lower_bound(expr* rng, expr* val, expr* comp);
private extern int  stl_sva_upper_bound(expr* rng, expr* val, expr* comp);
private extern expr*  stl_sva_equal_range(expr* rng, expr* val, expr* comp);
private extern bool stl_sva_binary_search(expr* rng, expr* val, expr* comp);

/*** Pure Interface *****************************************************/

sort rng::mutable_svrng comp = stl_sva_sort rng comp;

stable_sort rng::mutable_svrng comp = stl_sva_stable_sort rng comp;

partial_sort rng::mutable_svrng comp = stl_sva_partial_sort rng comp;

partial_sort_copy src::svrng trg::mutable_svrng comp = 
  stl_sva_partial_sort_copy src trg comp 
  if (typep mutable_svrng src) || (get_sv src ~= get_sv trg);

nth_element rng::mutable_svrng comp = stl_sva_nth_element rng comp;

lower_bound rng::svrng x comp = stl_sva_lower_bound rng x comp;

upper_bound rng::svrng x comp = stl_sva_upper_bound rng x comp;

equal_range rng::svrng x comp = stl_sva_equal_range rng x comp;

binary_search rng::svrng x comp = stl_sva_binary_search rng x comp;
