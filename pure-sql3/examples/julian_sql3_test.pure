/* julian_sql3_test.pure - test to see that SQLite3 and julian.pure 
   conform. */

using system;
using julian, sql3;
using namespace julian;

/*  Use SQLite3 to convert from strings to JDs and back. */

let db1 = sql3::open "junk.db";

let stm_str = sql3::prep db1 "c:d" "select strftime('%Y-%m-%d %H:%M:%f',?)";

let stm_jd = sql3::prep db1 "d:c" "select julianday(?)";

sql3ymdhms jd = st
when [[st]] = sql3::exec stm_str jd; end;

sql3jd s::string = jd
when [[jd]] = sql3::exec stm_jd s; end;

putstr = puts.str;

/* Run some comparisons */

main = () 
when
  puts "Begin main1 - compare SQLite3 to julian.pure.";
  s1 = "0000-01-01";  // SQlite3 only good from 0000
  s2 = "1582-10-10";  // The adoption gap.
  s3 = "2010-03-25 12:00:00";
  s4 = "2010-03-25 18:00:00";
  jd1 = str_to_jd s1;
  jd2 = str_to_jd s2;
  jd3 = str_to_jd s3;
  jd4 = str_to_jd s4;
  s_jd1 = sql3jd s1;
  s_jd2 = sql3jd s2;
  s_jd3 = sql3jd s3; 
  s_jd4 = sql3jd s4;
  puts "compare julian dates";
  putstr jd1;
  putstr s_jd1;
  putstr jd2;
  putstr s_jd2;
  putstr jd3;
  putstr s_jd3;
  putstr jd4;
  putstr s_jd4;

  puts "\ncompare greg";
  puts (jd_to_str (jd1,"long"));
  puts (sql3ymdhms s_jd1);
  puts (jd_to_str (jd2,"long"));
  puts (sql3ymdhms s_jd2);
  puts (jd_to_str (jd3,"long"));
  puts (sql3ymdhms s_jd3);
  puts (jd_to_str (jd4,"long"));
  puts (sql3ymdhms s_jd4);

  puts "End main";
end;

//main