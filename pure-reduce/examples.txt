
Basic Examples
==============

Here is a simple example showing how to start up Reduce and do some
calculations::

  > using reduce;
  Reduce (Free CSL version), 27-Sep-12 ...
  > simplify $ df ((x+5)^3) x;
  3*x^2+30*x+75
  > simplify $ solve (x^2+7) x;
  [x==sqrt 7*i,x==-sqrt 7*i]

Note that the result returned by :func:`simplify` is always a quoted
expression. If the expression can be further reduced on the Pure side,
you'll have to use Pure's :func:`eval` function to force its evaluation::

  > using math;
  > eval ans;
  [x==0.0+:2.64575131106459,x==0.0+:-2.64575131106459]

You can also execute Lisp code in the CSL interpreter hosting the Reduce
system. This is sometimes necessary to access special functionality, but
should be done with care (at present invalid Lisp code can easily crash the
interpreter). Most simple kinds of Lisp calls should be doable that way, but
don't expect any miracles; the :func:`lisp` function is provided to access
special functionality in the "symbolic mode" of the Reduce system, not to turn
Pure into a full-featured Lisp frontend. The following example illustrates how
you can use the :func:`lisp` function to declare an operator symbol and change
or query its properties::

  > lisp ('operator [myop]);
  []
  > lisp ('flag [myop] odd);
  []
  > lisp ('prop myop);
  [odd:t,simpfn:simpiden]
  > simplify (myop (-x));
  -myop x

If you find it awkward to evaluate Lisp forms in Pure, you can also achieve
the same with the :func:`declare` function which covers most of the common
Reduce declarations that might be needed::

  > declare operator myop;
  []
  > declare odd myop;
  []
  > simplify (myop (-x));
  -myop x

This example shows how you can do a simple plot using Reduce's gnuplot_
module::

  > simplify $ plot [sin x/x, x=='(-20..20), terminal=="wxt"];
  0

This pops up a wxWidgets window (``terminal=="wxt"``) with a plot of the given
function in it, see the screenshot below. The ``x=='(-20..20)`` argument
specifies the desired range of the ``x`` variable (note that the range needs
to be quoted so that it gets through to Reduce rather than being evaluated on
the Pure side).

.. figure:: gnuplot.png
   :scale: 60%
   :align: center

   Reduce gnuplot example.

The same plot can be written to a PostScript file sinc.ps as follows::

  > simplify $ plot [sin x/x, x=='(-20..20), terminal=="postscript", output=="sinc.ps"];
  0

Many more examples can be found in the reduce_examp.pure and tests.pure
scripts included in the distribution.
