/* /usr/include/Imlib2.h: */
using "lib:libImlib2";
extern void* imlib_context_new();
extern void imlib_context_free(void*);
extern void imlib_context_push(void*);
extern void imlib_context_pop();
extern void* imlib_context_get();
extern void imlib_context_set_display(Display*);
extern void imlib_context_disconnect_display();
extern void imlib_context_set_visual(Visual*);
extern void imlib_context_set_colormap(int);
extern void imlib_context_set_drawable(int);
extern void imlib_context_set_mask(int);
extern void imlib_context_set_dither_mask(char);
extern void imlib_context_set_mask_alpha_threshold(int);
extern void imlib_context_set_anti_alias(char);
extern void imlib_context_set_dither(char);
extern void imlib_context_set_blend(char);
extern void imlib_context_set_color_modifier(void*);
extern void imlib_context_set_operation(int);
extern void imlib_context_set_font(void*);
extern void imlib_context_set_direction(int);
extern void imlib_context_set_angle(double);
extern void imlib_context_set_color(int, int, int, int);
extern void imlib_context_set_color_hsva(float, float, float, int);
extern void imlib_context_set_color_hlsa(float, float, float, int);
extern void imlib_context_set_color_cmya(int, int, int, int);
extern void imlib_context_set_color_range(void*);
extern void imlib_context_set_progress_function(void*);
extern void imlib_context_set_progress_granularity(char);
extern void imlib_context_set_image(void*);
extern void imlib_context_set_cliprect(int, int, int, int);
extern void imlib_context_set_TTF_encoding(int);
extern Display* imlib_context_get_display();
extern Visual* imlib_context_get_visual();
extern int imlib_context_get_colormap();
extern int imlib_context_get_drawable();
extern int imlib_context_get_mask();
extern char imlib_context_get_dither_mask();
extern char imlib_context_get_anti_alias();
extern int imlib_context_get_mask_alpha_threshold();
extern char imlib_context_get_dither();
extern char imlib_context_get_blend();
extern void* imlib_context_get_color_modifier();
extern int imlib_context_get_operation();
extern void* imlib_context_get_font();
extern double imlib_context_get_angle();
extern int imlib_context_get_direction();
extern void imlib_context_get_color(int*, int*, int*, int*);
extern void imlib_context_get_color_hsva(float*, float*, float*, int*);
extern void imlib_context_get_color_hlsa(float*, float*, float*, int*);
extern void imlib_context_get_color_cmya(int*, int*, int*, int*);
extern Imlib_Color* imlib_context_get_imlib_color();
extern void* imlib_context_get_color_range();
extern void* imlib_context_get_progress_function();
extern char imlib_context_get_progress_granularity();
extern void* imlib_context_get_image();
extern void imlib_context_get_cliprect(int*, int*, int*, int*);
extern int imlib_context_get_TTF_encoding();
extern int imlib_get_cache_size();
extern void imlib_set_cache_size(int);
extern int imlib_get_color_usage();
extern void imlib_set_color_usage(int);
extern void imlib_flush_loaders();
extern int imlib_get_visual_depth(Display*, Visual*);
extern Visual* imlib_get_best_visual(Display*, int, int*);
extern void* imlib_load_image(char*);
extern void* imlib_load_image_immediately(char*);
extern void* imlib_load_image_without_cache(char*);
extern void* imlib_load_image_immediately_without_cache(char*);
extern void* imlib_load_image_with_error_return(char*, int*);
extern void imlib_free_image();
extern void imlib_free_image_and_decache();
extern int imlib_image_get_width();
extern int imlib_image_get_height();
extern char* imlib_image_get_filename();
extern int* imlib_image_get_data();
extern int* imlib_image_get_data_for_reading_only();
extern void imlib_image_put_back_data(int*);
extern char imlib_image_has_alpha();
extern void imlib_image_set_changes_on_disk();
extern void imlib_image_get_border(Imlib_Border*);
extern void imlib_image_set_border(Imlib_Border*);
extern void imlib_image_set_format(char*);
extern void imlib_image_set_irrelevant_format(char);
extern void imlib_image_set_irrelevant_border(char);
extern void imlib_image_set_irrelevant_alpha(char);
extern char* imlib_image_format();
extern void imlib_image_set_has_alpha(char);
extern void imlib_image_query_pixel(int, int, Imlib_Color*);
extern void imlib_image_query_pixel_hsva(int, int, float*, float*, float*, int*);
extern void imlib_image_query_pixel_hlsa(int, int, float*, float*, float*, int*);
extern void imlib_image_query_pixel_cmya(int, int, int*, int*, int*, int*);
extern void imlib_render_pixmaps_for_whole_image(int*, int*);
extern void imlib_render_pixmaps_for_whole_image_at_size(int*, int*, int, int);
extern void imlib_free_pixmap_and_mask(int);
extern void imlib_render_image_on_drawable(int, int);
extern void imlib_render_image_on_drawable_at_size(int, int, int, int);
extern void imlib_render_image_part_on_drawable_at_size(int, int, int, int, int, int, int, int);
extern int imlib_render_get_pixel_color();
extern void imlib_blend_image_onto_image(void*, char, int, int, int, int, int, int, int, int);
extern void* imlib_create_image(int, int);
extern void* imlib_create_image_using_data(int, int, int*);
extern void* imlib_create_image_using_copied_data(int, int, int*);
extern void* imlib_create_image_from_drawable(int, int, int, int, int, char);
extern void* imlib_create_image_from_ximage(XImage*, XImage*, int, int, int, int, char);
extern void* imlib_create_scaled_image_from_drawable(int, int, int, int, int, int, int, char, char);
extern char imlib_copy_drawable_to_image(int, int, int, int, int, int, int, char);
extern void* imlib_clone_image();
extern void* imlib_create_cropped_image(int, int, int, int);
extern void* imlib_create_cropped_scaled_image(int, int, int, int, int, int);
extern void* imlib_updates_clone(void*);
extern void* imlib_update_append_rect(void*, int, int, int, int);
extern void* imlib_updates_merge(void*, int, int);
extern void* imlib_updates_merge_for_rendering(void*, int, int);
extern void imlib_updates_free(void*);
extern void* imlib_updates_get_next(void*);
extern void imlib_updates_get_coordinates(void*, int*, int*, int*, int*);
extern void imlib_updates_set_coordinates(void*, int, int, int, int);
extern void imlib_render_image_updates_on_drawable(void*, int, int);
extern void* imlib_updates_init();
extern void* imlib_updates_append_updates(void*, void*);
extern void imlib_image_flip_horizontal();
extern void imlib_image_flip_vertical();
extern void imlib_image_flip_diagonal();
extern void imlib_image_orientate(int);
extern void imlib_image_blur(int);
extern void imlib_image_sharpen(int);
extern void imlib_image_tile_horizontal();
extern void imlib_image_tile_vertical();
extern void imlib_image_tile();
extern void* imlib_load_font(char*);
extern void imlib_free_font();
extern int imlib_insert_font_into_fallback_chain(void*, void*);
extern void imlib_remove_font_from_fallback_chain(void*);
extern void* imlib_get_prev_font_in_fallback_chain(void*);
extern void* imlib_get_next_font_in_fallback_chain(void*);
extern void imlib_text_draw(int, int, char*);
extern void imlib_text_draw_with_return_metrics(int, int, char*, int*, int*, int*, int*);
extern void imlib_get_text_size(char*, int*, int*);
extern void imlib_get_text_advance(char*, int*, int*);
extern int imlib_get_text_inset(char*);
extern void imlib_add_path_to_font_path(char*);
extern void imlib_remove_path_from_font_path(char*);
extern char** imlib_list_font_path(int*);
extern int imlib_text_get_index_and_location(char*, int, int, int*, int*, int*, int*);
extern void imlib_text_get_location_at_index(char*, int, int*, int*, int*, int*);
extern char** imlib_list_fonts(int*);
extern void imlib_free_font_list(char**, int);
extern int imlib_get_font_cache_size();
extern void imlib_set_font_cache_size(int);
extern void imlib_flush_font_cache();
extern int imlib_get_font_ascent();
extern int imlib_get_font_descent();
extern int imlib_get_maximum_font_ascent();
extern int imlib_get_maximum_font_descent();
extern void* imlib_create_color_modifier();
extern void imlib_free_color_modifier();
extern void imlib_modify_color_modifier_gamma(double);
extern void imlib_modify_color_modifier_brightness(double);
extern void imlib_modify_color_modifier_contrast(double);
extern void imlib_set_color_modifier_tables(char*, char*, char*, char*);
extern void imlib_get_color_modifier_tables(char*, char*, char*, char*);
extern void imlib_reset_color_modifier();
extern void imlib_apply_color_modifier();
extern void imlib_apply_color_modifier_to_rectangle(int, int, int, int);
extern void* imlib_image_draw_pixel(int, int, char);
extern void* imlib_image_draw_line(int, int, int, int, char);
extern void imlib_image_draw_rectangle(int, int, int, int);
extern void imlib_image_fill_rectangle(int, int, int, int);
extern void imlib_image_copy_alpha_to_image(void*, int, int);
extern void imlib_image_copy_alpha_rectangle_to_image(void*, int, int, int, int, int, int);
extern void imlib_image_scroll_rect(int, int, int, int, int, int);
extern void imlib_image_copy_rect(int, int, int, int, int, int);
extern void* imlib_polygon_new();
extern void imlib_polygon_free(void*);
extern void imlib_polygon_add_point(void*, int, int);
extern void imlib_image_draw_polygon(void*, char);
extern void imlib_image_fill_polygon(void*);
extern void imlib_polygon_get_bounds(void*, int*, int*, int*, int*);
extern char imlib_polygon_contains_point(void*, int, int);
extern void imlib_image_draw_ellipse(int, int, int, int);
extern void imlib_image_fill_ellipse(int, int, int, int);
extern void* imlib_create_color_range();
extern void imlib_free_color_range();
extern void imlib_add_color_to_color_range(int);
extern void imlib_image_fill_color_range_rectangle(int, int, int, int, double);
extern void imlib_image_fill_hsva_color_range_rectangle(int, int, int, int, double);
extern void imlib_image_attach_data_value(char*, void*, int, void*);
extern void* imlib_image_get_attached_data(char*);
extern int imlib_image_get_attached_value(char*);
extern void imlib_image_remove_attached_data_value(char*);
extern void imlib_image_remove_and_free_attached_data_value(char*);
extern void imlib_save_image(char*);
extern void imlib_save_image_with_error_return(char*, int*);
extern void* imlib_create_rotated_image(double);
extern void imlib_rotate_image_from_buffer(double, void*);
extern void imlib_blend_image_onto_image_at_angle(void*, char, int, int, int, int, int, int, int, int);
extern void imlib_blend_image_onto_image_skewed(void*, char, int, int, int, int, int, int, int, int, int, int);
extern void imlib_render_image_on_drawable_skewed(int, int, int, int, int, int, int, int, int, int);
extern void imlib_render_image_on_drawable_at_angle(int, int, int, int, int, int, int, int);
extern void imlib_image_filter();
extern void* imlib_create_filter(int);
extern void imlib_context_set_filter(void*);
extern void* imlib_context_get_filter();
extern void imlib_free_filter();
extern void imlib_filter_set(int, int, int, int, int, int);
extern void imlib_filter_set_alpha(int, int, int, int, int, int);
extern void imlib_filter_set_red(int, int, int, int, int, int);
extern void imlib_filter_set_green(int, int, int, int, int, int);
extern void imlib_filter_set_blue(int, int, int, int, int, int);
extern void imlib_filter_constants(int, int, int, int);
extern void imlib_filter_divisors(int, int, int, int);
extern void imlib_apply_filter(char*);
extern void imlib_image_clear();
extern void imlib_image_clear_color(int, int, int, int);
