using "lib:libGLU";


namespace GLU;
const GLU::EXT_object_space_tess = 1;
const GLU::EXT_nurbs_tessellator = 1;
const GLU::FALSE = 0;
const GLU::TRUE = 1;
const GLU::VERSION_1_1 = 1;
const GLU::VERSION_1_2 = 1;
const GLU::VERSION_1_3 = 1;
const GLU::VERSION = 1050624;
const GLU::EXTENSIONS = 1050625;
const GLU::INVALID_ENUM = 1050880;
const GLU::INVALID_VALUE = 1050881;
const GLU::OUT_OF_MEMORY = 1050882;
const GLU::INCOMPATIBLE_GL_VERSION = 1050883;
const GLU::INVALID_OPERATION = 1050884;
const GLU::OUTLINE_POLYGON = 1049152;
const GLU::OUTLINE_PATCH = 1049153;
const GLU::NURBS_ERROR = 1048835;
const GLU::ERROR = 1048835;
const GLU::NURBS_BEGIN = 1048932;
const GLU::NURBS_BEGIN_EXT = 1048932;
const GLU::NURBS_VERTEX = 1048933;
const GLU::NURBS_VERTEX_EXT = 1048933;
const GLU::NURBS_NORMAL = 1048934;
const GLU::NURBS_NORMAL_EXT = 1048934;
const GLU::NURBS_COLOR = 1048935;
const GLU::NURBS_COLOR_EXT = 1048935;
const GLU::NURBS_TEXTURE_COORD = 1048936;
const GLU::NURBS_TEX_COORD_EXT = 1048936;
const GLU::NURBS_END = 1048937;
const GLU::NURBS_END_EXT = 1048937;
const GLU::NURBS_BEGIN_DATA = 1048944;
const GLU::NURBS_BEGIN_DATA_EXT = 1048944;
const GLU::NURBS_VERTEX_DATA = 1048945;
const GLU::NURBS_VERTEX_DATA_EXT = 1048945;
const GLU::NURBS_NORMAL_DATA = 1048946;
const GLU::NURBS_NORMAL_DATA_EXT = 1048946;
const GLU::NURBS_COLOR_DATA = 1048947;
const GLU::NURBS_COLOR_DATA_EXT = 1048947;
const GLU::NURBS_TEXTURE_COORD_DATA = 1048948;
const GLU::NURBS_TEX_COORD_DATA_EXT = 1048948;
const GLU::NURBS_END_DATA = 1048949;
const GLU::NURBS_END_DATA_EXT = 1048949;
const GLU::NURBS_ERROR1 = 1049169;
const GLU::NURBS_ERROR2 = 1049170;
const GLU::NURBS_ERROR3 = 1049171;
const GLU::NURBS_ERROR4 = 1049172;
const GLU::NURBS_ERROR5 = 1049173;
const GLU::NURBS_ERROR6 = 1049174;
const GLU::NURBS_ERROR7 = 1049175;
const GLU::NURBS_ERROR8 = 1049176;
const GLU::NURBS_ERROR9 = 1049177;
const GLU::NURBS_ERROR10 = 1049184;
const GLU::NURBS_ERROR11 = 1049185;
const GLU::NURBS_ERROR12 = 1049186;
const GLU::NURBS_ERROR13 = 1049187;
const GLU::NURBS_ERROR14 = 1049188;
const GLU::NURBS_ERROR15 = 1049189;
const GLU::NURBS_ERROR16 = 1049190;
const GLU::NURBS_ERROR17 = 1049191;
const GLU::NURBS_ERROR18 = 1049192;
const GLU::NURBS_ERROR19 = 1049193;
const GLU::NURBS_ERROR20 = 1049200;
const GLU::NURBS_ERROR21 = 1049201;
const GLU::NURBS_ERROR22 = 1049202;
const GLU::NURBS_ERROR23 = 1049203;
const GLU::NURBS_ERROR24 = 1049204;
const GLU::NURBS_ERROR25 = 1049205;
const GLU::NURBS_ERROR26 = 1049206;
const GLU::NURBS_ERROR27 = 1049207;
const GLU::NURBS_ERROR28 = 1049208;
const GLU::NURBS_ERROR29 = 1049209;
const GLU::NURBS_ERROR30 = 1049216;
const GLU::NURBS_ERROR31 = 1049217;
const GLU::NURBS_ERROR32 = 1049218;
const GLU::NURBS_ERROR33 = 1049219;
const GLU::NURBS_ERROR34 = 1049220;
const GLU::NURBS_ERROR35 = 1049221;
const GLU::NURBS_ERROR36 = 1049222;
const GLU::NURBS_ERROR37 = 1049223;
const GLU::AUTO_LOAD_MATRIX = 1049088;
const GLU::CULLING = 1049089;
const GLU::SAMPLING_TOLERANCE = 1049091;
const GLU::DISPLAY_MODE = 1049092;
const GLU::PARAMETRIC_TOLERANCE = 1049090;
const GLU::SAMPLING_METHOD = 1049093;
const GLU::U_STEP = 1049094;
const GLU::V_STEP = 1049095;
const GLU::NURBS_MODE = 1048928;
const GLU::NURBS_MODE_EXT = 1048928;
const GLU::NURBS_TESSELLATOR = 1048929;
const GLU::NURBS_TESSELLATOR_EXT = 1048929;
const GLU::NURBS_RENDERER = 1048930;
const GLU::NURBS_RENDERER_EXT = 1048930;
const GLU::OBJECT_PARAMETRIC_ERROR = 1049096;
const GLU::OBJECT_PARAMETRIC_ERROR_EXT = 1049096;
const GLU::OBJECT_PATH_LENGTH = 1049097;
const GLU::OBJECT_PATH_LENGTH_EXT = 1049097;
const GLU::PATH_LENGTH = 1049109;
const GLU::PARAMETRIC_ERROR = 1049110;
const GLU::DOMAIN_DISTANCE = 1049111;
const GLU::MAP1_TRIM_2 = 1049104;
const GLU::MAP1_TRIM_3 = 1049105;
const GLU::POINT = 1048592;
const GLU::LINE = 1048593;
const GLU::FILL = 1048594;
const GLU::SILHOUETTE = 1048595;
const GLU::SMOOTH = 1048576;
const GLU::FLAT = 1048577;
const GLU::NONE = 1048578;
const GLU::OUTSIDE = 1048608;
const GLU::INSIDE = 1048609;
const GLU::TESS_BEGIN = 1048832;
const GLU::BEGIN = 1048832;
const GLU::TESS_VERTEX = 1048833;
const GLU::VERTEX = 1048833;
const GLU::TESS_END = 1048834;
const GLU::END = 1048834;
const GLU::TESS_ERROR = 1048835;
const GLU::TESS_EDGE_FLAG = 1048836;
const GLU::EDGE_FLAG = 1048836;
const GLU::TESS_COMBINE = 1048837;
const GLU::TESS_BEGIN_DATA = 1048838;
const GLU::TESS_VERTEX_DATA = 1048839;
const GLU::TESS_END_DATA = 1048840;
const GLU::TESS_ERROR_DATA = 1048841;
const GLU::TESS_EDGE_FLAG_DATA = 1048848;
const GLU::TESS_COMBINE_DATA = 1048849;
const GLU::CW = 1048864;
const GLU::CCW = 1048865;
const GLU::INTERIOR = 1048866;
const GLU::EXTERIOR = 1048867;
const GLU::UNKNOWN = 1048868;
const GLU::TESS_WINDING_RULE = 1048896;
const GLU::TESS_BOUNDARY_ONLY = 1048897;
const GLU::TESS_TOLERANCE = 1048898;
const GLU::TESS_ERROR1 = 1048913;
const GLU::TESS_ERROR2 = 1048914;
const GLU::TESS_ERROR3 = 1048915;
const GLU::TESS_ERROR4 = 1048916;
const GLU::TESS_ERROR5 = 1048917;
const GLU::TESS_ERROR6 = 1048918;
const GLU::TESS_ERROR7 = 1048919;
const GLU::TESS_ERROR8 = 1048920;
const GLU::TESS_MISSING_BEGIN_POLYGON = 1048913;
const GLU::TESS_MISSING_BEGIN_CONTOUR = 1048914;
const GLU::TESS_MISSING_END_POLYGON = 1048915;
const GLU::TESS_MISSING_END_CONTOUR = 1048916;
const GLU::TESS_COORD_TOO_LARGE = 1048917;
const GLU::TESS_NEED_COMBINE_CALLBACK = 1048918;
const GLU::TESS_WINDING_ODD = 1048880;
const GLU::TESS_WINDING_NONZERO = 1048881;
const GLU::TESS_WINDING_POSITIVE = 1048882;
const GLU::TESS_WINDING_NEGATIVE = 1048883;
const GLU::TESS_WINDING_ABS_GEQ_TWO = 1048884;
const GLU::TESS_MAX_COORD = 1;
extern void PureGL_gluBeginCurve(void*) = BeginCurve;
extern void PureGL_gluBeginPolygon(void*) = BeginPolygon;
extern void PureGL_gluBeginSurface(void*) = BeginSurface;
extern void PureGL_gluBeginTrim(void*) = BeginTrim;
extern int PureGL_gluBuild1DMipmapLevels(int,int,int,int,int,int,int,int,void*) = Build1DMipmapLevels;
extern int PureGL_gluBuild1DMipmaps(int,int,int,int,int,void*) = Build1DMipmaps;
extern int PureGL_gluBuild2DMipmapLevels(int,int,int,int,int,int,int,int,int,void*) = Build2DMipmapLevels;
extern int PureGL_gluBuild2DMipmaps(int,int,int,int,int,int,void*) = Build2DMipmaps;
extern int PureGL_gluBuild3DMipmapLevels(int,int,int,int,int,int,int,int,int,int,void*) = Build3DMipmapLevels;
extern int PureGL_gluBuild3DMipmaps(int,int,int,int,int,int,int,void*) = Build3DMipmaps;
extern char PureGL_gluCheckExtension(char*,char*) = CheckExtension;
extern void PureGL_gluCylinder(void*,double,double,double,int,int) = Cylinder;
extern void PureGL_gluDeleteNurbsRenderer(void*) = DeleteNurbsRenderer;
extern void PureGL_gluDeleteQuadric(void*) = DeleteQuadric;
extern void PureGL_gluDeleteTess(void*) = DeleteTess;
extern void PureGL_gluDisk(void*,double,double,int,int) = Disk;
extern void PureGL_gluEndCurve(void*) = EndCurve;
extern void PureGL_gluEndPolygon(void*) = EndPolygon;
extern void PureGL_gluEndSurface(void*) = EndSurface;
extern void PureGL_gluEndTrim(void*) = EndTrim;
extern char* PureGL_gluErrorString(int) = ErrorString;
extern void PureGL_gluGetNurbsProperty(void*,int,float*) = GetNurbsProperty;
extern char* PureGL_gluGetString(int) = GetString;
extern void PureGL_gluGetTessProperty(void*,int,double*) = GetTessProperty;
extern void PureGL_gluLoadSamplingMatrices(void*,float*,float*,int*) = LoadSamplingMatrices;
extern void PureGL_gluLookAt(double,double,double,double,double,double,double,double,double) = LookAt;
extern void* PureGL_gluNewNurbsRenderer() = NewNurbsRenderer;
extern void* PureGL_gluNewQuadric() = NewQuadric;
extern void* PureGL_gluNewTess() = NewTess;
extern void PureGL_gluNextContour(void*,int) = NextContour;
extern void PureGL_gluNurbsCallback(void*,int,void*) = NurbsCallback;
extern void PureGL_gluNurbsCallbackData(void*,void*) = NurbsCallbackData;
extern void PureGL_gluNurbsCallbackDataEXT(void*,void*) = NurbsCallbackDataEXT;
extern void PureGL_gluNurbsCurve(void*,int,float*,int,float*,int,int) = NurbsCurve;
extern void PureGL_gluNurbsProperty(void*,int,float) = NurbsProperty;
extern void PureGL_gluNurbsSurface(void*,int,float*,int,float*,int,int,float*,int,int,int) = NurbsSurface;
extern void PureGL_gluOrtho2D(double,double,double,double) = Ortho2D;
extern void PureGL_gluPartialDisk(void*,double,double,int,int,double,double) = PartialDisk;
extern void PureGL_gluPerspective(double,double,double,double) = Perspective;
extern void PureGL_gluPickMatrix(double,double,double,double,int*) = PickMatrix;
extern int PureGL_gluProject(double,double,double,double*,double*,int*,double*,double*,double*) = Project;
extern void PureGL_gluPwlCurve(void*,int,float*,int,int) = PwlCurve;
extern void PureGL_gluQuadricCallback(void*,int,void*) = QuadricCallback;
extern void PureGL_gluQuadricDrawStyle(void*,int) = QuadricDrawStyle;
extern void PureGL_gluQuadricNormals(void*,int) = QuadricNormals;
extern void PureGL_gluQuadricOrientation(void*,int) = QuadricOrientation;
extern void PureGL_gluQuadricTexture(void*,char) = QuadricTexture;
extern int PureGL_gluScaleImage(int,int,int,int,void*,int,int,int,void*) = ScaleImage;
extern void PureGL_gluSphere(void*,double,int,int) = Sphere;
extern void PureGL_gluTessBeginContour(void*) = TessBeginContour;
extern void PureGL_gluTessBeginPolygon(void*,void*) = TessBeginPolygon;
extern void PureGL_gluTessCallback(void*,int,void*) = TessCallback;
extern void PureGL_gluTessEndContour(void*) = TessEndContour;
extern void PureGL_gluTessEndPolygon(void*) = TessEndPolygon;
extern void PureGL_gluTessNormal(void*,double,double,double) = TessNormal;
extern void PureGL_gluTessProperty(void*,int,double) = TessProperty;
extern void PureGL_gluTessVertex(void*,double*,void*) = TessVertex;
extern int PureGL_gluUnProject(double,double,double,double*,double*,int*,double*,double*,double*) = UnProject;
extern int PureGL_gluUnProject4(double,double,double,double,double*,double*,int*,double,double,double*,double*,double*,double*) = UnProject4;
