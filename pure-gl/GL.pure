using "lib:libGL";


namespace GL;
const GL::VERSION_1_1 = 1;
const GL::CURRENT_BIT = 1;
const GL::POINT_BIT = 2;
const GL::LINE_BIT = 4;
const GL::POLYGON_BIT = 8;
const GL::POLYGON_STIPPLE_BIT = 16;
const GL::PIXEL_MODE_BIT = 32;
const GL::LIGHTING_BIT = 64;
const GL::FOG_BIT = 128;
const GL::DEPTH_BUFFER_BIT = 256;
const GL::ACCUM_BUFFER_BIT = 512;
const GL::STENCIL_BUFFER_BIT = 1024;
const GL::VIEWPORT_BIT = 2048;
const GL::TRANSFORM_BIT = 4096;
const GL::ENABLE_BIT = 8192;
const GL::COLOR_BUFFER_BIT = 16384;
const GL::HINT_BIT = 32768;
const GL::EVAL_BIT = 65536;
const GL::LIST_BIT = 131072;
const GL::TEXTURE_BIT = 262144;
const GL::SCISSOR_BIT = 524288;
const GL::ALL_ATTRIB_BITS = -1;
const GL::CLIENT_PIXEL_STORE_BIT = 1;
const GL::CLIENT_VERTEX_ARRAY_BIT = 2;
const GL::CLIENT_ALL_ATTRIB_BITS = -1;
const GL::FALSE = 0;
const GL::TRUE = 1;
const GL::POINTS = 0;
const GL::LINES = 1;
const GL::LINE_LOOP = 2;
const GL::LINE_STRIP = 3;
const GL::TRIANGLES = 4;
const GL::TRIANGLE_STRIP = 5;
const GL::TRIANGLE_FAN = 6;
const GL::QUADS = 7;
const GL::QUAD_STRIP = 8;
const GL::POLYGON = 9;
const GL::ACCUM = 256;
const GL::LOAD = 257;
const GL::RETURN = 258;
const GL::MULT = 259;
const GL::ADD = 260;
const GL::NEVER = 512;
const GL::LESS = 513;
const GL::EQUAL = 514;
const GL::LEQUAL = 515;
const GL::GREATER = 516;
const GL::NOTEQUAL = 517;
const GL::GEQUAL = 518;
const GL::ALWAYS = 519;
const GL::ZERO = 0;
const GL::ONE = 1;
const GL::SRC_COLOR = 768;
const GL::ONE_MINUS_SRC_COLOR = 769;
const GL::SRC_ALPHA = 770;
const GL::ONE_MINUS_SRC_ALPHA = 771;
const GL::DST_ALPHA = 772;
const GL::ONE_MINUS_DST_ALPHA = 773;
const GL::DST_COLOR = 774;
const GL::ONE_MINUS_DST_COLOR = 775;
const GL::SRC_ALPHA_SATURATE = 776;
const GL::NONE = 0;
const GL::FRONT_LEFT = 1024;
const GL::FRONT_RIGHT = 1025;
const GL::BACK_LEFT = 1026;
const GL::BACK_RIGHT = 1027;
const GL::FRONT = 1028;
const GL::BACK = 1029;
const GL::LEFT = 1030;
const GL::RIGHT = 1031;
const GL::FRONT_AND_BACK = 1032;
const GL::AUX0 = 1033;
const GL::AUX1 = 1034;
const GL::AUX2 = 1035;
const GL::AUX3 = 1036;
const GL::NO_ERROR = 0;
const GL::INVALID_ENUM = 1280;
const GL::INVALID_VALUE = 1281;
const GL::INVALID_OPERATION = 1282;
const GL::STACK_OVERFLOW = 1283;
const GL::STACK_UNDERFLOW = 1284;
const GL::OUT_OF_MEMORY = 1285;
const GL::TABLE_TOO_LARGE = 32817;
const GL::_2D = 1536;
const GL::_3D = 1537;
const GL::_3D_COLOR = 1538;
const GL::_3D_COLOR_TEXTURE = 1539;
const GL::_4D_COLOR_TEXTURE = 1540;
const GL::PASS_THROUGH_TOKEN = 1792;
const GL::POINT_TOKEN = 1793;
const GL::LINE_TOKEN = 1794;
const GL::POLYGON_TOKEN = 1795;
const GL::BITMAP_TOKEN = 1796;
const GL::DRAW_PIXEL_TOKEN = 1797;
const GL::COPY_PIXEL_TOKEN = 1798;
const GL::LINE_RESET_TOKEN = 1799;
const GL::EXP = 2048;
const GL::EXP2 = 2049;
const GL::CW = 2304;
const GL::CCW = 2305;
const GL::COEFF = 2560;
const GL::ORDER = 2561;
const GL::DOMAIN = 2562;
const GL::PIXEL_MAP_I_TO_I = 3184;
const GL::PIXEL_MAP_S_TO_S = 3185;
const GL::PIXEL_MAP_I_TO_R = 3186;
const GL::PIXEL_MAP_I_TO_G = 3187;
const GL::PIXEL_MAP_I_TO_B = 3188;
const GL::PIXEL_MAP_I_TO_A = 3189;
const GL::PIXEL_MAP_R_TO_R = 3190;
const GL::PIXEL_MAP_G_TO_G = 3191;
const GL::PIXEL_MAP_B_TO_B = 3192;
const GL::PIXEL_MAP_A_TO_A = 3193;
const GL::VERTEX_ARRAY_POINTER = 32910;
const GL::NORMAL_ARRAY_POINTER = 32911;
const GL::COLOR_ARRAY_POINTER = 32912;
const GL::INDEX_ARRAY_POINTER = 32913;
const GL::TEXTURE_COORD_ARRAY_POINTER = 32914;
const GL::EDGE_FLAG_ARRAY_POINTER = 32915;
const GL::CURRENT_COLOR = 2816;
const GL::CURRENT_INDEX = 2817;
const GL::CURRENT_NORMAL = 2818;
const GL::CURRENT_TEXTURE_COORDS = 2819;
const GL::CURRENT_RASTER_COLOR = 2820;
const GL::CURRENT_RASTER_INDEX = 2821;
const GL::CURRENT_RASTER_TEXTURE_COORDS = 2822;
const GL::CURRENT_RASTER_POSITION = 2823;
const GL::CURRENT_RASTER_POSITION_VALID = 2824;
const GL::CURRENT_RASTER_DISTANCE = 2825;
const GL::POINT_SMOOTH = 2832;
const GL::POINT_SIZE = 2833;
const GL::SMOOTH_POINT_SIZE_RANGE = 2834;
const GL::SMOOTH_POINT_SIZE_GRANULARITY = 2835;
const GL::POINT_SIZE_RANGE = 2834;
const GL::POINT_SIZE_GRANULARITY = 2835;
const GL::LINE_SMOOTH = 2848;
const GL::LINE_WIDTH = 2849;
const GL::SMOOTH_LINE_WIDTH_RANGE = 2850;
const GL::SMOOTH_LINE_WIDTH_GRANULARITY = 2851;
const GL::LINE_WIDTH_RANGE = 2850;
const GL::LINE_WIDTH_GRANULARITY = 2851;
const GL::LINE_STIPPLE = 2852;
const GL::LINE_STIPPLE_PATTERN = 2853;
const GL::LINE_STIPPLE_REPEAT = 2854;
const GL::LIST_MODE = 2864;
const GL::MAX_LIST_NESTING = 2865;
const GL::LIST_BASE = 2866;
const GL::LIST_INDEX = 2867;
const GL::POLYGON_MODE = 2880;
const GL::POLYGON_SMOOTH = 2881;
const GL::POLYGON_STIPPLE = 2882;
const GL::EDGE_FLAG = 2883;
const GL::CULL_FACE = 2884;
const GL::CULL_FACE_MODE = 2885;
const GL::FRONT_FACE = 2886;
const GL::LIGHTING = 2896;
const GL::LIGHT_MODEL_LOCAL_VIEWER = 2897;
const GL::LIGHT_MODEL_TWO_SIDE = 2898;
const GL::LIGHT_MODEL_AMBIENT = 2899;
const GL::SHADE_MODEL = 2900;
const GL::COLOR_MATERIAL_FACE = 2901;
const GL::COLOR_MATERIAL_PARAMETER = 2902;
const GL::COLOR_MATERIAL = 2903;
const GL::FOG = 2912;
const GL::FOG_INDEX = 2913;
const GL::FOG_DENSITY = 2914;
const GL::FOG_START = 2915;
const GL::FOG_END = 2916;
const GL::FOG_MODE = 2917;
const GL::FOG_COLOR = 2918;
const GL::DEPTH_RANGE = 2928;
const GL::DEPTH_TEST = 2929;
const GL::DEPTH_WRITEMASK = 2930;
const GL::DEPTH_CLEAR_VALUE = 2931;
const GL::DEPTH_FUNC = 2932;
const GL::ACCUM_CLEAR_VALUE = 2944;
const GL::STENCIL_TEST = 2960;
const GL::STENCIL_CLEAR_VALUE = 2961;
const GL::STENCIL_FUNC = 2962;
const GL::STENCIL_VALUE_MASK = 2963;
const GL::STENCIL_FAIL = 2964;
const GL::STENCIL_PASS_DEPTH_FAIL = 2965;
const GL::STENCIL_PASS_DEPTH_PASS = 2966;
const GL::STENCIL_REF = 2967;
const GL::STENCIL_WRITEMASK = 2968;
const GL::MATRIX_MODE = 2976;
const GL::NORMALIZE = 2977;
const GL::VIEWPORT = 2978;
const GL::MODELVIEW_STACK_DEPTH = 2979;
const GL::PROJECTION_STACK_DEPTH = 2980;
const GL::TEXTURE_STACK_DEPTH = 2981;
const GL::MODELVIEW_MATRIX = 2982;
const GL::PROJECTION_MATRIX = 2983;
const GL::TEXTURE_MATRIX = 2984;
const GL::ATTRIB_STACK_DEPTH = 2992;
const GL::CLIENT_ATTRIB_STACK_DEPTH = 2993;
const GL::ALPHA_TEST = 3008;
const GL::ALPHA_TEST_FUNC = 3009;
const GL::ALPHA_TEST_REF = 3010;
const GL::DITHER = 3024;
const GL::BLEND_DST = 3040;
const GL::BLEND_SRC = 3041;
const GL::BLEND = 3042;
const GL::LOGIC_OP_MODE = 3056;
const GL::INDEX_LOGIC_OP = 3057;
const GL::LOGIC_OP = 3057;
const GL::COLOR_LOGIC_OP = 3058;
const GL::AUX_BUFFERS = 3072;
const GL::DRAW_BUFFER = 3073;
const GL::READ_BUFFER = 3074;
const GL::SCISSOR_BOX = 3088;
const GL::SCISSOR_TEST = 3089;
const GL::INDEX_CLEAR_VALUE = 3104;
const GL::INDEX_WRITEMASK = 3105;
const GL::COLOR_CLEAR_VALUE = 3106;
const GL::COLOR_WRITEMASK = 3107;
const GL::INDEX_MODE = 3120;
const GL::RGBA_MODE = 3121;
const GL::DOUBLEBUFFER = 3122;
const GL::STEREO = 3123;
const GL::RENDER_MODE = 3136;
const GL::PERSPECTIVE_CORRECTION_HINT = 3152;
const GL::POINT_SMOOTH_HINT = 3153;
const GL::LINE_SMOOTH_HINT = 3154;
const GL::POLYGON_SMOOTH_HINT = 3155;
const GL::FOG_HINT = 3156;
const GL::TEXTURE_GEN_S = 3168;
const GL::TEXTURE_GEN_T = 3169;
const GL::TEXTURE_GEN_R = 3170;
const GL::TEXTURE_GEN_Q = 3171;
const GL::PIXEL_MAP_I_TO_I_SIZE = 3248;
const GL::PIXEL_MAP_S_TO_S_SIZE = 3249;
const GL::PIXEL_MAP_I_TO_R_SIZE = 3250;
const GL::PIXEL_MAP_I_TO_G_SIZE = 3251;
const GL::PIXEL_MAP_I_TO_B_SIZE = 3252;
const GL::PIXEL_MAP_I_TO_A_SIZE = 3253;
const GL::PIXEL_MAP_R_TO_R_SIZE = 3254;
const GL::PIXEL_MAP_G_TO_G_SIZE = 3255;
const GL::PIXEL_MAP_B_TO_B_SIZE = 3256;
const GL::PIXEL_MAP_A_TO_A_SIZE = 3257;
const GL::UNPACK_SWAP_BYTES = 3312;
const GL::UNPACK_LSB_FIRST = 3313;
const GL::UNPACK_ROW_LENGTH = 3314;
const GL::UNPACK_SKIP_ROWS = 3315;
const GL::UNPACK_SKIP_PIXELS = 3316;
const GL::UNPACK_ALIGNMENT = 3317;
const GL::PACK_SWAP_BYTES = 3328;
const GL::PACK_LSB_FIRST = 3329;
const GL::PACK_ROW_LENGTH = 3330;
const GL::PACK_SKIP_ROWS = 3331;
const GL::PACK_SKIP_PIXELS = 3332;
const GL::PACK_ALIGNMENT = 3333;
const GL::MAP_COLOR = 3344;
const GL::MAP_STENCIL = 3345;
const GL::INDEX_SHIFT = 3346;
const GL::INDEX_OFFSET = 3347;
const GL::RED_SCALE = 3348;
const GL::RED_BIAS = 3349;
const GL::ZOOM_X = 3350;
const GL::ZOOM_Y = 3351;
const GL::GREEN_SCALE = 3352;
const GL::GREEN_BIAS = 3353;
const GL::BLUE_SCALE = 3354;
const GL::BLUE_BIAS = 3355;
const GL::ALPHA_SCALE = 3356;
const GL::ALPHA_BIAS = 3357;
const GL::DEPTH_SCALE = 3358;
const GL::DEPTH_BIAS = 3359;
const GL::MAX_EVAL_ORDER = 3376;
const GL::MAX_LIGHTS = 3377;
const GL::MAX_CLIP_PLANES = 3378;
const GL::MAX_TEXTURE_SIZE = 3379;
const GL::MAX_PIXEL_MAP_TABLE = 3380;
const GL::MAX_ATTRIB_STACK_DEPTH = 3381;
const GL::MAX_MODELVIEW_STACK_DEPTH = 3382;
const GL::MAX_NAME_STACK_DEPTH = 3383;
const GL::MAX_PROJECTION_STACK_DEPTH = 3384;
const GL::MAX_TEXTURE_STACK_DEPTH = 3385;
const GL::MAX_VIEWPORT_DIMS = 3386;
const GL::MAX_CLIENT_ATTRIB_STACK_DEPTH = 3387;
const GL::SUBPIXEL_BITS = 3408;
const GL::INDEX_BITS = 3409;
const GL::RED_BITS = 3410;
const GL::GREEN_BITS = 3411;
const GL::BLUE_BITS = 3412;
const GL::ALPHA_BITS = 3413;
const GL::DEPTH_BITS = 3414;
const GL::STENCIL_BITS = 3415;
const GL::ACCUM_RED_BITS = 3416;
const GL::ACCUM_GREEN_BITS = 3417;
const GL::ACCUM_BLUE_BITS = 3418;
const GL::ACCUM_ALPHA_BITS = 3419;
const GL::NAME_STACK_DEPTH = 3440;
const GL::AUTO_NORMAL = 3456;
const GL::MAP1_COLOR_4 = 3472;
const GL::MAP1_INDEX = 3473;
const GL::MAP1_NORMAL = 3474;
const GL::MAP1_TEXTURE_COORD_1 = 3475;
const GL::MAP1_TEXTURE_COORD_2 = 3476;
const GL::MAP1_TEXTURE_COORD_3 = 3477;
const GL::MAP1_TEXTURE_COORD_4 = 3478;
const GL::MAP1_VERTEX_3 = 3479;
const GL::MAP1_VERTEX_4 = 3480;
const GL::MAP2_COLOR_4 = 3504;
const GL::MAP2_INDEX = 3505;
const GL::MAP2_NORMAL = 3506;
const GL::MAP2_TEXTURE_COORD_1 = 3507;
const GL::MAP2_TEXTURE_COORD_2 = 3508;
const GL::MAP2_TEXTURE_COORD_3 = 3509;
const GL::MAP2_TEXTURE_COORD_4 = 3510;
const GL::MAP2_VERTEX_3 = 3511;
const GL::MAP2_VERTEX_4 = 3512;
const GL::MAP1_GRID_DOMAIN = 3536;
const GL::MAP1_GRID_SEGMENTS = 3537;
const GL::MAP2_GRID_DOMAIN = 3538;
const GL::MAP2_GRID_SEGMENTS = 3539;
const GL::TEXTURE_1D = 3552;
const GL::TEXTURE_2D = 3553;
const GL::FEEDBACK_BUFFER_POINTER = 3568;
const GL::FEEDBACK_BUFFER_SIZE = 3569;
const GL::FEEDBACK_BUFFER_TYPE = 3570;
const GL::SELECTION_BUFFER_POINTER = 3571;
const GL::SELECTION_BUFFER_SIZE = 3572;
const GL::POLYGON_OFFSET_UNITS = 10752;
const GL::POLYGON_OFFSET_POINT = 10753;
const GL::POLYGON_OFFSET_LINE = 10754;
const GL::POLYGON_OFFSET_FILL = 32823;
const GL::POLYGON_OFFSET_FACTOR = 32824;
const GL::TEXTURE_BINDING_1D = 32872;
const GL::TEXTURE_BINDING_2D = 32873;
const GL::TEXTURE_BINDING_3D = 32874;
const GL::VERTEX_ARRAY = 32884;
const GL::NORMAL_ARRAY = 32885;
const GL::COLOR_ARRAY = 32886;
const GL::INDEX_ARRAY = 32887;
const GL::TEXTURE_COORD_ARRAY = 32888;
const GL::EDGE_FLAG_ARRAY = 32889;
const GL::VERTEX_ARRAY_SIZE = 32890;
const GL::VERTEX_ARRAY_TYPE = 32891;
const GL::VERTEX_ARRAY_STRIDE = 32892;
const GL::NORMAL_ARRAY_TYPE = 32894;
const GL::NORMAL_ARRAY_STRIDE = 32895;
const GL::COLOR_ARRAY_SIZE = 32897;
const GL::COLOR_ARRAY_TYPE = 32898;
const GL::COLOR_ARRAY_STRIDE = 32899;
const GL::INDEX_ARRAY_TYPE = 32901;
const GL::INDEX_ARRAY_STRIDE = 32902;
const GL::TEXTURE_COORD_ARRAY_SIZE = 32904;
const GL::TEXTURE_COORD_ARRAY_TYPE = 32905;
const GL::TEXTURE_COORD_ARRAY_STRIDE = 32906;
const GL::EDGE_FLAG_ARRAY_STRIDE = 32908;
const GL::TEXTURE_WIDTH = 4096;
const GL::TEXTURE_HEIGHT = 4097;
const GL::TEXTURE_INTERNAL_FORMAT = 4099;
const GL::TEXTURE_COMPONENTS = 4099;
const GL::TEXTURE_BORDER_COLOR = 4100;
const GL::TEXTURE_BORDER = 4101;
const GL::TEXTURE_RED_SIZE = 32860;
const GL::TEXTURE_GREEN_SIZE = 32861;
const GL::TEXTURE_BLUE_SIZE = 32862;
const GL::TEXTURE_ALPHA_SIZE = 32863;
const GL::TEXTURE_LUMINANCE_SIZE = 32864;
const GL::TEXTURE_INTENSITY_SIZE = 32865;
const GL::TEXTURE_PRIORITY = 32870;
const GL::TEXTURE_RESIDENT = 32871;
const GL::DONT_CARE = 4352;
const GL::FASTEST = 4353;
const GL::NICEST = 4354;
const GL::AMBIENT = 4608;
const GL::DIFFUSE = 4609;
const GL::SPECULAR = 4610;
const GL::POSITION = 4611;
const GL::SPOT_DIRECTION = 4612;
const GL::SPOT_EXPONENT = 4613;
const GL::SPOT_CUTOFF = 4614;
const GL::CONSTANT_ATTENUATION = 4615;
const GL::LINEAR_ATTENUATION = 4616;
const GL::QUADRATIC_ATTENUATION = 4617;
const GL::COMPILE = 4864;
const GL::COMPILE_AND_EXECUTE = 4865;
const GL::BYTE = 5120;
const GL::UNSIGNED_BYTE = 5121;
const GL::SHORT = 5122;
const GL::UNSIGNED_SHORT = 5123;
const GL::INT = 5124;
const GL::UNSIGNED_INT = 5125;
const GL::FLOAT = 5126;
const GL::_2_BYTES = 5127;
const GL::_3_BYTES = 5128;
const GL::_4_BYTES = 5129;
const GL::DOUBLE = 5130;
const GL::CLEAR = 5376;
const GL::AND = 5377;
const GL::AND_REVERSE = 5378;
const GL::COPY = 5379;
const GL::AND_INVERTED = 5380;
const GL::NOOP = 5381;
const GL::XOR = 5382;
const GL::OR = 5383;
const GL::NOR = 5384;
const GL::EQUIV = 5385;
const GL::INVERT = 5386;
const GL::OR_REVERSE = 5387;
const GL::COPY_INVERTED = 5388;
const GL::OR_INVERTED = 5389;
const GL::NAND = 5390;
const GL::SET = 5391;
const GL::EMISSION = 5632;
const GL::SHININESS = 5633;
const GL::AMBIENT_AND_DIFFUSE = 5634;
const GL::COLOR_INDEXES = 5635;
const GL::MODELVIEW = 5888;
const GL::PROJECTION = 5889;
const GL::TEXTURE = 5890;
const GL::COLOR = 6144;
const GL::DEPTH = 6145;
const GL::STENCIL = 6146;
const GL::COLOR_INDEX = 6400;
const GL::STENCIL_INDEX = 6401;
const GL::DEPTH_COMPONENT = 6402;
const GL::RED = 6403;
const GL::GREEN = 6404;
const GL::BLUE = 6405;
const GL::ALPHA = 6406;
const GL::RGB = 6407;
const GL::RGBA = 6408;
const GL::LUMINANCE = 6409;
const GL::LUMINANCE_ALPHA = 6410;
const GL::BITMAP = 6656;
const GL::POINT = 6912;
const GL::LINE = 6913;
const GL::FILL = 6914;
const GL::RENDER = 7168;
const GL::FEEDBACK = 7169;
const GL::SELECT = 7170;
const GL::FLAT = 7424;
const GL::SMOOTH = 7425;
const GL::KEEP = 7680;
const GL::REPLACE = 7681;
const GL::INCR = 7682;
const GL::DECR = 7683;
const GL::VENDOR = 7936;
const GL::RENDERER = 7937;
const GL::VERSION = 7938;
const GL::EXTENSIONS = 7939;
const GL::S = 8192;
const GL::T = 8193;
const GL::R = 8194;
const GL::Q = 8195;
const GL::MODULATE = 8448;
const GL::DECAL = 8449;
const GL::TEXTURE_ENV_MODE = 8704;
const GL::TEXTURE_ENV_COLOR = 8705;
const GL::EYE_LINEAR = 9216;
const GL::OBJECT_LINEAR = 9217;
const GL::SPHERE_MAP = 9218;
const GL::TEXTURE_GEN_MODE = 9472;
const GL::OBJECT_PLANE = 9473;
const GL::EYE_PLANE = 9474;
const GL::NEAREST = 9728;
const GL::LINEAR = 9729;
const GL::NEAREST_MIPMAP_NEAREST = 9984;
const GL::LINEAR_MIPMAP_NEAREST = 9985;
const GL::NEAREST_MIPMAP_LINEAR = 9986;
const GL::LINEAR_MIPMAP_LINEAR = 9987;
const GL::TEXTURE_MAG_FILTER = 10240;
const GL::TEXTURE_MIN_FILTER = 10241;
const GL::TEXTURE_WRAP_S = 10242;
const GL::TEXTURE_WRAP_T = 10243;
const GL::PROXY_TEXTURE_1D = 32867;
const GL::PROXY_TEXTURE_2D = 32868;
const GL::CLAMP = 10496;
const GL::REPEAT = 10497;
const GL::R3_G3_B2 = 10768;
const GL::ALPHA4 = 32827;
const GL::ALPHA8 = 32828;
const GL::ALPHA12 = 32829;
const GL::ALPHA16 = 32830;
const GL::LUMINANCE4 = 32831;
const GL::LUMINANCE8 = 32832;
const GL::LUMINANCE12 = 32833;
const GL::LUMINANCE16 = 32834;
const GL::LUMINANCE4_ALPHA4 = 32835;
const GL::LUMINANCE6_ALPHA2 = 32836;
const GL::LUMINANCE8_ALPHA8 = 32837;
const GL::LUMINANCE12_ALPHA4 = 32838;
const GL::LUMINANCE12_ALPHA12 = 32839;
const GL::LUMINANCE16_ALPHA16 = 32840;
const GL::INTENSITY = 32841;
const GL::INTENSITY4 = 32842;
const GL::INTENSITY8 = 32843;
const GL::INTENSITY12 = 32844;
const GL::INTENSITY16 = 32845;
const GL::RGB4 = 32847;
const GL::RGB5 = 32848;
const GL::RGB8 = 32849;
const GL::RGB10 = 32850;
const GL::RGB12 = 32851;
const GL::RGB16 = 32852;
const GL::RGBA2 = 32853;
const GL::RGBA4 = 32854;
const GL::RGB5_A1 = 32855;
const GL::RGBA8 = 32856;
const GL::RGB10_A2 = 32857;
const GL::RGBA12 = 32858;
const GL::RGBA16 = 32859;
const GL::V2F = 10784;
const GL::V3F = 10785;
const GL::C4UB_V2F = 10786;
const GL::C4UB_V3F = 10787;
const GL::C3F_V3F = 10788;
const GL::N3F_V3F = 10789;
const GL::C4F_N3F_V3F = 10790;
const GL::T2F_V3F = 10791;
const GL::T4F_V4F = 10792;
const GL::T2F_C4UB_V3F = 10793;
const GL::T2F_C3F_V3F = 10794;
const GL::T2F_N3F_V3F = 10795;
const GL::T2F_C4F_N3F_V3F = 10796;
const GL::T4F_C4F_N3F_V4F = 10797;
const GL::CLIP_PLANE0 = 12288;
const GL::CLIP_PLANE1 = 12289;
const GL::CLIP_PLANE2 = 12290;
const GL::CLIP_PLANE3 = 12291;
const GL::CLIP_PLANE4 = 12292;
const GL::CLIP_PLANE5 = 12293;
const GL::LIGHT0 = 16384;
const GL::LIGHT1 = 16385;
const GL::LIGHT2 = 16386;
const GL::LIGHT3 = 16387;
const GL::LIGHT4 = 16388;
const GL::LIGHT5 = 16389;
const GL::LIGHT6 = 16390;
const GL::LIGHT7 = 16391;
const GL::PACK_SKIP_IMAGES = 32875;
const GL::PACK_IMAGE_HEIGHT = 32876;
const GL::UNPACK_SKIP_IMAGES = 32877;
const GL::UNPACK_IMAGE_HEIGHT = 32878;
const GL::TEXTURE_3D = 32879;
const GL::PROXY_TEXTURE_3D = 32880;
const GL::TEXTURE_DEPTH = 32881;
const GL::TEXTURE_WRAP_R = 32882;
const GL::MAX_3D_TEXTURE_SIZE = 32883;
const GL::BGR = 32992;
const GL::BGRA = 32993;
const GL::UNSIGNED_BYTE_3_3_2 = 32818;
const GL::UNSIGNED_BYTE_2_3_3_REV = 33634;
const GL::UNSIGNED_SHORT_5_6_5 = 33635;
const GL::UNSIGNED_SHORT_5_6_5_REV = 33636;
const GL::UNSIGNED_SHORT_4_4_4_4 = 32819;
const GL::UNSIGNED_SHORT_4_4_4_4_REV = 33637;
const GL::UNSIGNED_SHORT_5_5_5_1 = 32820;
const GL::UNSIGNED_SHORT_1_5_5_5_REV = 33638;
const GL::UNSIGNED_INT_8_8_8_8 = 32821;
const GL::UNSIGNED_INT_8_8_8_8_REV = 33639;
const GL::UNSIGNED_INT_10_10_10_2 = 32822;
const GL::UNSIGNED_INT_2_10_10_10_REV = 33640;
const GL::RESCALE_NORMAL = 32826;
const GL::LIGHT_MODEL_COLOR_CONTROL = 33272;
const GL::SINGLE_COLOR = 33273;
const GL::SEPARATE_SPECULAR_COLOR = 33274;
const GL::CLAMP_TO_EDGE = 33071;
const GL::TEXTURE_MIN_LOD = 33082;
const GL::TEXTURE_MAX_LOD = 33083;
const GL::TEXTURE_BASE_LEVEL = 33084;
const GL::TEXTURE_MAX_LEVEL = 33085;
const GL::MAX_ELEMENTS_VERTICES = 33000;
const GL::MAX_ELEMENTS_INDICES = 33001;
const GL::ALIASED_POINT_SIZE_RANGE = 33901;
const GL::ALIASED_LINE_WIDTH_RANGE = 33902;
const GL::ACTIVE_TEXTURE = 34016;
const GL::CLIENT_ACTIVE_TEXTURE = 34017;
const GL::MAX_TEXTURE_UNITS = 34018;
const GL::TEXTURE0 = 33984;
const GL::TEXTURE1 = 33985;
const GL::TEXTURE2 = 33986;
const GL::TEXTURE3 = 33987;
const GL::TEXTURE4 = 33988;
const GL::TEXTURE5 = 33989;
const GL::TEXTURE6 = 33990;
const GL::TEXTURE7 = 33991;
const GL::TEXTURE8 = 33992;
const GL::TEXTURE9 = 33993;
const GL::TEXTURE10 = 33994;
const GL::TEXTURE11 = 33995;
const GL::TEXTURE12 = 33996;
const GL::TEXTURE13 = 33997;
const GL::TEXTURE14 = 33998;
const GL::TEXTURE15 = 33999;
const GL::TEXTURE16 = 34000;
const GL::TEXTURE17 = 34001;
const GL::TEXTURE18 = 34002;
const GL::TEXTURE19 = 34003;
const GL::TEXTURE20 = 34004;
const GL::TEXTURE21 = 34005;
const GL::TEXTURE22 = 34006;
const GL::TEXTURE23 = 34007;
const GL::TEXTURE24 = 34008;
const GL::TEXTURE25 = 34009;
const GL::TEXTURE26 = 34010;
const GL::TEXTURE27 = 34011;
const GL::TEXTURE28 = 34012;
const GL::TEXTURE29 = 34013;
const GL::TEXTURE30 = 34014;
const GL::TEXTURE31 = 34015;
const GL::NORMAL_MAP = 34065;
const GL::REFLECTION_MAP = 34066;
const GL::TEXTURE_CUBE_MAP = 34067;
const GL::TEXTURE_BINDING_CUBE_MAP = 34068;
const GL::TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
const GL::TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
const GL::TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
const GL::TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
const GL::TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
const GL::TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
const GL::PROXY_TEXTURE_CUBE_MAP = 34075;
const GL::MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
const GL::COMBINE = 34160;
const GL::COMBINE_RGB = 34161;
const GL::COMBINE_ALPHA = 34162;
const GL::RGB_SCALE = 34163;
const GL::ADD_SIGNED = 34164;
const GL::INTERPOLATE = 34165;
const GL::CONSTANT = 34166;
const GL::PRIMARY_COLOR = 34167;
const GL::PREVIOUS = 34168;
const GL::SOURCE0_RGB = 34176;
const GL::SOURCE1_RGB = 34177;
const GL::SOURCE2_RGB = 34178;
const GL::SOURCE0_ALPHA = 34184;
const GL::SOURCE1_ALPHA = 34185;
const GL::SOURCE2_ALPHA = 34186;
const GL::OPERAND0_RGB = 34192;
const GL::OPERAND1_RGB = 34193;
const GL::OPERAND2_RGB = 34194;
const GL::OPERAND0_ALPHA = 34200;
const GL::OPERAND1_ALPHA = 34201;
const GL::OPERAND2_ALPHA = 34202;
const GL::SUBTRACT = 34023;
const GL::TRANSPOSE_MODELVIEW_MATRIX = 34019;
const GL::TRANSPOSE_PROJECTION_MATRIX = 34020;
const GL::TRANSPOSE_TEXTURE_MATRIX = 34021;
const GL::TRANSPOSE_COLOR_MATRIX = 34022;
const GL::COMPRESSED_ALPHA = 34025;
const GL::COMPRESSED_LUMINANCE = 34026;
const GL::COMPRESSED_LUMINANCE_ALPHA = 34027;
const GL::COMPRESSED_INTENSITY = 34028;
const GL::COMPRESSED_RGB = 34029;
const GL::COMPRESSED_RGBA = 34030;
const GL::TEXTURE_COMPRESSION_HINT = 34031;
const GL::TEXTURE_COMPRESSED_IMAGE_SIZE = 34464;
const GL::TEXTURE_COMPRESSED = 34465;
const GL::NUM_COMPRESSED_TEXTURE_FORMATS = 34466;
const GL::COMPRESSED_TEXTURE_FORMATS = 34467;
const GL::DOT3_RGB = 34478;
const GL::DOT3_RGBA = 34479;
const GL::CLAMP_TO_BORDER = 33069;
const GL::MULTISAMPLE = 32925;
const GL::SAMPLE_ALPHA_TO_COVERAGE = 32926;
const GL::SAMPLE_ALPHA_TO_ONE = 32927;
const GL::SAMPLE_COVERAGE = 32928;
const GL::SAMPLE_BUFFERS = 32936;
const GL::SAMPLES = 32937;
const GL::SAMPLE_COVERAGE_VALUE = 32938;
const GL::SAMPLE_COVERAGE_INVERT = 32939;
const GL::MULTISAMPLE_BIT = 536870912;
const GL::POINT_SIZE_MIN = 33062;
const GL::POINT_SIZE_MAX = 33063;
const GL::POINT_FADE_THRESHOLD_SIZE = 33064;
const GL::POINT_DISTANCE_ATTENUATION = 33065;
const GL::FOG_COORDINATE_SOURCE = 33872;
const GL::FOG_COORDINATE = 33873;
const GL::FRAGMENT_DEPTH = 33874;
const GL::CURRENT_FOG_COORDINATE = 33875;
const GL::FOG_COORDINATE_ARRAY_TYPE = 33876;
const GL::FOG_COORDINATE_ARRAY_STRIDE = 33877;
const GL::FOG_COORDINATE_ARRAY_POINTER = 33878;
const GL::FOG_COORDINATE_ARRAY = 33879;
const GL::COLOR_SUM = 33880;
const GL::CURRENT_SECONDARY_COLOR = 33881;
const GL::SECONDARY_COLOR_ARRAY_SIZE = 33882;
const GL::SECONDARY_COLOR_ARRAY_TYPE = 33883;
const GL::SECONDARY_COLOR_ARRAY_STRIDE = 33884;
const GL::SECONDARY_COLOR_ARRAY_POINTER = 33885;
const GL::SECONDARY_COLOR_ARRAY = 33886;
const GL::INCR_WRAP = 34055;
const GL::DECR_WRAP = 34056;
const GL::MAX_TEXTURE_LOD_BIAS = 34045;
const GL::TEXTURE_FILTER_CONTROL = 34048;
const GL::TEXTURE_LOD_BIAS = 34049;
const GL::GENERATE_MIPMAP = 33169;
const GL::GENERATE_MIPMAP_HINT = 33170;
const GL::BLEND_DST_RGB = 32968;
const GL::BLEND_SRC_RGB = 32969;
const GL::BLEND_DST_ALPHA = 32970;
const GL::BLEND_SRC_ALPHA = 32971;
const GL::MIRRORED_REPEAT = 33648;
const GL::DEPTH_COMPONENT16 = 33189;
const GL::DEPTH_COMPONENT24 = 33190;
const GL::DEPTH_COMPONENT32 = 33191;
const GL::TEXTURE_DEPTH_SIZE = 34890;
const GL::DEPTH_TEXTURE_MODE = 34891;
const GL::TEXTURE_COMPARE_MODE = 34892;
const GL::TEXTURE_COMPARE_FUNC = 34893;
const GL::COMPARE_R_TO_TEXTURE = 34894;
const GL::GLEXT_VERSION = 40;
const GL::CONSTANT_COLOR = 32769;
const GL::ONE_MINUS_CONSTANT_COLOR = 32770;
const GL::CONSTANT_ALPHA = 32771;
const GL::ONE_MINUS_CONSTANT_ALPHA = 32772;
const GL::BLEND_COLOR = 32773;
const GL::FUNC_ADD = 32774;
const GL::MIN = 32775;
const GL::MAX = 32776;
const GL::BLEND_EQUATION = 32777;
const GL::FUNC_SUBTRACT = 32778;
const GL::FUNC_REVERSE_SUBTRACT = 32779;
const GL::CONVOLUTION_1D = 32784;
const GL::CONVOLUTION_2D = 32785;
const GL::SEPARABLE_2D = 32786;
const GL::CONVOLUTION_BORDER_MODE = 32787;
const GL::CONVOLUTION_FILTER_SCALE = 32788;
const GL::CONVOLUTION_FILTER_BIAS = 32789;
const GL::REDUCE = 32790;
const GL::CONVOLUTION_FORMAT = 32791;
const GL::CONVOLUTION_WIDTH = 32792;
const GL::CONVOLUTION_HEIGHT = 32793;
const GL::MAX_CONVOLUTION_WIDTH = 32794;
const GL::MAX_CONVOLUTION_HEIGHT = 32795;
const GL::POST_CONVOLUTION_RED_SCALE = 32796;
const GL::POST_CONVOLUTION_GREEN_SCALE = 32797;
const GL::POST_CONVOLUTION_BLUE_SCALE = 32798;
const GL::POST_CONVOLUTION_ALPHA_SCALE = 32799;
const GL::POST_CONVOLUTION_RED_BIAS = 32800;
const GL::POST_CONVOLUTION_GREEN_BIAS = 32801;
const GL::POST_CONVOLUTION_BLUE_BIAS = 32802;
const GL::POST_CONVOLUTION_ALPHA_BIAS = 32803;
const GL::HISTOGRAM = 32804;
const GL::PROXY_HISTOGRAM = 32805;
const GL::HISTOGRAM_WIDTH = 32806;
const GL::HISTOGRAM_FORMAT = 32807;
const GL::HISTOGRAM_RED_SIZE = 32808;
const GL::HISTOGRAM_GREEN_SIZE = 32809;
const GL::HISTOGRAM_BLUE_SIZE = 32810;
const GL::HISTOGRAM_ALPHA_SIZE = 32811;
const GL::HISTOGRAM_LUMINANCE_SIZE = 32812;
const GL::HISTOGRAM_SINK = 32813;
const GL::MINMAX = 32814;
const GL::MINMAX_FORMAT = 32815;
const GL::MINMAX_SINK = 32816;
const GL::COLOR_MATRIX = 32945;
const GL::COLOR_MATRIX_STACK_DEPTH = 32946;
const GL::MAX_COLOR_MATRIX_STACK_DEPTH = 32947;
const GL::POST_COLOR_MATRIX_RED_SCALE = 32948;
const GL::POST_COLOR_MATRIX_GREEN_SCALE = 32949;
const GL::POST_COLOR_MATRIX_BLUE_SCALE = 32950;
const GL::POST_COLOR_MATRIX_ALPHA_SCALE = 32951;
const GL::POST_COLOR_MATRIX_RED_BIAS = 32952;
const GL::POST_COLOR_MATRIX_GREEN_BIAS = 32953;
const GL::POST_COLOR_MATRIX_BLUE_BIAS = 32954;
const GL::POST_COLOR_MATRIX_ALPHA_BIAS = 32955;
const GL::COLOR_TABLE = 32976;
const GL::POST_CONVOLUTION_COLOR_TABLE = 32977;
const GL::POST_COLOR_MATRIX_COLOR_TABLE = 32978;
const GL::PROXY_COLOR_TABLE = 32979;
const GL::PROXY_POST_CONVOLUTION_COLOR_TABLE = 32980;
const GL::PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 32981;
const GL::COLOR_TABLE_SCALE = 32982;
const GL::COLOR_TABLE_BIAS = 32983;
const GL::COLOR_TABLE_FORMAT = 32984;
const GL::COLOR_TABLE_WIDTH = 32985;
const GL::COLOR_TABLE_RED_SIZE = 32986;
const GL::COLOR_TABLE_GREEN_SIZE = 32987;
const GL::COLOR_TABLE_BLUE_SIZE = 32988;
const GL::COLOR_TABLE_ALPHA_SIZE = 32989;
const GL::COLOR_TABLE_LUMINANCE_SIZE = 32990;
const GL::COLOR_TABLE_INTENSITY_SIZE = 32991;
const GL::CONSTANT_BORDER = 33105;
const GL::REPLICATE_BORDER = 33107;
const GL::CONVOLUTION_BORDER_COLOR = 33108;
const GL::BUFFER_SIZE = 34660;
const GL::BUFFER_USAGE = 34661;
const GL::QUERY_COUNTER_BITS = 34916;
const GL::CURRENT_QUERY = 34917;
const GL::QUERY_RESULT = 34918;
const GL::QUERY_RESULT_AVAILABLE = 34919;
const GL::ARRAY_BUFFER = 34962;
const GL::ELEMENT_ARRAY_BUFFER = 34963;
const GL::ARRAY_BUFFER_BINDING = 34964;
const GL::ELEMENT_ARRAY_BUFFER_BINDING = 34965;
const GL::VERTEX_ARRAY_BUFFER_BINDING = 34966;
const GL::NORMAL_ARRAY_BUFFER_BINDING = 34967;
const GL::COLOR_ARRAY_BUFFER_BINDING = 34968;
const GL::INDEX_ARRAY_BUFFER_BINDING = 34969;
const GL::TEXTURE_COORD_ARRAY_BUFFER_BINDING = 34970;
const GL::EDGE_FLAG_ARRAY_BUFFER_BINDING = 34971;
const GL::SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 34972;
const GL::FOG_COORDINATE_ARRAY_BUFFER_BINDING = 34973;
const GL::WEIGHT_ARRAY_BUFFER_BINDING = 34974;
const GL::VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975;
const GL::READ_ONLY = 35000;
const GL::WRITE_ONLY = 35001;
const GL::READ_WRITE = 35002;
const GL::BUFFER_ACCESS = 35003;
const GL::BUFFER_MAPPED = 35004;
const GL::BUFFER_MAP_POINTER = 35005;
const GL::STREAM_DRAW = 35040;
const GL::STREAM_READ = 35041;
const GL::STREAM_COPY = 35042;
const GL::STATIC_DRAW = 35044;
const GL::STATIC_READ = 35045;
const GL::STATIC_COPY = 35046;
const GL::DYNAMIC_DRAW = 35048;
const GL::DYNAMIC_READ = 35049;
const GL::DYNAMIC_COPY = 35050;
const GL::SAMPLES_PASSED = 35092;
const GL::FOG_COORD_SRC = 33872;
const GL::FOG_COORD = 33873;
const GL::CURRENT_FOG_COORD = 33875;
const GL::FOG_COORD_ARRAY_TYPE = 33876;
const GL::FOG_COORD_ARRAY_STRIDE = 33877;
const GL::FOG_COORD_ARRAY_POINTER = 33878;
const GL::FOG_COORD_ARRAY = 33879;
const GL::FOG_COORD_ARRAY_BUFFER_BINDING = 34973;
const GL::SRC0_RGB = 34176;
const GL::SRC1_RGB = 34177;
const GL::SRC2_RGB = 34178;
const GL::SRC0_ALPHA = 34184;
const GL::SRC1_ALPHA = 34185;
const GL::SRC2_ALPHA = 34186;
const GL::BLEND_EQUATION_RGB = 32777;
const GL::VERTEX_ATTRIB_ARRAY_ENABLED = 34338;
const GL::VERTEX_ATTRIB_ARRAY_SIZE = 34339;
const GL::VERTEX_ATTRIB_ARRAY_STRIDE = 34340;
const GL::VERTEX_ATTRIB_ARRAY_TYPE = 34341;
const GL::CURRENT_VERTEX_ATTRIB = 34342;
const GL::VERTEX_PROGRAM_POINT_SIZE = 34370;
const GL::VERTEX_PROGRAM_TWO_SIDE = 34371;
const GL::VERTEX_ATTRIB_ARRAY_POINTER = 34373;
const GL::STENCIL_BACK_FUNC = 34816;
const GL::STENCIL_BACK_FAIL = 34817;
const GL::STENCIL_BACK_PASS_DEPTH_FAIL = 34818;
const GL::STENCIL_BACK_PASS_DEPTH_PASS = 34819;
const GL::MAX_DRAW_BUFFERS = 34852;
const GL::DRAW_BUFFER0 = 34853;
const GL::DRAW_BUFFER1 = 34854;
const GL::DRAW_BUFFER2 = 34855;
const GL::DRAW_BUFFER3 = 34856;
const GL::DRAW_BUFFER4 = 34857;
const GL::DRAW_BUFFER5 = 34858;
const GL::DRAW_BUFFER6 = 34859;
const GL::DRAW_BUFFER7 = 34860;
const GL::DRAW_BUFFER8 = 34861;
const GL::DRAW_BUFFER9 = 34862;
const GL::DRAW_BUFFER10 = 34863;
const GL::DRAW_BUFFER11 = 34864;
const GL::DRAW_BUFFER12 = 34865;
const GL::DRAW_BUFFER13 = 34866;
const GL::DRAW_BUFFER14 = 34867;
const GL::DRAW_BUFFER15 = 34868;
const GL::BLEND_EQUATION_ALPHA = 34877;
const GL::POINT_SPRITE = 34913;
const GL::COORD_REPLACE = 34914;
const GL::MAX_VERTEX_ATTRIBS = 34921;
const GL::VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922;
const GL::MAX_TEXTURE_COORDS = 34929;
const GL::MAX_TEXTURE_IMAGE_UNITS = 34930;
const GL::FRAGMENT_SHADER = 35632;
const GL::VERTEX_SHADER = 35633;
const GL::MAX_FRAGMENT_UNIFORM_COMPONENTS = 35657;
const GL::MAX_VERTEX_UNIFORM_COMPONENTS = 35658;
const GL::MAX_VARYING_FLOATS = 35659;
const GL::MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
const GL::MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661;
const GL::SHADER_TYPE = 35663;
const GL::FLOAT_VEC2 = 35664;
const GL::FLOAT_VEC3 = 35665;
const GL::FLOAT_VEC4 = 35666;
const GL::INT_VEC2 = 35667;
const GL::INT_VEC3 = 35668;
const GL::INT_VEC4 = 35669;
const GL::BOOL = 35670;
const GL::BOOL_VEC2 = 35671;
const GL::BOOL_VEC3 = 35672;
const GL::BOOL_VEC4 = 35673;
const GL::FLOAT_MAT2 = 35674;
const GL::FLOAT_MAT3 = 35675;
const GL::FLOAT_MAT4 = 35676;
const GL::SAMPLER_1D = 35677;
const GL::SAMPLER_2D = 35678;
const GL::SAMPLER_3D = 35679;
const GL::SAMPLER_CUBE = 35680;
const GL::SAMPLER_1D_SHADOW = 35681;
const GL::SAMPLER_2D_SHADOW = 35682;
const GL::DELETE_STATUS = 35712;
const GL::COMPILE_STATUS = 35713;
const GL::LINK_STATUS = 35714;
const GL::VALIDATE_STATUS = 35715;
const GL::INFO_LOG_LENGTH = 35716;
const GL::ATTACHED_SHADERS = 35717;
const GL::ACTIVE_UNIFORMS = 35718;
const GL::ACTIVE_UNIFORM_MAX_LENGTH = 35719;
const GL::SHADER_SOURCE_LENGTH = 35720;
const GL::ACTIVE_ATTRIBUTES = 35721;
const GL::ACTIVE_ATTRIBUTE_MAX_LENGTH = 35722;
const GL::FRAGMENT_SHADER_DERIVATIVE_HINT = 35723;
const GL::SHADING_LANGUAGE_VERSION = 35724;
const GL::CURRENT_PROGRAM = 35725;
const GL::POINT_SPRITE_COORD_ORIGIN = 36000;
const GL::LOWER_LEFT = 36001;
const GL::UPPER_LEFT = 36002;
const GL::STENCIL_BACK_REF = 36003;
const GL::STENCIL_BACK_VALUE_MASK = 36004;
const GL::STENCIL_BACK_WRITEMASK = 36005;
const GL::PIXEL_PACK_BUFFER = 35051;
const GL::PIXEL_UNPACK_BUFFER = 35052;
const GL::PIXEL_PACK_BUFFER_BINDING = 35053;
const GL::PIXEL_UNPACK_BUFFER_BINDING = 35055;
const GL::SRGB = 35904;
const GL::SRGB8 = 35905;
const GL::SRGB_ALPHA = 35906;
const GL::SRGB8_ALPHA8 = 35907;
const GL::SLUMINANCE_ALPHA = 35908;
const GL::SLUMINANCE8_ALPHA8 = 35909;
const GL::SLUMINANCE = 35910;
const GL::SLUMINANCE8 = 35911;
const GL::COMPRESSED_SRGB = 35912;
const GL::COMPRESSED_SRGB_ALPHA = 35913;
const GL::COMPRESSED_SLUMINANCE = 35914;
const GL::COMPRESSED_SLUMINANCE_ALPHA = 35915;
const GL::CURRENT_RASTER_SECONDARY_COLOR = 33887;
const GL::PHONG_WIN = 33002;
const GL::PHONG_HINT_WIN = 33003;
const GL::FOG_SPECULAR_TEXTURE_WIN = 33004;
const GL::SCREEN_COORDINATES_REND = 33936;
const GL::INVERTED_SCREEN_W_REND = 33937;
const GL::VERSION_1_2 = 1;
const GL::VERSION_1_3 = 1;
const GL::VERSION_1_4 = 1;
const GL::VERSION_1_5 = 1;
const GL::VERSION_2_0 = 1;
const GL::VERSION_2_1 = 1;
extern void glAccum(int,float) = Accum;
extern void glAlphaFunc(int,float) = AlphaFunc;
extern char glAreTexturesResident(int,int*,char*) = AreTexturesResident;
extern void glArrayElement(int) = ArrayElement;
extern void glBegin(int) = Begin;
extern void glBindTexture(int,int) = BindTexture;
extern void glBitmap(int,int,float,float,float,float,char*) = Bitmap;
extern void glBlendFunc(int,int) = BlendFunc;
extern void glCallList(int) = CallList;
extern void glCallLists(int,int,void*) = CallLists;
extern void glClear(int) = Clear;
extern void glClearAccum(float,float,float,float) = ClearAccum;
extern void glClearColor(float,float,float,float) = ClearColor;
extern void glClearDepth(double) = ClearDepth;
extern void glClearIndex(float) = ClearIndex;
extern void glClearStencil(int) = ClearStencil;
extern void glClipPlane(int,double*) = ClipPlane;
extern void glColor3b(char,char,char) = Color3b;
extern void glColor3bv(char*) = Color3bv;
extern void glColor3d(double,double,double) = Color3d;
extern void glColor3dv(double*) = Color3dv;
extern void glColor3f(float,float,float) = Color3f;
extern void glColor3fv(float*) = Color3fv;
extern void glColor3i(int,int,int) = Color3i;
extern void glColor3iv(int*) = Color3iv;
extern void glColor3s(short,short,short) = Color3s;
extern void glColor3sv(short*) = Color3sv;
extern void glColor3ub(char,char,char) = Color3ub;
extern void glColor3ubv(char*) = Color3ubv;
extern void glColor3ui(int,int,int) = Color3ui;
extern void glColor3uiv(int*) = Color3uiv;
extern void glColor3us(short,short,short) = Color3us;
extern void glColor3usv(short*) = Color3usv;
extern void glColor4b(char,char,char,char) = Color4b;
extern void glColor4bv(char*) = Color4bv;
extern void glColor4d(double,double,double,double) = Color4d;
extern void glColor4dv(double*) = Color4dv;
extern void glColor4f(float,float,float,float) = Color4f;
extern void glColor4fv(float*) = Color4fv;
extern void glColor4i(int,int,int,int) = Color4i;
extern void glColor4iv(int*) = Color4iv;
extern void glColor4s(short,short,short,short) = Color4s;
extern void glColor4sv(short*) = Color4sv;
extern void glColor4ub(char,char,char,char) = Color4ub;
extern void glColor4ubv(char*) = Color4ubv;
extern void glColor4ui(int,int,int,int) = Color4ui;
extern void glColor4uiv(int*) = Color4uiv;
extern void glColor4us(short,short,short,short) = Color4us;
extern void glColor4usv(short*) = Color4usv;
extern void glColorMask(char,char,char,char) = ColorMask;
extern void glColorMaterial(int,int) = ColorMaterial;
extern void glColorPointer(int,int,int,void*) = ColorPointer;
extern void glCopyPixels(int,int,int,int,int) = CopyPixels;
extern void glCopyTexImage1D(int,int,int,int,int,int,int) = CopyTexImage1D;
extern void glCopyTexImage2D(int,int,int,int,int,int,int,int) = CopyTexImage2D;
extern void glCopyTexSubImage1D(int,int,int,int,int,int) = CopyTexSubImage1D;
extern void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) = CopyTexSubImage2D;
extern void glCullFace(int) = CullFace;
extern void glDeleteLists(int,int) = DeleteLists;
extern void glDeleteTextures(int,int*) = DeleteTextures;
extern void glDepthFunc(int) = DepthFunc;
extern void glDepthMask(char) = DepthMask;
extern void glDepthRange(double,double) = DepthRange;
extern void glDisable(int) = Disable;
extern void glDisableClientState(int) = DisableClientState;
extern void glDrawArrays(int,int,int) = DrawArrays;
extern void glDrawBuffer(int) = DrawBuffer;
extern void glDrawElements(int,int,int,void*) = DrawElements;
extern void glDrawPixels(int,int,int,int,void*) = DrawPixels;
extern void glEdgeFlag(char) = EdgeFlag;
extern void glEdgeFlagPointer(int,void*) = EdgeFlagPointer;
extern void glEdgeFlagv(char*) = EdgeFlagv;
extern void glEnable(int) = Enable;
extern void glEnableClientState(int) = EnableClientState;
extern void glEnd() = End;
extern void glEndList() = EndList;
extern void glEvalCoord1d(double) = EvalCoord1d;
extern void glEvalCoord1dv(double*) = EvalCoord1dv;
extern void glEvalCoord1f(float) = EvalCoord1f;
extern void glEvalCoord1fv(float*) = EvalCoord1fv;
extern void glEvalCoord2d(double,double) = EvalCoord2d;
extern void glEvalCoord2dv(double*) = EvalCoord2dv;
extern void glEvalCoord2f(float,float) = EvalCoord2f;
extern void glEvalCoord2fv(float*) = EvalCoord2fv;
extern void glEvalMesh1(int,int,int) = EvalMesh1;
extern void glEvalMesh2(int,int,int,int,int) = EvalMesh2;
extern void glEvalPoint1(int) = EvalPoint1;
extern void glEvalPoint2(int,int) = EvalPoint2;
extern void glFeedbackBuffer(int,int,float*) = FeedbackBuffer;
extern void glFinish() = Finish;
extern void glFlush() = Flush;
extern void glFogf(int,float) = Fogf;
extern void glFogfv(int,float*) = Fogfv;
extern void glFogi(int,int) = Fogi;
extern void glFogiv(int,int*) = Fogiv;
extern void glFrontFace(int) = FrontFace;
extern void glFrustum(double,double,double,double,double,double) = Frustum;
extern int glGenLists(int) = GenLists;
extern void glGenTextures(int,int*) = GenTextures;
extern void glGetBooleanv(int,char*) = GetBooleanv;
extern void glGetClipPlane(int,double*) = GetClipPlane;
extern void glGetDoublev(int,double*) = GetDoublev;
extern int glGetError() = GetError;
extern void glGetFloatv(int,float*) = GetFloatv;
extern void glGetIntegerv(int,int*) = GetIntegerv;
extern void glGetLightfv(int,int,float*) = GetLightfv;
extern void glGetLightiv(int,int,int*) = GetLightiv;
extern void glGetMapdv(int,int,double*) = GetMapdv;
extern void glGetMapfv(int,int,float*) = GetMapfv;
extern void glGetMapiv(int,int,int*) = GetMapiv;
extern void glGetMaterialfv(int,int,float*) = GetMaterialfv;
extern void glGetMaterialiv(int,int,int*) = GetMaterialiv;
extern void glGetPixelMapfv(int,float*) = GetPixelMapfv;
extern void glGetPixelMapuiv(int,int*) = GetPixelMapuiv;
extern void glGetPixelMapusv(int,short*) = GetPixelMapusv;
extern void glGetPointerv(int,void**) = GetPointerv;
extern void glGetPolygonStipple(char*) = GetPolygonStipple;
extern char* glGetString(int) = GetString;
extern void glGetTexEnvfv(int,int,float*) = GetTexEnvfv;
extern void glGetTexEnviv(int,int,int*) = GetTexEnviv;
extern void glGetTexGendv(int,int,double*) = GetTexGendv;
extern void glGetTexGenfv(int,int,float*) = GetTexGenfv;
extern void glGetTexGeniv(int,int,int*) = GetTexGeniv;
extern void glGetTexImage(int,int,int,int,void*) = GetTexImage;
extern void glGetTexLevelParameterfv(int,int,int,float*) = GetTexLevelParameterfv;
extern void glGetTexLevelParameteriv(int,int,int,int*) = GetTexLevelParameteriv;
extern void glGetTexParameterfv(int,int,float*) = GetTexParameterfv;
extern void glGetTexParameteriv(int,int,int*) = GetTexParameteriv;
extern void glHint(int,int) = Hint;
extern void glIndexMask(int) = IndexMask;
extern void glIndexPointer(int,int,void*) = IndexPointer;
extern void glIndexd(double) = Indexd;
extern void glIndexdv(double*) = Indexdv;
extern void glIndexf(float) = Indexf;
extern void glIndexfv(float*) = Indexfv;
extern void glIndexi(int) = Indexi;
extern void glIndexiv(int*) = Indexiv;
extern void glIndexs(short) = Indexs;
extern void glIndexsv(short*) = Indexsv;
extern void glIndexub(char) = Indexub;
extern void glIndexubv(char*) = Indexubv;
extern void glInitNames() = InitNames;
extern void glInterleavedArrays(int,int,void*) = InterleavedArrays;
extern char glIsEnabled(int) = IsEnabled;
extern char glIsList(int) = IsList;
extern char glIsTexture(int) = IsTexture;
extern void glLightModelf(int,float) = LightModelf;
extern void glLightModelfv(int,float*) = LightModelfv;
extern void glLightModeli(int,int) = LightModeli;
extern void glLightModeliv(int,int*) = LightModeliv;
extern void glLightf(int,int,float) = Lightf;
extern void glLightfv(int,int,float*) = Lightfv;
extern void glLighti(int,int,int) = Lighti;
extern void glLightiv(int,int,int*) = Lightiv;
extern void glLineStipple(int,short) = LineStipple;
extern void glLineWidth(float) = LineWidth;
extern void glListBase(int) = ListBase;
extern void glLoadIdentity() = LoadIdentity;
extern void glLoadMatrixd(double*) = LoadMatrixd;
extern void glLoadMatrixf(float*) = LoadMatrixf;
extern void glLoadName(int) = LoadName;
extern void glLogicOp(int) = LogicOp;
extern void glMap1d(int,double,double,int,int,double*) = Map1d;
extern void glMap1f(int,float,float,int,int,float*) = Map1f;
extern void glMap2d(int,double,double,int,int,double,double,int,int,double*) = Map2d;
extern void glMap2f(int,float,float,int,int,float,float,int,int,float*) = Map2f;
extern void glMapGrid1d(int,double,double) = MapGrid1d;
extern void glMapGrid1f(int,float,float) = MapGrid1f;
extern void glMapGrid2d(int,double,double,int,double,double) = MapGrid2d;
extern void glMapGrid2f(int,float,float,int,float,float) = MapGrid2f;
extern void glMaterialf(int,int,float) = Materialf;
extern void glMaterialfv(int,int,float*) = Materialfv;
extern void glMateriali(int,int,int) = Materiali;
extern void glMaterialiv(int,int,int*) = Materialiv;
extern void glMatrixMode(int) = MatrixMode;
extern void glMultMatrixd(double*) = MultMatrixd;
extern void glMultMatrixf(float*) = MultMatrixf;
extern void glNewList(int,int) = NewList;
extern void glNormal3b(char,char,char) = Normal3b;
extern void glNormal3bv(char*) = Normal3bv;
extern void glNormal3d(double,double,double) = Normal3d;
extern void glNormal3dv(double*) = Normal3dv;
extern void glNormal3f(float,float,float) = Normal3f;
extern void glNormal3fv(float*) = Normal3fv;
extern void glNormal3i(int,int,int) = Normal3i;
extern void glNormal3iv(int*) = Normal3iv;
extern void glNormal3s(short,short,short) = Normal3s;
extern void glNormal3sv(short*) = Normal3sv;
extern void glNormalPointer(int,int,void*) = NormalPointer;
extern void glOrtho(double,double,double,double,double,double) = Ortho;
extern void glPassThrough(float) = PassThrough;
extern void glPixelMapfv(int,int,float*) = PixelMapfv;
extern void glPixelMapuiv(int,int,int*) = PixelMapuiv;
extern void glPixelMapusv(int,int,short*) = PixelMapusv;
extern void glPixelStoref(int,float) = PixelStoref;
extern void glPixelStorei(int,int) = PixelStorei;
extern void glPixelTransferf(int,float) = PixelTransferf;
extern void glPixelTransferi(int,int) = PixelTransferi;
extern void glPixelZoom(float,float) = PixelZoom;
extern void glPointSize(float) = PointSize;
extern void glPolygonMode(int,int) = PolygonMode;
extern void glPolygonOffset(float,float) = PolygonOffset;
extern void glPolygonStipple(char*) = PolygonStipple;
extern void glPopAttrib() = PopAttrib;
extern void glPopClientAttrib() = PopClientAttrib;
extern void glPopMatrix() = PopMatrix;
extern void glPopName() = PopName;
extern void glPrioritizeTextures(int,int*,float*) = PrioritizeTextures;
extern void glPushAttrib(int) = PushAttrib;
extern void glPushClientAttrib(int) = PushClientAttrib;
extern void glPushMatrix() = PushMatrix;
extern void glPushName(int) = PushName;
extern void glRasterPos2d(double,double) = RasterPos2d;
extern void glRasterPos2dv(double*) = RasterPos2dv;
extern void glRasterPos2f(float,float) = RasterPos2f;
extern void glRasterPos2fv(float*) = RasterPos2fv;
extern void glRasterPos2i(int,int) = RasterPos2i;
extern void glRasterPos2iv(int*) = RasterPos2iv;
extern void glRasterPos2s(short,short) = RasterPos2s;
extern void glRasterPos2sv(short*) = RasterPos2sv;
extern void glRasterPos3d(double,double,double) = RasterPos3d;
extern void glRasterPos3dv(double*) = RasterPos3dv;
extern void glRasterPos3f(float,float,float) = RasterPos3f;
extern void glRasterPos3fv(float*) = RasterPos3fv;
extern void glRasterPos3i(int,int,int) = RasterPos3i;
extern void glRasterPos3iv(int*) = RasterPos3iv;
extern void glRasterPos3s(short,short,short) = RasterPos3s;
extern void glRasterPos3sv(short*) = RasterPos3sv;
extern void glRasterPos4d(double,double,double,double) = RasterPos4d;
extern void glRasterPos4dv(double*) = RasterPos4dv;
extern void glRasterPos4f(float,float,float,float) = RasterPos4f;
extern void glRasterPos4fv(float*) = RasterPos4fv;
extern void glRasterPos4i(int,int,int,int) = RasterPos4i;
extern void glRasterPos4iv(int*) = RasterPos4iv;
extern void glRasterPos4s(short,short,short,short) = RasterPos4s;
extern void glRasterPos4sv(short*) = RasterPos4sv;
extern void glReadBuffer(int) = ReadBuffer;
extern void glReadPixels(int,int,int,int,int,int,void*) = ReadPixels;
extern void glRectd(double,double,double,double) = Rectd;
extern void glRectdv(double*,double*) = Rectdv;
extern void glRectf(float,float,float,float) = Rectf;
extern void glRectfv(float*,float*) = Rectfv;
extern void glRecti(int,int,int,int) = Recti;
extern void glRectiv(int*,int*) = Rectiv;
extern void glRects(short,short,short,short) = Rects;
extern void glRectsv(short*,short*) = Rectsv;
extern int glRenderMode(int) = RenderMode;
extern void glRotated(double,double,double,double) = Rotated;
extern void glRotatef(float,float,float,float) = Rotatef;
extern void glScaled(double,double,double) = Scaled;
extern void glScalef(float,float,float) = Scalef;
extern void glScissor(int,int,int,int) = Scissor;
extern void glSelectBuffer(int,int*) = SelectBuffer;
extern void glShadeModel(int) = ShadeModel;
extern void glStencilFunc(int,int,int) = StencilFunc;
extern void glStencilMask(int) = StencilMask;
extern void glStencilOp(int,int,int) = StencilOp;
extern void glTexCoord1d(double) = TexCoord1d;
extern void glTexCoord1dv(double*) = TexCoord1dv;
extern void glTexCoord1f(float) = TexCoord1f;
extern void glTexCoord1fv(float*) = TexCoord1fv;
extern void glTexCoord1i(int) = TexCoord1i;
extern void glTexCoord1iv(int*) = TexCoord1iv;
extern void glTexCoord1s(short) = TexCoord1s;
extern void glTexCoord1sv(short*) = TexCoord1sv;
extern void glTexCoord2d(double,double) = TexCoord2d;
extern void glTexCoord2dv(double*) = TexCoord2dv;
extern void glTexCoord2f(float,float) = TexCoord2f;
extern void glTexCoord2fv(float*) = TexCoord2fv;
extern void glTexCoord2i(int,int) = TexCoord2i;
extern void glTexCoord2iv(int*) = TexCoord2iv;
extern void glTexCoord2s(short,short) = TexCoord2s;
extern void glTexCoord2sv(short*) = TexCoord2sv;
extern void glTexCoord3d(double,double,double) = TexCoord3d;
extern void glTexCoord3dv(double*) = TexCoord3dv;
extern void glTexCoord3f(float,float,float) = TexCoord3f;
extern void glTexCoord3fv(float*) = TexCoord3fv;
extern void glTexCoord3i(int,int,int) = TexCoord3i;
extern void glTexCoord3iv(int*) = TexCoord3iv;
extern void glTexCoord3s(short,short,short) = TexCoord3s;
extern void glTexCoord3sv(short*) = TexCoord3sv;
extern void glTexCoord4d(double,double,double,double) = TexCoord4d;
extern void glTexCoord4dv(double*) = TexCoord4dv;
extern void glTexCoord4f(float,float,float,float) = TexCoord4f;
extern void glTexCoord4fv(float*) = TexCoord4fv;
extern void glTexCoord4i(int,int,int,int) = TexCoord4i;
extern void glTexCoord4iv(int*) = TexCoord4iv;
extern void glTexCoord4s(short,short,short,short) = TexCoord4s;
extern void glTexCoord4sv(short*) = TexCoord4sv;
extern void glTexCoordPointer(int,int,int,void*) = TexCoordPointer;
extern void glTexEnvf(int,int,float) = TexEnvf;
extern void glTexEnvfv(int,int,float*) = TexEnvfv;
extern void glTexEnvi(int,int,int) = TexEnvi;
extern void glTexEnviv(int,int,int*) = TexEnviv;
extern void glTexGend(int,int,double) = TexGend;
extern void glTexGendv(int,int,double*) = TexGendv;
extern void glTexGenf(int,int,float) = TexGenf;
extern void glTexGenfv(int,int,float*) = TexGenfv;
extern void glTexGeni(int,int,int) = TexGeni;
extern void glTexGeniv(int,int,int*) = TexGeniv;
extern void glTexImage1D(int,int,int,int,int,int,int,void*) = TexImage1D;
extern void glTexImage2D(int,int,int,int,int,int,int,int,void*) = TexImage2D;
extern void glTexParameterf(int,int,float) = TexParameterf;
extern void glTexParameterfv(int,int,float*) = TexParameterfv;
extern void glTexParameteri(int,int,int) = TexParameteri;
extern void glTexParameteriv(int,int,int*) = TexParameteriv;
extern void glTexSubImage1D(int,int,int,int,int,int,void*) = TexSubImage1D;
extern void glTexSubImage2D(int,int,int,int,int,int,int,int,void*) = TexSubImage2D;
extern void glTranslated(double,double,double) = Translated;
extern void glTranslatef(float,float,float) = Translatef;
extern void glVertex2d(double,double) = Vertex2d;
extern void glVertex2dv(double*) = Vertex2dv;
extern void glVertex2f(float,float) = Vertex2f;
extern void glVertex2fv(float*) = Vertex2fv;
extern void glVertex2i(int,int) = Vertex2i;
extern void glVertex2iv(int*) = Vertex2iv;
extern void glVertex2s(short,short) = Vertex2s;
extern void glVertex2sv(short*) = Vertex2sv;
extern void glVertex3d(double,double,double) = Vertex3d;
extern void glVertex3dv(double*) = Vertex3dv;
extern void glVertex3f(float,float,float) = Vertex3f;
extern void glVertex3fv(float*) = Vertex3fv;
extern void glVertex3i(int,int,int) = Vertex3i;
extern void glVertex3iv(int*) = Vertex3iv;
extern void glVertex3s(short,short,short) = Vertex3s;
extern void glVertex3sv(short*) = Vertex3sv;
extern void glVertex4d(double,double,double,double) = Vertex4d;
extern void glVertex4dv(double*) = Vertex4dv;
extern void glVertex4f(float,float,float,float) = Vertex4f;
extern void glVertex4fv(float*) = Vertex4fv;
extern void glVertex4i(int,int,int,int) = Vertex4i;
extern void glVertex4iv(int*) = Vertex4iv;
extern void glVertex4s(short,short,short,short) = Vertex4s;
extern void glVertex4sv(short*) = Vertex4sv;
extern void glVertexPointer(int,int,int,void*) = VertexPointer;
extern void glViewport(int,int,int,int) = Viewport;
extern void glBlendColor(float,float,float,float) = BlendColor;
extern void glBlendEquation(int) = BlendEquation;
extern void glDrawRangeElements(int,int,int,int,int,void*) = DrawRangeElements;
extern void glColorTable(int,int,int,int,int,void*) = ColorTable;
extern void glColorTableParameterfv(int,int,float*) = ColorTableParameterfv;
extern void glColorTableParameteriv(int,int,int*) = ColorTableParameteriv;
extern void glCopyColorTable(int,int,int,int,int) = CopyColorTable;
extern void glGetColorTable(int,int,int,void*) = GetColorTable;
extern void glGetColorTableParameterfv(int,int,float*) = GetColorTableParameterfv;
extern void glGetColorTableParameteriv(int,int,int*) = GetColorTableParameteriv;
extern void glColorSubTable(int,int,int,int,int,void*) = ColorSubTable;
extern void glCopyColorSubTable(int,int,int,int,int) = CopyColorSubTable;
extern void glConvolutionFilter1D(int,int,int,int,int,void*) = ConvolutionFilter1D;
extern void glConvolutionFilter2D(int,int,int,int,int,int,void*) = ConvolutionFilter2D;
extern void glConvolutionParameterf(int,int,float) = ConvolutionParameterf;
extern void glConvolutionParameterfv(int,int,float*) = ConvolutionParameterfv;
extern void glConvolutionParameteri(int,int,int) = ConvolutionParameteri;
extern void glConvolutionParameteriv(int,int,int*) = ConvolutionParameteriv;
extern void glCopyConvolutionFilter1D(int,int,int,int,int) = CopyConvolutionFilter1D;
extern void glCopyConvolutionFilter2D(int,int,int,int,int,int) = CopyConvolutionFilter2D;
extern void glGetConvolutionFilter(int,int,int,void*) = GetConvolutionFilter;
extern void glGetConvolutionParameterfv(int,int,float*) = GetConvolutionParameterfv;
extern void glGetConvolutionParameteriv(int,int,int*) = GetConvolutionParameteriv;
extern void glGetSeparableFilter(int,int,int,void*,void*,void*) = GetSeparableFilter;
extern void glSeparableFilter2D(int,int,int,int,int,int,void*,void*) = SeparableFilter2D;
extern void glGetHistogram(int,char,int,int,void*) = GetHistogram;
extern void glGetHistogramParameterfv(int,int,float*) = GetHistogramParameterfv;
extern void glGetHistogramParameteriv(int,int,int*) = GetHistogramParameteriv;
extern void glGetMinmax(int,char,int,int,void*) = GetMinmax;
extern void glGetMinmaxParameterfv(int,int,float*) = GetMinmaxParameterfv;
extern void glGetMinmaxParameteriv(int,int,int*) = GetMinmaxParameteriv;
extern void glHistogram(int,int,int,char) = Histogram;
extern void glMinmax(int,int,char) = Minmax;
extern void glResetHistogram(int) = ResetHistogram;
extern void glResetMinmax(int) = ResetMinmax;
extern void glTexImage3D(int,int,int,int,int,int,int,int,int,void*) = TexImage3D;
extern void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,void*) = TexSubImage3D;
extern void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int) = CopyTexSubImage3D;
extern void glActiveTexture(int) = ActiveTexture;
extern void glClientActiveTexture(int) = ClientActiveTexture;
extern void glMultiTexCoord1d(int,double) = MultiTexCoord1d;
extern void glMultiTexCoord1dv(int,double*) = MultiTexCoord1dv;
extern void glMultiTexCoord1f(int,float) = MultiTexCoord1f;
extern void glMultiTexCoord1fv(int,float*) = MultiTexCoord1fv;
extern void glMultiTexCoord1i(int,int) = MultiTexCoord1i;
extern void glMultiTexCoord1iv(int,int*) = MultiTexCoord1iv;
extern void glMultiTexCoord1s(int,short) = MultiTexCoord1s;
extern void glMultiTexCoord1sv(int,short*) = MultiTexCoord1sv;
extern void glMultiTexCoord2d(int,double,double) = MultiTexCoord2d;
extern void glMultiTexCoord2dv(int,double*) = MultiTexCoord2dv;
extern void glMultiTexCoord2f(int,float,float) = MultiTexCoord2f;
extern void glMultiTexCoord2fv(int,float*) = MultiTexCoord2fv;
extern void glMultiTexCoord2i(int,int,int) = MultiTexCoord2i;
extern void glMultiTexCoord2iv(int,int*) = MultiTexCoord2iv;
extern void glMultiTexCoord2s(int,short,short) = MultiTexCoord2s;
extern void glMultiTexCoord2sv(int,short*) = MultiTexCoord2sv;
extern void glMultiTexCoord3d(int,double,double,double) = MultiTexCoord3d;
extern void glMultiTexCoord3dv(int,double*) = MultiTexCoord3dv;
extern void glMultiTexCoord3f(int,float,float,float) = MultiTexCoord3f;
extern void glMultiTexCoord3fv(int,float*) = MultiTexCoord3fv;
extern void glMultiTexCoord3i(int,int,int,int) = MultiTexCoord3i;
extern void glMultiTexCoord3iv(int,int*) = MultiTexCoord3iv;
extern void glMultiTexCoord3s(int,short,short,short) = MultiTexCoord3s;
extern void glMultiTexCoord3sv(int,short*) = MultiTexCoord3sv;
extern void glMultiTexCoord4d(int,double,double,double,double) = MultiTexCoord4d;
extern void glMultiTexCoord4dv(int,double*) = MultiTexCoord4dv;
extern void glMultiTexCoord4f(int,float,float,float,float) = MultiTexCoord4f;
extern void glMultiTexCoord4fv(int,float*) = MultiTexCoord4fv;
extern void glMultiTexCoord4i(int,int,int,int,int) = MultiTexCoord4i;
extern void glMultiTexCoord4iv(int,int*) = MultiTexCoord4iv;
extern void glMultiTexCoord4s(int,short,short,short,short) = MultiTexCoord4s;
extern void glMultiTexCoord4sv(int,short*) = MultiTexCoord4sv;
extern void glLoadTransposeMatrixf(float*) = LoadTransposeMatrixf;
extern void glLoadTransposeMatrixd(double*) = LoadTransposeMatrixd;
extern void glMultTransposeMatrixf(float*) = MultTransposeMatrixf;
extern void glMultTransposeMatrixd(double*) = MultTransposeMatrixd;
extern void glSampleCoverage(float,char) = SampleCoverage;
extern void glCompressedTexImage3D(int,int,int,int,int,int,int,int,void*) = CompressedTexImage3D;
extern void glCompressedTexImage2D(int,int,int,int,int,int,int,void*) = CompressedTexImage2D;
extern void glCompressedTexImage1D(int,int,int,int,int,int,void*) = CompressedTexImage1D;
extern void glCompressedTexSubImage3D(int,int,int,int,int,int,int,int,int,int,void*) = CompressedTexSubImage3D;
extern void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,void*) = CompressedTexSubImage2D;
extern void glCompressedTexSubImage1D(int,int,int,int,int,int,void*) = CompressedTexSubImage1D;
extern void glGetCompressedTexImage(int,int,void*) = GetCompressedTexImage;
extern void glBlendFuncSeparate(int,int,int,int) = BlendFuncSeparate;
extern void glFogCoordf(float) = FogCoordf;
extern void glFogCoordfv(float*) = FogCoordfv;
extern void glFogCoordd(double) = FogCoordd;
extern void glFogCoorddv(double*) = FogCoorddv;
extern void glFogCoordPointer(int,int,void*) = FogCoordPointer;
extern void glMultiDrawArrays(int,int*,int*,int) = MultiDrawArrays;
extern void glMultiDrawElements(int,int*,int,void**,int) = MultiDrawElements;
extern void glPointParameterf(int,float) = PointParameterf;
extern void glPointParameterfv(int,float*) = PointParameterfv;
extern void glPointParameteri(int,int) = PointParameteri;
extern void glPointParameteriv(int,int*) = PointParameteriv;
extern void glSecondaryColor3b(char,char,char) = SecondaryColor3b;
extern void glSecondaryColor3bv(char*) = SecondaryColor3bv;
extern void glSecondaryColor3d(double,double,double) = SecondaryColor3d;
extern void glSecondaryColor3dv(double*) = SecondaryColor3dv;
extern void glSecondaryColor3f(float,float,float) = SecondaryColor3f;
extern void glSecondaryColor3fv(float*) = SecondaryColor3fv;
extern void glSecondaryColor3i(int,int,int) = SecondaryColor3i;
extern void glSecondaryColor3iv(int*) = SecondaryColor3iv;
extern void glSecondaryColor3s(short,short,short) = SecondaryColor3s;
extern void glSecondaryColor3sv(short*) = SecondaryColor3sv;
extern void glSecondaryColor3ub(char,char,char) = SecondaryColor3ub;
extern void glSecondaryColor3ubv(char*) = SecondaryColor3ubv;
extern void glSecondaryColor3ui(int,int,int) = SecondaryColor3ui;
extern void glSecondaryColor3uiv(int*) = SecondaryColor3uiv;
extern void glSecondaryColor3us(short,short,short) = SecondaryColor3us;
extern void glSecondaryColor3usv(short*) = SecondaryColor3usv;
extern void glSecondaryColorPointer(int,int,int,void*) = SecondaryColorPointer;
extern void glWindowPos2d(double,double) = WindowPos2d;
extern void glWindowPos2dv(double*) = WindowPos2dv;
extern void glWindowPos2f(float,float) = WindowPos2f;
extern void glWindowPos2fv(float*) = WindowPos2fv;
extern void glWindowPos2i(int,int) = WindowPos2i;
extern void glWindowPos2iv(int*) = WindowPos2iv;
extern void glWindowPos2s(short,short) = WindowPos2s;
extern void glWindowPos2sv(short*) = WindowPos2sv;
extern void glWindowPos3d(double,double,double) = WindowPos3d;
extern void glWindowPos3dv(double*) = WindowPos3dv;
extern void glWindowPos3f(float,float,float) = WindowPos3f;
extern void glWindowPos3fv(float*) = WindowPos3fv;
extern void glWindowPos3i(int,int,int) = WindowPos3i;
extern void glWindowPos3iv(int*) = WindowPos3iv;
extern void glWindowPos3s(short,short,short) = WindowPos3s;
extern void glWindowPos3sv(short*) = WindowPos3sv;
extern void glGenQueries(int,int*) = GenQueries;
extern void glDeleteQueries(int,int*) = DeleteQueries;
extern char glIsQuery(int) = IsQuery;
extern void glBeginQuery(int,int) = BeginQuery;
extern void glEndQuery(int) = EndQuery;
extern void glGetQueryiv(int,int,int*) = GetQueryiv;
extern void glGetQueryObjectiv(int,int,int*) = GetQueryObjectiv;
extern void glGetQueryObjectuiv(int,int,int*) = GetQueryObjectuiv;
extern void glBindBuffer(int,int) = BindBuffer;
extern void glDeleteBuffers(int,int*) = DeleteBuffers;
extern void glGenBuffers(int,int*) = GenBuffers;
extern char glIsBuffer(int) = IsBuffer;
extern void glBufferData(int,int,void*,int) = BufferData;
extern void glBufferSubData(int,int,int,void*) = BufferSubData;
extern void glGetBufferSubData(int,int,int,void*) = GetBufferSubData;
extern void* glMapBuffer(int,int) = MapBuffer;
extern char glUnmapBuffer(int) = UnmapBuffer;
extern void glGetBufferParameteriv(int,int,int*) = GetBufferParameteriv;
extern void glGetBufferPointerv(int,int,void**) = GetBufferPointerv;
extern void glBlendEquationSeparate(int,int) = BlendEquationSeparate;
extern void glDrawBuffers(int,int*) = DrawBuffers;
extern void glStencilOpSeparate(int,int,int,int) = StencilOpSeparate;
extern void glStencilFuncSeparate(int,int,int,int) = StencilFuncSeparate;
extern void glStencilMaskSeparate(int,int) = StencilMaskSeparate;
extern void glAttachShader(int,int) = AttachShader;
extern void glBindAttribLocation(int,int,char*) = BindAttribLocation;
extern void glCompileShader(int) = CompileShader;
extern int glCreateProgram() = CreateProgram;
extern int glCreateShader(int) = CreateShader;
extern void glDeleteProgram(int) = DeleteProgram;
extern void glDeleteShader(int) = DeleteShader;
extern void glDetachShader(int,int) = DetachShader;
extern void glDisableVertexAttribArray(int) = DisableVertexAttribArray;
extern void glEnableVertexAttribArray(int) = EnableVertexAttribArray;
extern void glGetActiveAttrib(int,int,int,int*,int*,int*,char*) = GetActiveAttrib;
extern void glGetActiveUniform(int,int,int,int*,int*,int*,char*) = GetActiveUniform;
extern void glGetAttachedShaders(int,int,int*,int*) = GetAttachedShaders;
extern int glGetAttribLocation(int,char*) = GetAttribLocation;
extern void glGetProgramiv(int,int,int*) = GetProgramiv;
extern void glGetProgramInfoLog(int,int,int*,char*) = GetProgramInfoLog;
extern void glGetShaderiv(int,int,int*) = GetShaderiv;
extern void glGetShaderInfoLog(int,int,int*,char*) = GetShaderInfoLog;
extern void glGetShaderSource(int,int,int*,char*) = GetShaderSource;
extern int glGetUniformLocation(int,char*) = GetUniformLocation;
extern void glGetUniformfv(int,int,float*) = GetUniformfv;
extern void glGetUniformiv(int,int,int*) = GetUniformiv;
extern void glGetVertexAttribdv(int,int,double*) = GetVertexAttribdv;
extern void glGetVertexAttribfv(int,int,float*) = GetVertexAttribfv;
extern void glGetVertexAttribiv(int,int,int*) = GetVertexAttribiv;
extern void glGetVertexAttribPointerv(int,int,void**) = GetVertexAttribPointerv;
extern char glIsProgram(int) = IsProgram;
extern char glIsShader(int) = IsShader;
extern void glLinkProgram(int) = LinkProgram;
extern void glShaderSource(int,int,char**,int*) = ShaderSource;
extern void glUseProgram(int) = UseProgram;
extern void glUniform1f(int,float) = Uniform1f;
extern void glUniform2f(int,float,float) = Uniform2f;
extern void glUniform3f(int,float,float,float) = Uniform3f;
extern void glUniform4f(int,float,float,float,float) = Uniform4f;
extern void glUniform1i(int,int) = Uniform1i;
extern void glUniform2i(int,int,int) = Uniform2i;
extern void glUniform3i(int,int,int,int) = Uniform3i;
extern void glUniform4i(int,int,int,int,int) = Uniform4i;
extern void glUniform1fv(int,int,float*) = Uniform1fv;
extern void glUniform2fv(int,int,float*) = Uniform2fv;
extern void glUniform3fv(int,int,float*) = Uniform3fv;
extern void glUniform4fv(int,int,float*) = Uniform4fv;
extern void glUniform1iv(int,int,int*) = Uniform1iv;
extern void glUniform2iv(int,int,int*) = Uniform2iv;
extern void glUniform3iv(int,int,int*) = Uniform3iv;
extern void glUniform4iv(int,int,int*) = Uniform4iv;
extern void glUniformMatrix2fv(int,int,char,float*) = UniformMatrix2fv;
extern void glUniformMatrix3fv(int,int,char,float*) = UniformMatrix3fv;
extern void glUniformMatrix4fv(int,int,char,float*) = UniformMatrix4fv;
extern void glValidateProgram(int) = ValidateProgram;
extern void glVertexAttrib1d(int,double) = VertexAttrib1d;
extern void glVertexAttrib1dv(int,double*) = VertexAttrib1dv;
extern void glVertexAttrib1f(int,float) = VertexAttrib1f;
extern void glVertexAttrib1fv(int,float*) = VertexAttrib1fv;
extern void glVertexAttrib1s(int,short) = VertexAttrib1s;
extern void glVertexAttrib1sv(int,short*) = VertexAttrib1sv;
extern void glVertexAttrib2d(int,double,double) = VertexAttrib2d;
extern void glVertexAttrib2dv(int,double*) = VertexAttrib2dv;
extern void glVertexAttrib2f(int,float,float) = VertexAttrib2f;
extern void glVertexAttrib2fv(int,float*) = VertexAttrib2fv;
extern void glVertexAttrib2s(int,short,short) = VertexAttrib2s;
extern void glVertexAttrib2sv(int,short*) = VertexAttrib2sv;
extern void glVertexAttrib3d(int,double,double,double) = VertexAttrib3d;
extern void glVertexAttrib3dv(int,double*) = VertexAttrib3dv;
extern void glVertexAttrib3f(int,float,float,float) = VertexAttrib3f;
extern void glVertexAttrib3fv(int,float*) = VertexAttrib3fv;
extern void glVertexAttrib3s(int,short,short,short) = VertexAttrib3s;
extern void glVertexAttrib3sv(int,short*) = VertexAttrib3sv;
extern void glVertexAttrib4Nbv(int,char*) = VertexAttrib4Nbv;
extern void glVertexAttrib4Niv(int,int*) = VertexAttrib4Niv;
extern void glVertexAttrib4Nsv(int,short*) = VertexAttrib4Nsv;
extern void glVertexAttrib4Nub(int,char,char,char,char) = VertexAttrib4Nub;
extern void glVertexAttrib4Nubv(int,char*) = VertexAttrib4Nubv;
extern void glVertexAttrib4Nuiv(int,int*) = VertexAttrib4Nuiv;
extern void glVertexAttrib4Nusv(int,short*) = VertexAttrib4Nusv;
extern void glVertexAttrib4bv(int,char*) = VertexAttrib4bv;
extern void glVertexAttrib4d(int,double,double,double,double) = VertexAttrib4d;
extern void glVertexAttrib4dv(int,double*) = VertexAttrib4dv;
extern void glVertexAttrib4f(int,float,float,float,float) = VertexAttrib4f;
extern void glVertexAttrib4fv(int,float*) = VertexAttrib4fv;
extern void glVertexAttrib4iv(int,int*) = VertexAttrib4iv;
extern void glVertexAttrib4s(int,short,short,short,short) = VertexAttrib4s;
extern void glVertexAttrib4sv(int,short*) = VertexAttrib4sv;
extern void glVertexAttrib4ubv(int,char*) = VertexAttrib4ubv;
extern void glVertexAttrib4uiv(int,int*) = VertexAttrib4uiv;
extern void glVertexAttrib4usv(int,short*) = VertexAttrib4usv;
extern void glVertexAttribPointer(int,int,int,char,int,void*) = VertexAttribPointer;
extern void glUniformMatrix2x3fv(int,int,char,float*) = UniformMatrix2x3fv;
extern void glUniformMatrix3x2fv(int,int,char,float*) = UniformMatrix3x2fv;
extern void glUniformMatrix2x4fv(int,int,char,float*) = UniformMatrix2x4fv;
extern void glUniformMatrix4x2fv(int,int,char,float*) = UniformMatrix4x2fv;
extern void glUniformMatrix3x4fv(int,int,char,float*) = UniformMatrix3x4fv;
extern void glUniformMatrix4x3fv(int,int,char,float*) = UniformMatrix4x3fv;
